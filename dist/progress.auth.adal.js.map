{"version":3,"sources":["webpack/bootstrap 75db10df02477cbc8a6a","C:/Users/roh/repos/jsdo.adal.js/lib\\progress.loader.js","C:/Users/roh/repos/jsdo.adal.js/lib\\progress.auth.adal.js","C:/Users/roh/repos/jsdo.adal.js/JSDO\\src\\progress.util.js","C:/Users/roh/repos/jsdo.adal.js/JSDO\\src\\progress.session.js","C:/Users/roh/repos/jsdo.adal.js/JSDO\\src\\progress.js","C:/Users/roh/repos/jsdo.adal.js/JSDO\\src\\auth\\progress.auth.js","C:\\Users\\roh\\repos\\jsdo.adal.js\\node_modules\\adal-angular\\lib\\adal.js"],"names":["progress","window","AuthenticationContext","data","AuthenticationProviderAdal","uri","adalConfig","authContext","callback","isCallback","location","hash","handleWindowCallback","_initialize","Session","AUTH_TYPE_ADAL","AuthenticationProvider","_homeLoginURIBase","setAuthorizationHeader","xhr","resource","getResourceForEndpoint","dfd","$","Deferred","acquireToken","error","token","reject","setRequestHeader","resolve","promise","_reset","prototype","apply","hasClientCredentials","getCachedUser","getCachedToken","clientId","_loginProto","sendParam","deferred","uriForRequest","header","that","login","_loggedIn","Error","_getMsgText","XMLHttpRequest","onreadystatechange","readyState","_processLoginResult","_useTimeStamp","_addTimeStampToURL","_loginURI","_openLoginRequest","then","send","arguments","_openRequestAndAuthorize","verb","async","open","_setNoCacheHeaders","util","STRING_OBJECT_TYPE","DATE_OBJECT_TYPE","CHARACTER_ABL_TYPE","Observable","_filterObservers","observers","fn","scope","operation","filter","el","validateSubscribe","args","evt","listenerData","length","undefined","subscribe","toString","_events","toLowerCase","e","message","push","unsubscribe","trigger","op","Array","slice","call","forEach","unsubscribeAll","LocalStorage","localStorage","saveToLocalStorage","name","dataObj","setItem","JSON","stringify","readFromLocalStorage","jsonStr","getItem","parse","clearLocalStorage","removeItem","_convertToABLWhereString","tableRef","result","logic","idx","field","fieldInfo","type","format","operator","value","ablType","filters","whereOperators","eq","neq","gt","gte","lt","lte","contains","doesnotcontain","endswith","startswith","isnull","isnotnull","isempty","isnotempty","_name","_jsdo","_fields","origName","_getObjectType","replace","_getABLType","_format","join","_convertToSQLQueryString","addSelect","fieldFormat","filterStr","usingLike","_getFormat","Object","fmt","values","formatRegExp","match","index","placeholderFormat","parseInt","_toString","substring","str","_formatDate","_pad","number","digits","zeros","end","String","date","dateFormatRegExp","minutes","sign","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds","getTime","getTimezoneOffset","toISOString","jsdoSettingsProcessor","jsdoSettings","authenticationModel","ServicesManager","_services","_resources","_data","_sessions","_jsdosessions","addResource","id","getResource","addService","service","getService","addSession","catalogURI","session","addJSDOSession","jsdosession","getSession","cleanSession","servicesKey","resourcesKey","sessionsKey","services","resources","sessions","jsdosessions","_session","extractParamsFromURL","url","urlParams","paramName","i","charAt","addCatalog","j","baseAddress","address","path","fields","primaryKeys","schema","_dataSetName","_tempTableName","properties","keys","items","dataProperty","primaryKey","tableName","tableProperties","relations","RelationName","generic","operations","params","opname","func","object","fnName","definition","reqBody","jsdo","request","objParam","constructor","_async","Boolean","isInvoke","toUpperCase","indexOf","RegExp","encodeURIComponent","reqParam","xType","unwrapped","_resource","settings","paramsFromURL","_httpRequest","printDebugInfo","resourceName","cSchema","cOperations","console","log","MobileServiceObject","defineProperty","get","enumerable","_uri","ContextProperties","contextObject","contextString","setContextProperty","propertyName","propertyValue","setContext","context","prop","hasOwnProperty","getContext","getContextProperty","options","defPropSupported","isUserAgentiOS","isFirefox","isEdge","isIE","canPassCredentialsToOpenWithCORS","defaultiOSBasicAuthTimeout","deviceIsOnline","restApplicationIsOnline","oepingAvailable","defaultPartialPingURI","partialPingURI","_storageKey","_authProvider","customCredentials","storedAuthModel","storedURI","newURI","stateWasReadFromStorage","_silent","warn","navigator","userAgent","canPassCredentialsToOpen","_onlineHandler","setDeviceIsOnline","_offlineHandler","DEVICE_OFFLINE","addEventListener","_catalogURIs","_jsdos","onOpenRequest","_password","_userName","_loginTarget","_serviceURI","_loginResult","_loginHttpStatus","_clientContextId","_authenticationModel","AUTH_TYPE_ANON","set","newval","AUTH_TYPE_FORM","AUTH_TYPE_BASIC","AUTH_TYPE_SSO","storeSessionInfo","_lastSessionXHR","loginResult","LOGIN_SUCCESS","_pingInterval","_timeoutID","setTimeout","_autoping","clearTimeout","_contextProperties","isInvalidated","setAuthProvider","userName","loginTarget","serviceURI","catalogURIs","loginHttpStatus","clientContextId","lastSessionXHR","infoName","key","sessionStorage","retrieveSessionInfo","clearSessionInfo","storeAllSessionInfo","pingInterval","clearAllSessionInfo","setSessionInfoFromStorage","authproviderInitObject","authProvider","setLoginResult","setUserName","setServiceURI","setLoginHttpStatus","setClientContextID","setRestApplicationIsOnline","setOepingAvailable","setPartialPingURI","newname","sessionObject","setLoginTarget","target","pushCatalogURIs","pushService","serviceObject","findService","serviceName","srv","status","setClientContextIDfromXHR","getResponseHeaderNoError","ccid","setLastSessionXHR","headerName","allHeaders","_pdsResponseHeaders","regExp","getAllResponseHeaders","getResponseHeader","_pushJSDOs","_openRequest","urlPlusCCID","afterOpenAndAuthorize","setRequestHeaderFromContextProps","_isInvalidated","_prependAppURL","_addCCIDtoURL","_setXHRCredentials","_addWithCredentialsAndAccept","pingTestCallback","cbArgs","foundOeping","pingResult","_onReadyStateChangeGeneric","errorObject","_requestTimeout","onResponseFn","onResponseProcessedFn","GENERAL_FAILURE","pdsession","_disconnect","_processDisconnectResult","_reinitializeAfterLogout","SUCCESS","_disconnectComplete","errObj","pwSave","unameSave","loginUserName","loginPassword","uname","pw","isAsync","iOSBasicAuthTimeout","password","restURLtemp","LOGIN_GENERAL_FAILURE","_isAsync","_afterFormPretestLogin","_loginComplete","_iosTimeOutExpired","abort","_jsdosession","_deferred","isFormPreTest","ASYNC_PENDING","formLoginParams","doFormLogin","theSession","oldXHR","contentType","needAuth","handleJSONLoginResponse","statusFromjson","_gotLoginForm","cbparams","_afterFormLogin","_gotLoginFailure","_saveClientContextId","pingTestArgs","pingURI","onCompleteFn","fireEventIfOfflineChange","onReadyStateFn","_pingtestOnReadyStateChange","_makePingURI","_sendPing","LOGIN_AUTHENTICATION_FAILURE","updateContextPropsFromResponse","logout","_processLogoutResult","_logoutComplete","withCredentials","_anonymousLogoutOK","invalidate","cleanServicesManager","logoutSucceeded","basicStatusOK","success","arg1","arg2","arg3","arg4","catalogUserName","catalogPassword","catalogIndex","addCatalogAfterOpen","_processAddCatalogResult","_addCatalogComplete","_catalogIndex","offlineAddCatalog","_catalogURI","CATALOG_ALREADY_LOADED","_catalogHttpStatus","servicedata","serviceURL","theJSDOSession","toggleOnlineState","responseText","_parseCatalog","useXClientProps","xClientProps","_getAuthFailureReason","ping","pingArgs","_onReadyStateChangePing","offlineReason","doNotFireEvent","_processPingResult","_isOnlineStateChange","isOnline","stateChanged","connected","_checkServiceResponse","wasOnline","offlineObservers","onlineObservers","localPingArgs","pingResponseJSON","appServerStatus","connectedBeforeCallback","assumeOepingFormat","usingOepingFormat","AppServerStatus","SERVER_OFFLINE","WEB_APPLICATION_OFFLINE","PingStatus","APPSERVER_OFFLINE","sendPingAfterOpen","auth","_make_basic_auth","urlPart1","urlPart2","jsessionidStr","jsonObject","catalogdata","oldURL","newURL","pat","test","acceptString","user","tok","btoa","loginFormIDString","_findStringInResponseHTML","loginFailureIdentificationString","searchString","status_code","status_txt","contextHeader","SEQ_MAX_VALUE","_tsseq","_tsprefix1","_tsprefix2","_getNextTimeStamp","seq","t","Math","floor","Date","now","random","round","timeStamp","AUTHENTICATION_FAILURE","validateSessionSubscribe","found","_eventNames","radix","JSDOSession","_pdsession","JSDOs","settlePromise","fulfill","info","genericSessionEventHandler","myDeferred","onAfterAddCatalog","settleResult","EXPIRED_TOKEN","_overallCatalogResult","_results","_numCatalogsProcessed","_numCatalogs","_processedPromise","onAfterLogout","onPingComplete","username","callIsAuthorized","isAuthorized","provider","disconnect","unameOrOpts","opts","numCatalogs","addResult","authProv","cbresult","fakePingArgs","LOGIN_AUTHENTICATION_REQUIRED","AUTH_TYPE_FORM_SSO","err","validateJSDOSessionSubscribe","authProviderInitObject","sessionRejectHandler","originator","always","callbackRejectHandler","reason","loginHandler","callLogin","loginCallback","authenticationURI","authProviderAuthenticationModel","authConfig","invalidateAllSessions","invalidatePromises","when","exports","PROGRESS_JSDO_PCT_MAX_EMPTY_BLOCKS","PROGRESS_JSDO_OP_STRING","PROGRESS_JSDO_ROW_STATE_STRING","_nextid","_uidprefix","UID_MAX_VALUE","_getNextId","uid","msg","msgs","jsdoMSG000","jsdoMSG001","jsdoMSG002","jsdoMSG003","jsdoMSG004","jsdoMSG005","jsdoMSG006","jsdoMSG007","jsdoMSG008","jsdoMSG009","jsdoMSG010","jsdoMSG011","jsdoMSG012","jsdoMSG020","jsdoMSG021","jsdoMSG022","jsdoMSG023","jsdoMSG024","jsdoMSG025","jsdoMSG026","jsdoMSG030","jsdoMSG031","jsdoMSG032","jsdoMSG033","jsdoMSG034","jsdoMSG035","jsdoMSG036","jsdoMSG037","jsdoMSG038","jsdoMSG039","jsdoMSG040","jsdoMSG041","jsdoMSG042","jsdoMSG043","jsdoMSG044","jsdoMSG045","jsdoMSG046","jsdoMSG047","jsdoMSG048","jsdoMSG049","jsdoMSG050","jsdoMSG051","jsdoMSG052","jsdoMSG053","jsdoMSG054","jsdoMSG055","jsdoMSG056","jsdoMSG057","jsdoMSG058","jsdoMSG059","jsdoMSG060","jsdoMSG061","jsdoMSG100","jsdoMSG101","jsdoMSG110","jsdoMSG111","jsdoMSG112","jsdoMSG113","jsdoMSG114","jsdoMSG115","jsdoMSG116","jsdoMSG117","jsdoMSG118","jsdoMSG119","jsdoMSG120","jsdoMSG121","jsdoMSG122","jsdoMSG123","jsdoMSG124","jsdoMSG125","jsdoMSG126","jsdoMSG127","jsdoMSG500","jsdoMSG501","jsdoMSG502","jsdoMSG503","jsdoMSG504","jsdoMSG505","jsdoMSG506","jsdoMSG507","jsdoMSG508","jsdoMSG509","jsdoMSG510","jsdoMSG511","jsdoMSG998","getMsgText","n","text","PluginManager","_plugins","addPlugin","plugin","getPlugin","JSIndexEntry","JSTableRef","_schema","_primaryKeys","_processed","_visited","record","_index","_hasEmptyBlocks","_beforeImage","_added","_changed","_deleted","_lastErrors","_convertForServer","_createIndex","block","idProperty","_id","_needCompaction","_compact","newDataArray","_loadBeforeImageData","beforeImageJsonIndex","keyFields","prodsBeforeData","tmpIndex","record2","recordId","tmpKeyIndex","jsrecord","tmpDataIndex","tmpDeletedIndex","_findById","_getKey","key2","_remove","copy","_copyRecord","_tableRef","_deleteProdsProperties","JSRecord","tableObject","beforeRecord","prodsErrors","item","_errorString","_clearData","_setRecord","hasData","_nestChildren","_getDataWithNestedChildren","_getRelatedData","getData","numEmptyBlocks","sort","top","sortFields","dir","sortObject","_processSortFields","_getCompareFn","skip","splice","_recToDataObject","includeChildren","array","dataObject","_children","_buffers","_dataProperty","_recFromDataObject","getSchema","setSchema","fieldName","add","_add","create","trackChanges","setWorkingRecord","prefixElement","maxItems","_getDefaultValue","_getArrayField","_convertType","useRelationships","_relationship","_parent","childFieldName","parentFieldName","v","autoSort","_sortRecords","_sortFn","_sortObject","_needsAutoSorting","_sort","ret","_compareFields","parentRecord","childBuf","_isNested","k","childRecord","m","_hasNestedChild","_findFirst","ignoreRelationships","childTable","_defaultTableRef","assign","update","remove","bTrackChanges","getId","getErrors","getErrorString","findById","find","foreach","_inforeach","_equalRecord","rec1","rec2","value1","value2","caseSensitive","keyObject","jsrec1","jsrec2","sortAscending","_autoSort","writeable","_caseSensitive","sortOrder","setSortFields","setSortFn","addRecords","addMode","_addRecords","acceptChanges","rejectChanges","_undoCreate","_undoUpdate","_undoDelete","hasChanges","getChanges","rowState","JSDO","_OP_CREATE","_OP_UPDATE","_OP_DELETE","_applyChanges","_rejected","acceptRowChanges","rejectRowChanges","hasNestedChild","childBufObj","_saveBeforeImageUpdate","_sortRecord","resNameOrParmObj","_super","_defineProperty","fnGet","element","ARRAY_INDEX_SEPARATOR","isNaN","_numBuffers","_hasCUDOperations","_hasSubmitOperation","_useSubmit","autoApplyChanges","_localStorage","autoFill","eventName","buffer","myservice","buf","_properties","trim","$ref","relationship","childName","parentName","relationFields","defaultValue","d","isDate","arrayFieldName","isDataSet","_invokeComplete","_invokeSuccess","_invokeError","method","afterOpenRequest","input","exception","onSuccessFn","onErrorFn","onReadyStateChangeGeneric","useRequest","_getDataObject","oldUseRelationships","_getDataObjectAsNested","bufObj","_unnestData","obj","itemType","elements","split","convertItem","parseFloat","_clearErrors","_setAllRecordsRejected","param","changes","hasErrors","hasRejected","hasCommittedRecords","_allRecordsRejected","_someRecordsRejected","fill","mapping","getMethodProperties","mappingType","requestMapping","capabilities","_fillSuccess","_fillError","_fillComplete","read","_execGenericOperation","_convertRequestData","operationStr","_OP_READ","_OP_SUBMIT","_initConvertForServer","_convertFieldsForServer","_ablTypeNeedsConversion","beforeData","_convertTableData","tableData","_convertRowData","_convertField","resultArray","_convertDate","needsConversion","_undefWorkingRecord","saveChanges","useSubmit","_checkThatJSDOHasRequiredOperations","_syncDataSetForSubmit","_syncDataSetForCUD","_syncSingleTable","checkedDelete","checkedCreate","checkedUpdate","_confirmOperationExists","invoke","_syncTableRef","batch","rowData","requestData","_useBeforeImage","dataSetObject","_createComplete","_createSuccess","_createError","useBeforeImageFormat","beforeObject","beforeRowData","sendOnlyChanges","_updateComplete","_updateSuccess","_updateError","childTableName","_deleteComplete","_deleteSuccess","_deleteError","opType","useBeforeImage","_isBatchComplete","_isBatchSuccess","_updateLastErrors","_fireAfterSaveChanges","fireAfterSaveChanges","addedRecords","complete","completeFn","_saveChangesComplete","successFn","_saveChangesSuccess","errorFn","_saveChangesError","jsrecords","_createChangeSet","_createTTChangeSet","_saveChangesSuccessTT","dataSetName","alwaysCreateTable","changeSetJsonObject","dataSetJsonObject","_hasChanges","_addDeletesToChangeSet","_addCreatesToChangeSet","_addChangesToChangeSet","tempTableJsonObject","_addRowToTTChangeSet","event","_createDataAndChangeSet","_addRecordsToObject","_doesRecordHaveCreateBIData","_addCreatedRowToChangeSet","_doesRecordHaveUpdateBIData","_addChangedRowToChangeSet","changedId","hasUpdates","_addDeletedRowToChangeSet","beforeTableJsonObject","_getTableInBeforeJsonObject","MODE_EMPTY","source","onlyChangesRecord","newObject","clearErrorString","deleteRowState","beforeImageJsonObject","MODE_APPEND","MODE_MERGE","MODE_REPLACE","saveJsonObject","dataHasBeenProcessed","checkBeforeImage","isAfterSame","_sameData","isBeforeSame","_getBeforeRecordFromObject","afterRecord","tablename","record1","_mergeRead","datasetBuffer","srcData","_mergeUpdateRecord","_setErrorString","errorString","setInBeforeTable","_arrayFromDataObject","_mergeUpdateForCUD","hasError","tableJsonObject","prods_id","_getErrorStringFromJsonObject","_checkForDeleteError","beforeJsonObject","_mergeUpdateForSubmit","_fireCUDTriggersForSubmit","errorsJsonObject","responseMapping","response","entry","deleteProdsProps","_checkSaveComplete","records","_getErrorsFromRequest","errors","errorArray","retValString","responseObject","_retVal","RETVAL","_errors","_errorNum","_errorMsg","APP_ERROR","errorNum","ERROR","statusText","errorText","DATA_ERROR","_mergeInvoke","mergeMode","dataParameterName","concat","setProperties","propertiesObject","setProperty","getProperties","getProperty","saveLocal","dataMode","callee","ALL_DATA","CHANGES_ONLY","_prepareDataObjectForLocalStorage","readLocal","_hasMatchingSchema","_restoreFromLocalStorage","addLocalRecords","_containsPrimaryKeys","storageObject","isValid","deleteLocal","option","_restoreDataForTable","_operations","sortDir","ablFilter","sqlQuery","methodProperties","position","capabilitiesObject","reqCapabilities","doConversion","orderBy","ui","UITableRef","_listview","_detailPage","_listviewContent","addItem","detailForm","clearItems","itemTemplate","UIHelper","_itemTemplate","listviewElement","document","getElementById","innerHTML","_getFormFieldValue","detailPageName","val","_setFormField","display","pageName","showListView","uiTableRef","html","attr","filterable","listview","autoLink","each","bind","getListViewRecord","onSelect","childElementCount","children","onclick","uihelper","getFormFields","tmpFields","htmltext","fieldLabel","title","fieldTemplate","_fieldTemplate","htmlIElement","getAttribute","getFormRecord","_getIdOfElement","setDetailPage","setListView","pos","_defaultUITableRef","_uiTableRef","cnt","_defaultItemTemplate","_defaultFieldTemplate","setItemTemplate","template","setFieldTemplate","initObject","authModel","_checkStringArg","AuthenticationProviderBasic","AuthenticationProviderForm","AuthenticationProviderSSO","_storeInfo","_settlePromise","hasRefreshToken","uriParam","targetURIs","tempURI","_dataKeys","loggedIn","_storage","_retrieveLoggedIn","_retrieveInfoItem","propName","_retrieveURI","_clearInfo","argToCheck","argPosition","argName","_springLoginURIBase"],"mappings":"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BpR,SAASG,IAAT,CAAca,sBAApC,EAA4D,gCAA5D,EAA8F;AAC1F0G,eAAO,+BADmF;AAE1F4J,oBAAY;AAF8E,KAA9F;AAKH,CA/aA,GAAD,C;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM,4BAA4B,oBAAoB;AACzE,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,eAAe;AAClC,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,8CAA8C,eAAe;AAC7D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,8DAA8D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,mCAAmC;AAC9D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;;AAEA;AACA;AACA,sEAAsE;AACtE;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;AACA,2BAA2B,2CAA2C;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA,iBAAiB;AACjmDAAmD;AACnD,4DAA4D;AAC5D,gFAAgF;AAChF,0DAA0D;AAC1D,yEAAyE;AACzE,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,8DAA8D;AAC9D,kFAAkF;AAClF,4DAA4D;AAC5D,2EAA2E;AAC3E,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC","file":"./dist/progress.auth.adal.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 75db10df02477cbc8a6a","const progress = {};\r\nexport default progress;\n\n\n// WEBPACK FOOTER //\n// ./lib/progress.loader.js","/*\r\n * progress.auth.adal.js\r\n * http://github.com/RobinHerbots/jsdo.adal\r\n * Copyright (c) 2018 -\tRobin Herbots\r\n * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\r\n * Version: 0.0.0-dev\r\n */\r\n\r\n\r\nimport \"../JSDO/src/progress.util\";\r\nimport \"../JSDO/src/progress.session\";\r\nimport \"../JSDO/src/progress\";\r\nimport \"../JSDO/src/auth/progress.auth\";\r\n\r\nimport AuthenticationContext from 'adal-angular';\r\n\r\nwindow.AuthenticationContext = AuthenticationContext; //AuthenticationContext  should be available on the window. See AuthenticationContext.prototype.getRequestInfo\r\nwindow.progress = progress; //progress object is hooked by the providerplugin (webpack) => expose on window\r\n\r\nprogress.data.AuthenticationProviderAdal = function (uri, adalConfig) {\r\n    var authContext = new AuthenticationContext(adalConfig);\r\n    authContext.callback = adalConfig.callback;\r\n\r\n    // Check For & Handle Redirect From AAD After Login\r\n    if (authContext.isCallback(window.location.hash)) {\r\n        authContext.handleWindowCallback();\r\n    }\r\n    // process constructor arguments, etc.\r\n    this._initialize(uri, progress.data.Session.AUTH_TYPE_ADAL,\r\n        {\"_loginURI\": progress.data.AuthenticationProvider._homeLoginURIBase});\r\n\r\n    function setAuthorizationHeader(xhr, uri) {\r\n        var resource = authContext.getResourceForEndpoint(uri);\r\n        let dfd = $.Deferred();\r\n        if (resource !== null) {\r\n            authContext.acquireToken(resource, function (error, token) {\r\n                if (error || !token) {\r\n                    authContext.error(error);\r\n                    dfd.reject(error);\r\n                    return;\r\n                }\r\n\r\n                xhr.setRequestHeader('Authorization', \"Bearer \" + token);\r\n                dfd.resolve();\r\n            });\r\n        } else dfd.reject(\"Unknown resource\");\r\n        return dfd.promise();\r\n    }\r\n\r\n    this._reset = function () {\r\n        // if (authContext) authContext.logOut();\r\n        progress.data.AuthenticationProviderAdal.prototype._reset.apply(this);\r\n    };\r\n\r\n    this.hasClientCredentials = function () {\r\n        return (authContext && authContext.getCachedUser() && authContext.getCachedToken(adalConfig.clientId));\r\n    };\r\n\r\n    //we need to override because we need to control the promises from adal.js\r\n    this._loginProto = function (sendParam) {\r\n        var deferred = $.Deferred(),\r\n            xhr,\r\n            uriForRequest,\r\n            header,\r\n            that = this;\r\n\r\n        if (authContext && !(authContext.getCachedUser() && authContext.getCachedToken(adalConfig.clientId))) {\r\n            authContext.login();\r\n            return;\r\n        }\r\n\r\n        if (this._loggedIn) {\r\n            // \"The login method was not executed because the AuthenticationProvider is\r\n            // already logged in.\"\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG051\", \"AuthenticationProvider\"));\r\n        }\r\n\r\n        xhr = new XMLHttpRequest();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                // process the response from the Web application\r\n                that._processLoginResult(xhr, deferred);\r\n            }\r\n        };\r\n\r\n        if (progress.data.Session._useTimeStamp) {\r\n            uriForRequest = progress.data.Session._addTimeStampToURL(this._loginURI);\r\n        } else {\r\n            uriForRequest = this._loginURI;\r\n        }\r\n\r\n        this._openLoginRequest(xhr, uriForRequest);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        setAuthorizationHeader(xhr, uri).then(function () {\r\n            xhr.send(sendParam);\r\n        }, function () {\r\n            deferred.reject(this.arguments)\r\n        });\r\n\r\n        return deferred.promise();\r\n    };\r\n\r\n    // this method is needed for internal jsdo calls see comment in progress.auth.js\r\n    this._openRequestAndAuthorize = function (xhr, verb, uri, async, callback) {\r\n        if (this.hasClientCredentials()) {\r\n            xhr.open(verb, uri, async);\r\n            progress.data.Session._setNoCacheHeaders(xhr);\r\n\r\n            setAuthorizationHeader(xhr, uri).then(function () {\r\n                callback();\r\n            }, function () {\r\n                callback(new Error(progress.data._getMsgText(\"jsdoMSG125\", \"AuthenticationProvider\")));\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n//inherit from base AuthenticationProvider\r\nprogress.data.AuthenticationProviderAdal.prototype = progress.data.AuthenticationProvider.prototype;\r\n\r\nexport default progress;\n\n\n// WEBPACK FOOTER //\n// ./lib/progress.auth.adal.js","/* \r\nprogress.util.js    Version: 4.4.0-7\r\n\r\nCopyright (c) 2014-2017 Progress Software Corporation and/or its subsidiaries or affiliates.\r\n\r\nContains support objects used by the jsdo and/or session object\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n \r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n */\r\n/*global progress:true*/\r\n/*jslint nomen: true*/\r\n(function () {\r\n\r\n     /* Define these if not defined yet - they may already be defined if\r\n      * progress.js was included first */\r\n    if (typeof progress === \"undefined\") {\r\n        progress = {};\r\n    }\r\n    \r\n    if (typeof progress.data === \"undefined\") {\r\n        progress.data = {};\r\n    }\r\n\r\n    progress.util = {};\r\n    \r\n    var STRING_OBJECT_TYPE = \"String\",\r\n        DATE_OBJECT_TYPE = \"Date\",\r\n        CHARACTER_ABL_TYPE = \"CHARACTER\";\r\n    \r\n    \r\n    /**\r\n     * Utility class that allows subscribing and unsubscribing from named events.\r\n     *\r\n     * @returns {progress.util.Observable}\r\n     */\r\n    progress.util.Observable = function () {\r\n        /*\r\n         * Example format of the events object.  Some event delegates may only\r\n         * have a function setup, others may optionally have scope, and possibly an operation filter\r\n         *\r\n         * var  events = {\r\n         *   afterfill : [{\r\n         *     scope : {},  // this is optional\r\n         *     fn : function () {},\r\n         *     operation : 'getCustomers'  // this is optional\r\n         *   }, ...]\r\n         *\r\n         * }\r\n         *\r\n         *\r\n         *\r\n         */\r\n\r\n        /*\r\n         * remove the given function from the array of observers\r\n         */\r\n        function _filterObservers(observers, fn, scope, operation) {\r\n            return observers.filter(function (el) {\r\n                if (el.fn !== fn || el.scope !== scope || el.operation !== operation) {\r\n                    return el;\r\n                }\r\n            }, this);\r\n        }\r\n\r\n        /*\r\n         * validate the arguments passed to the subscribe function\r\n         */\r\n        this.validateSubscribe = function (args, evt, listenerData) {\r\n\r\n            if (args.length >= 2 && (typeof args[0] === 'string') && (typeof args[1] === 'string')) {\r\n                listenerData.operation = args[1];\r\n                listenerData.fn = args[2];\r\n                listenerData.scope = args[3];\r\n\r\n            } else if (args.length >= 2 && (typeof args[0] === 'string') && (typeof args[1] === 'function')) {\r\n                listenerData.operation = undefined;\r\n                listenerData.scope = args[2];\r\n                listenerData.fn = args[1];\r\n            } else {\r\n                throw new Error();\r\n            }\r\n\r\n        };\r\n\r\n\r\n        /*\r\n         * bind the specified function so it receives callbacks when the\r\n         * specified event name is called. Event name is not case sensitive.\r\n         * An optional scope can be provided so that the function is executed\r\n         * in the given scope.  If no scope is given, then the function will be\r\n         * called without scope.\r\n         *\r\n         * If the same function is registered for the same event a second time with\r\n         * the same scope the original subscription is removed and replaced with the new function\r\n         * to be called in the new scope.\r\n         *\r\n         * This method has two signatures.\r\n         *\r\n         * Signature 1:\r\n         * @param evt    The name of the event to bind a handler to. String. Not case sensitive.\r\n         * @param fn     The function callback for the event . Function.\r\n         * @param scope  The scope the function is to be run in. Object. Optional.\r\n         *\r\n         * Signature 2:\r\n         *\r\n         * @param evt        The name of the event to bind a handler to. String. Not case sensitive\r\n         * @param operation  The name of the operation to bind to. String. Case sensitive.\r\n         * @param fn         The function callback for the event . Function.\r\n         * @param scope      The scope the function is to be run in. Object. Optional.\r\n\r\n         */\r\n        this.subscribe = function (evt, operation, fn, scope) {\r\n            var listenerData,\r\n                observers;\r\n                \r\n            if (!evt) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG037\", this.toString(), \"subscribe\"));\r\n            }\r\n\r\n            if (typeof evt !== 'string') {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", this.toString(),\r\n                    \"subscribe\", progress.data._getMsgText(\"jsdoMSG039\")));\r\n            }\r\n\r\n            this._events = this._events || {};\r\n            evt = evt.toLowerCase();\r\n            listenerData = {fn: undefined, scope: undefined, operation: undefined};\r\n\r\n            try {\r\n                this.validateSubscribe(arguments, evt, listenerData);\r\n            } catch (e) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", this.toString(),\r\n                                            \"subscribe\", e.message));\r\n            }\r\n\r\n            observers = this._events[evt] || [];\r\n\r\n            // make sure we don't add duplicates\r\n            observers = _filterObservers(observers, listenerData.fn,\r\n                listenerData.scope, listenerData.operation);\r\n            observers.push(listenerData);\r\n            this._events[evt] = observers;\r\n\r\n            return this;\r\n        };\r\n\r\n        /*\r\n         * remove the specified function so it no longer receives events from\r\n         * the given name. event name is not case sensitive.\r\n         *\r\n         * This method has two signaturues.\r\n         * Signature 1:\r\n         * @param evt    Required. The name of the event for which to unbind the given function. String.\r\n         * @param fn     Required. The function to remove from the named event. Function.\r\n         * @param scope  Optional. The function scope in which to remove the listener. Object.\r\n         *\r\n         * Signature 2:\r\n         *\r\n         * @param evt       Required. The name of the event for which to unbind the given function. \r\n                            String. Not case sensitive\r\n         * @param operation Required.  The name of the operation to receive events. String. Case Sensitive\r\n         * @param fn        Required. The function to remove from the named event. Function.\r\n         * @param scope     Optional. The function scope in which to remove the listener. Object.\r\n         *\r\n         */\r\n        this.unsubscribe = function (evt, operation, fn, scope) {\r\n            var listenerData,\r\n                observers;\r\n\r\n            if (!evt) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG037\", this.toString(), \"unsubscribe\"));\r\n            }\r\n\r\n            if (typeof evt !== 'string') {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", this.toString(),\r\n                    \"unsubscribe\", progress.data._getMsgText(\"jsdoMSG037\")));\r\n            }\r\n\r\n            this._events = this._events || {};\r\n            evt = evt.toLowerCase();\r\n            listenerData = {fn: undefined, scope: undefined, operation: undefined};\r\n            try {\r\n                this.validateSubscribe(arguments, evt, listenerData);\r\n            } catch (e) {\r\n            //  throw new Error(\"Invalid signature for unsubscribe. \" + e.message);\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", this.toString(),\r\n                                        \"unsubscribe\", e.message));\r\n            }\r\n\r\n            observers = this._events[evt] || [];\r\n            if (observers.length > 0) {\r\n                this._events[evt] = _filterObservers(observers, listenerData.fn,\r\n                    listenerData.scope, listenerData.operation);\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /*\r\n         * trigger an event of the given name, and pass the specified data to\r\n         * the subscribers of the event. Event name is not case sensitive.\r\n         * A variable numbers of arguments can be passed as arguments to the event handler.\r\n         *\r\n         * This method has two signatures\r\n         * Signature 1:\r\n         * @param evt  The name of the event to fire.  String.  Not case sensitive.\r\n         * @param operation The name of the operation. String.  Case sensitive\r\n         * @param args Optional.  A variable number of arguments to pass to the event handlers.\r\n         *\r\n         * Signature 2:\r\n         * @param evt  The name of the event to fire. String.  Not case sensitive\r\n         * @param args Optional.  A variable number of arguments to pass to the event handlers.\r\n         */\r\n        this.trigger = function (evt, operation, args) {\r\n            var observers,\r\n                op;\r\n            \r\n            if (!evt) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG037\", this.toString(), \"trigger\"));\r\n            }\r\n\r\n            this._events = this._events || {};\r\n            evt = evt.toLowerCase();\r\n            observers = this._events[evt] || [];\r\n            if (observers.length > 0) {\r\n                args = Array.prototype.slice.call(arguments);\r\n\r\n                if ((arguments.length >= 2)\r\n                        && (typeof evt === 'string')\r\n                        && (typeof operation === 'string')) {\r\n                    // in alt format the second argument is the event name, \r\n                    // and the first is the operation name\r\n                    op = operation;\r\n                    args = args.length > 2 ? args.slice(2) : [];\r\n                } else if (arguments.length >= 1 && (typeof evt === 'string')) {\r\n                    op = undefined;\r\n                    args = args.length > 1 ? args.slice(1) : [];\r\n                } else {\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG033\", this.toString(), \"trigger\"));\r\n                }\r\n\r\n                observers.forEach(function (el) {\r\n                    if (el.operation === op) {\r\n                        el.fn.apply(el.scope, args);\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        // unbind all listeners from the given event. If the\r\n        // evt is undefined, then all listeners for all events are unbound\r\n        // evnt name is not case sensitive\r\n        // @param evt  Optional. The name of the event to unbind.  If not passed, then all events are unbound\r\n        this.unsubscribeAll = function (evt, operation) {\r\n            var observers;\r\n            \r\n            if (evt) {\r\n                this._events = this._events || {};\r\n                if (typeof evt === 'string') {\r\n                    evt = evt.toLowerCase();\r\n                    observers = this._events[evt] || [];\r\n\r\n                    observers.forEach(function (el) {\r\n                        if (el.operation) {\r\n                            this.unsubscribe(evt, el.operation, el.fn, el.scope);\r\n                        } else {\r\n                            this.unsubscribe(evt, el.fn, el.scope);\r\n                        }\r\n                    }, this);\r\n                }\r\n            } else {\r\n                this._events = {};\r\n            }\r\n\r\n            return this;\r\n        };\r\n    };\r\n\r\n\r\n    /**\r\n     * Utility class that saves/reads data to localStorage\r\n     *\r\n     * @returns {progress.data.LocalStorage}\r\n     */\r\n    progress.data.LocalStorage = function LocalStorage() {\r\n\r\n        /*global localStorage */\r\n        if (typeof localStorage === \"undefined\") {\r\n            // \"progress.data.LocalStorage: No support for localStorage.\"\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG126\", \"progress.data.LocalStorage\", \"localStorage\"));\r\n        }\r\n\r\n\r\n        // \"Methods\"\r\n\r\n        this.saveToLocalStorage = function (name, dataObj) {\r\n            localStorage.setItem(name, JSON.stringify(dataObj));\r\n        };\r\n\r\n        this.readFromLocalStorage = function (name) {\r\n\r\n            var jsonStr = localStorage.getItem(name),\r\n                dataObj = null;\r\n                \r\n            if (jsonStr !== null) {\r\n                try {\r\n                    dataObj = JSON.parse(jsonStr);\r\n                } catch (e) {\r\n                    dataObj = null;\r\n                }\r\n            }\r\n            return dataObj;\r\n        };\r\n\r\n        this.clearLocalStorage = function (name) {\r\n            localStorage.removeItem(name);\r\n        };\r\n\r\n    }; // End of LocalStorage\r\n\r\n    \r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    //        Utility Functions\r\n    \r\n    /*\r\n     * Converts the specified filter object to an OpenEdge ABL Where String.\r\n     *\r\n     * @param tableRef  - handle to the table in jsdo, where string is applied to.\r\n     * @param filter - the filter object to convert.\r\n     *\r\n     * @returns - translated OE where string.\r\n     */\r\n    progress.util._convertToABLWhereString = function (tableRef, filter) {\r\n        var result = [],\r\n            logic = filter.logic || \"and\",\r\n            idx,\r\n            length,\r\n            field,\r\n            fieldInfo,\r\n            type,\r\n            format,\r\n            operator,\r\n            value,\r\n            ablType,\r\n            //filters = (filter.filters) ? filter.filters : [filter],\r\n            filters = filter.filters || [filter],\r\n\t\t\t\r\n            whereOperators = {\r\n                eq: \"=\",\r\n                neq: \"<>\",\r\n                gt: \">\",\r\n                gte: \">=\",\r\n                lt: \"<\",\r\n                lte: \"<=\",\r\n                contains : \"INDEX\",\r\n                doesnotcontain: \"INDEX\",\r\n                endswith: \"R-INDEX\",\r\n                startswith: \"BEGINS\",\r\n                isnull: \"ISNULL\",\r\n                isnotnull: \"ISNOTNULL\",\r\n                isempty: \"ISEMPTY\",\r\n                isnotempty: \"ISNOTEMPTY\"\r\n            };\r\n        \r\n        for (idx = 0, length = filters.length; idx < length; idx += 1) {\r\n            filter = filters[idx];\r\n            field = filter.field;\r\n            value = filter.value;\r\n\r\n            if (filter.filters) {\r\n                filter = progress.util._convertToABLWhereString(tableRef, filter);\r\n            } else {\r\n                // Use original field name instead of serialized name\r\n                if (field && tableRef._name) {\r\n                    fieldInfo = tableRef._jsdo[tableRef._name]._fields[field.toLowerCase()];\r\n                    if (fieldInfo && fieldInfo.origName) {\r\n                        field = fieldInfo.origName;\r\n                    }\r\n                }\r\n\r\n                operator = whereOperators[filter.operator];\r\n                \r\n                if (operator === undefined) {\r\n                    throw new Error(\"The operator \" + filter.operator + \" is not valid.\");\r\n                }\r\n\r\n                switch (filter.operator) {\r\n                case \"isnull\":\r\n                case \"isnotnull\":\r\n                case \"isempty\":\r\n                case \"isnotempty\":\r\n                    value = undefined;\r\n                    break;\r\n                }\r\n                \r\n                if (operator && value !== undefined) {\r\n                    type = progress.util._getObjectType(value);\r\n  \r\n                    // We need to build a template format string for the where string. \r\n                    // We'll first add positional info for the value\r\n                    if (type === STRING_OBJECT_TYPE) {\r\n                        format = \"'{1}'\";\r\n                        value = value.replace(/'/g, \"~'\");\r\n                    } else if (type === DATE_OBJECT_TYPE) {\r\n                        ablType = tableRef._getABLType(field);\r\n                        if (ablType === \"DATE\") {\r\n                            format = \"DATE({1:MM, dd, yyyy})\";\r\n                        } else if (ablType === \"DATETIME-TZ\") {\r\n                            // zzz here means to translate timezone offset into minutes\r\n                            format = \"DATETIME-TZ({1:MM, dd, yyyy, hh, mm, ss, fff, zzz})\";\r\n                        } else {\r\n                            format = \"DATETIME({1:MM, dd, yyyy, hh, mm, ss, fff})\";\r\n                        }\r\n                    } else {\r\n                        format = \"{1}\";\r\n                    }\r\n                    \r\n                    // Most where strings are in the format: field operator value. Ex. custnum < 100\r\n                    // An exception to this is INDEX() and R-INDEX() which have format: operator field value\r\n                    // Ex. R-INDEX(name, \"LTD\")\r\n                    if (operator === \"INDEX\" || operator === \"R-INDEX\") {\r\n                        if (type !== STRING_OBJECT_TYPE) {\r\n                            throw new Error(\"Error parsing filter object. The operator \" + filter.operator +\r\n                                            \" requires a string value\");\r\n                        }\r\n                        if (filter.operator === \"doesnotcontain\") {\r\n                            format = \"{0}(\" + \"{2}, \" + format + \") = 0\";\r\n                        } else if (filter.operator === \"contains\") {\r\n                            format = \"{0}(\" + \"{2}, \" + format + \") > 0\";\r\n                        } else { // else filter.operator = \"endswith\"\r\n                            format = \"{2} MATCHES '*{1}'\";\r\n                        }\r\n                    } else {\r\n                        format = \"{2} {0} \" + format;\r\n                    }\r\n\r\n                    filter = progress.util._format(format, operator, value, field);\r\n                } else if (operator && value === undefined) {\r\n                    if (filter.operator === \"isempty\" || filter.operator === \"isnotempty\") {\r\n\t\t\t\t\t\tablType = tableRef._getABLType(field);\r\n                        if (ablType !== CHARACTER_ABL_TYPE) {\r\n                            throw new Error(\"Error parsing filter object. The operator \" + filter.operator +\r\n                                            \" requires a CHARACTER field\");\r\n                        }\r\n                        if (filter.operator === \"isempty\") {\r\n                            format = \"{2} = ''\";\r\n                        } else if (filter.operator === \"isnotempty\") {\r\n                            format = \"{2} <> ''\";\r\n                        }\r\n                    } else {\r\n                        if (filter.operator === \"isnull\") {\r\n                            format = \"{2} = ?\";\r\n                        } else if (filter.operator === \"isnotnull\") {\r\n                            format = \"{2} <> ?\";\r\n                        } else {\r\n                            format = \"{2} {0} ?\";\r\n                        }\r\n                    }\r\n\t\t\t\t\r\n                    // format, operator {0}, value {1}, field {2}\r\n                    filter = progress.util._format(format, operator, value, field);\r\n\t\t\t\t}\r\n            }\r\n\r\n            result.push(filter);\r\n        }\r\n\r\n        filter = result.join(\" \" + logic + \" \");\r\n\r\n        if (result.length > 1) {\r\n            filter = \"(\" + filter + \")\";\r\n        }\r\n\r\n        return filter;\r\n    };\r\n\r\n    \r\n    /*\r\n     * Converts the specified filter object to an SQL Query String.\r\n     *\r\n     * @param tableName  - tableName of table in jsdo, where clause is applied to.\r\n     * @param filter - the filter object to convert.\r\n     *\r\n     * @returns - translated SQL where clause.\r\n     */\r\n    progress.util._convertToSQLQueryString = function (tableRef, filter, addSelect) {\r\n        var result = [],\r\n            logic = filter.logic || \"and\",\r\n            idx,\r\n            length,\r\n            field,\r\n            type,\r\n            format,\r\n            operator,\r\n            value,\r\n            fieldFormat,\r\n            filters = filter.filters || [filter],\r\n            filterStr,\r\n            usingLike = true,\r\n\t\t\t\r\n            whereOperators = {\r\n                eq: \"=\",\r\n                neq: \"!=\",\r\n                gt: \">\",\r\n                gte: \">=\",\r\n                lt: \"<\",\r\n                lte: \"<=\",\r\n                contains : \"LIKE\",\r\n                doesnotcontain: \"NOT LIKE\",\r\n                endswith: \"LIKE\",\r\n                startswith: \"LIKE\",\r\n                isnull: \"ISNULL\",\r\n                isnotnull: \"ISNOTNULL\",\r\n                isempty: \"ISEMPTY\",\r\n                isnotempty: \"ISNOTEMPTY\"\r\n            };\r\n        \r\n        if (typeof addSelect === \"undefined\") {\r\n            addSelect = false;\r\n        }\r\n\r\n        for (idx = 0, length = filters.length; idx < length; idx += 1) {\r\n            filter = filters[idx];\r\n            field = filter.field;\r\n            value = filter.value;\r\n\r\n            if (filter.filters) {\r\n                filterStr = progress.util._convertToSQLQueryString(tableRef, filter, false);\r\n            } else {\r\n                operator = whereOperators[filter.operator];\r\n                \r\n                if (operator === undefined) {\r\n                    throw new Error(\"The operator \" + filter.operator + \" is not valid.\");\r\n                }\r\n                \r\n                switch (filter.operator) {\r\n                case \"isnull\":\r\n                case \"isnotnull\":\r\n                case \"isempty\":\r\n                case \"isnotempty\":\r\n                    value = undefined;\r\n                    break;\r\n                }\r\n\r\n                if (operator && value !== undefined) {\r\n                    type = progress.util._getObjectType(value);\r\n                    \r\n                    if (operator === \"LIKE\" || operator === \"NOT LIKE\") {\r\n                        if (type !== STRING_OBJECT_TYPE) {\r\n                            throw new Error(\"Error parsing filter object. The operator \" + filter.operator +\r\n                                            \" requires a string value\");\r\n                        }\r\n                    }\r\n                    \r\n                    if (type === STRING_OBJECT_TYPE) {\r\n                        format = \"'{1}'\";\r\n                        value = value.replace(/'/g, \"''\");\r\n                    } else if (type === DATE_OBJECT_TYPE) {\r\n                        fieldFormat = tableRef._getFormat(field);\r\n                        if (fieldFormat === \"date\") {\r\n                            format = \"'{1:yyyy-MM-dd}'\";\r\n                        } else if (fieldFormat === \"date-time\") {\r\n                            format = \"{1:#ISO(iso)}\";\r\n                        } else if (fieldFormat === \"time\") {\r\n                            format = \"'{1:FFF}'\";\r\n                        }\r\n                    } else {\r\n                        format = \"{1}\";\r\n                    }\r\n                    \r\n                    // We need to build a template format string for the where string. \r\n                    // We'll first add positional info for the value, which is represented by {1}\r\n                    if (filter.operator === \"startswith\") {\r\n                        format = \"'{1}%'\";\r\n                    } else if (filter.operator === \"endswith\") {\r\n                        format = \"'%{1}'\";\r\n                    } else if (filter.operator === \"contains\" || filter.operator === \"doesnotcontain\") {\r\n                        format = \"'%{1}%'\";\r\n                    } else {\r\n                        usingLike = false;\r\n                    }\r\n                    \r\n                    if (usingLike) {\r\n                        value = value.replace(/%/g, '\\\\%');\r\n                        value = value.replace(/_/g, '\\\\_');\r\n                    }\r\n                   \r\n                    format = \"{2} {0} \" + format;\r\n                    filterStr = progress.util._format(format, operator, value, field);\r\n                } else if (operator && value === undefined) {\r\n                    if (filter.operator === \"isempty\" || filter.operator === \"isnotempty\") {\r\n\t\t\t\t\t\ttype = tableRef._fields[field.toLowerCase()].type;\r\n                        if (type !== STRING_OBJECT_TYPE.toLowerCase()) {\r\n                            throw new Error(\"Error parsing filter object. The operator \" + filter.operator +\r\n                                            \" requires a string field\");\r\n                        }\r\n                        if (filter.operator === \"isempty\") {\r\n                            format = \"{2} = ''\";\r\n                        } else if (filter.operator === \"isnotempty\") {\r\n                            format = \"{2} != ''\";\r\n                        }\r\n                    } else {\r\n                        if (filter.operator === \"isnull\") {\r\n                            format = \"{2} IS NULL\";\r\n                        } else if (filter.operator === \"isnotnull\") {\r\n                            format = \"{2} IS NOT NULL\";\r\n                        } else {\r\n                            format = \"{2} {0} NULL\";\r\n                        }\r\n                    }\r\n\t\t\t\t\r\n                    // format, operator {0}, value {1}, field {2}\t\t\t\t\t\r\n                    filterStr = progress.util._format(format, operator, value, field);\r\n                }\r\n            }\r\n\r\n            result.push(filterStr);\r\n        }\r\n\r\n        filterStr = result.join(\" \" + logic + \" \");\r\n\r\n        if (result.length > 1) {\r\n            filterStr = \"(\" + filterStr + \")\";\r\n        }\r\n        \r\n        if (addSelect === true) {\r\n            filterStr = \"SELECT * FROM \" + tableRef._name + \" WHERE \" + filterStr;\r\n        }\r\n\r\n        return filterStr;\r\n    };\r\n    \r\n    \r\n    /*\r\n     * Returns the object type; Example \"String\", \"Date\"\r\n     * Constants for object type values are defined above.\r\n     *\r\n     * @param value - the object whose type is returned\r\n     */\r\n    progress.util._getObjectType = function (value) {\r\n        // Returns [object xxx]. Removing [object ]\r\n        return Object.prototype.toString.call(value).slice(8, -1);\r\n    };\r\n    \r\n    \r\n    /*\r\n     * Substitutes in a variable number of arguments into specified format string (with place-holders)\r\n     *\r\n     * @param fmt - the format string with place-holders, eg. \"{0} text {1}\".\r\n     *\r\n     * @returns - formatted string.\r\n     */\r\n    progress.util._format = function (fmt) {\r\n        /*jslint regexp: true*/\r\n        var values = arguments,\r\n            formatRegExp = /\\{(\\d+)(:[^\\}]+)?\\}/g;\r\n        /*jslint regexp: false*/\r\n\r\n        return fmt.replace(formatRegExp, function (match, index, placeholderFormat) {\r\n            var value = values[parseInt(index, 10) + 1];\r\n\r\n            return progress.util._toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\");\r\n        });\r\n         \r\n    };\r\n    \r\n    /*\r\n     * Converts the specified value param to a string.\r\n     *\r\n     * @param value  - object to convert\r\n     * @param fmt - optional format string with place-holders, eg. \"MM dd yyyy\".\r\n     *\r\n     * @returns - converted string.\r\n     */\r\n    progress.util._toString = function (value, fmt) {\r\n        var str;\r\n                    \r\n        if (fmt) {\r\n            if (progress.util._getObjectType(value) === \"Date\") {\r\n                return progress.util._formatDate(value, fmt);\r\n            }\r\n        }\r\n\r\n        if (typeof value === \"number\") {\r\n            str =  value.toString();\r\n        } else {\r\n            str = (value !== undefined ? value : \"\");\r\n        }\r\n            \r\n        return str;\r\n    };\r\n    \r\n    /*\r\n     * Accepts string representing number and optionally pads it with \"0\"'s to conform to \r\n     * specified number of digits.\r\n     *\r\n     * @param number  - string representing number to pad.\r\n     * @param digit - number of digits desired for padded string. If not specified, default is 2.\r\n     *\r\n     * @returns - padded string representing number.\r\n     */\r\n    progress.util._pad = function (number, digits) {\r\n        var zeros = [\"\", \"0\", \"00\", \"000\", \"0000\"],\r\n            end;\r\n        \r\n        number = String(number);\r\n        digits = digits || 2;\r\n        end = digits - number.length;\r\n\r\n        if (end) {\r\n            return zeros[digits].substring(0, end) + number;\r\n        }\r\n        return number;\r\n    };\r\n    \r\n    /*\r\n     * Converts the specified date param to a string.\r\n     *\r\n     * @param date  - date object to convert\r\n     * @param fmt - format string with place-holders, eg. \"MM dd yyyy\".\r\n     *\r\n     * @returns - converted string.\r\n     */\r\n    progress.util._formatDate = function (date, format) {\r\n        /*jslint regexp: true*/\r\n        var dateFormatRegExp =\r\n            /dd|MM|yyyy|hh|mm|fff|FFF|ss|zzz|iso|\"[^\"]*\"|'[^']*'/g;\r\n        /*jslint regexp: false*/\r\n       \r\n        return format.replace(dateFormatRegExp, function (match) {\r\n            var minutes,\r\n                result,\r\n                sign;\r\n\r\n            if (match === \"dd\") {\r\n                result = progress.util._pad(date.getDate());\r\n            } else if (match === \"MM\") {\r\n                result = progress.util._pad(date.getMonth() + 1);\r\n            } else if (match === \"yyyy\") {\r\n                result = progress.util._pad(date.getFullYear(), 4);\r\n            } else if (match === \"hh\") {\r\n                result = progress.util._pad(date.getHours());\r\n            } else if (match === \"mm\") {\r\n                result = progress.util._pad(date.getMinutes());\r\n            } else if (match === \"ss\") {\r\n                result = progress.util._pad(date.getSeconds());\r\n            } else if (match === \"fff\") {\r\n                result = progress.util._pad(date.getMilliseconds(), 3);\r\n            } else if (match === \"FFF\") {\r\n                result = String(date.getTime());\r\n            } else if (match === \"zzz\") {\r\n                // timezone is returned in minutes\r\n                minutes = date.getTimezoneOffset();\r\n                sign = minutes < 0;\r\n                result = (sign ? \"+\" : \"-\") + minutes;\r\n            } else if (match === \"iso\") {\r\n                result = date.toISOString();\r\n            }\r\n\r\n            return result !== undefined ? result : match.slice(1, match.length - 1);\r\n        });\r\n    };\r\n\r\n    /*\r\n     * Processes settings in a jsdoSettings object.\r\n     * This method is used by project templates.\r\n     */\r\n    progress.util.jsdoSettingsProcessor = function jsdoSettingsProcessor(jsdoSettings) {\r\n        if (typeof jsdoSettings === 'object') {\r\n            if (jsdoSettings.authenticationModel  === undefined || jsdoSettings.authenticationModel  === \"\") {\r\n                jsdoSettings.authenticationModel = \"ANONYMOUS\";\r\n            }\r\n        }\r\n    };\r\n\r\n}());\r\n\n\n\n// WEBPACK FOOTER //\n// ./JSDO/src/progress.util.js","/* \r\nprogress.session.js    Version: 4.4.1-2\r\n\r\nCopyright (c) 2012-2017 Progress Software Corporation and/or its subsidiaries or affiliates.\r\n \r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n \r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n */\r\n\r\n(function () {\r\n\r\n    /* define these if not defined yet - they may already be defined if\r\n     progress.js was included first */\r\n    if (typeof progress === \"undefined\") {\r\n        progress = {};\r\n    }\r\n    if (typeof progress.data === \"undefined\") {\r\n        progress.data = {};\r\n    }\r\n\r\n    progress.data.ServicesManager = {};\r\n    progress.data.ServicesManager._services = [];\r\n    progress.data.ServicesManager._resources = [];\r\n    progress.data.ServicesManager._data = [];\r\n    progress.data.ServicesManager._sessions = [];\r\n    progress.data.ServicesManager._jsdosessions = [];\r\n    /*\r\n     progress.data.ServicesManager.put = function(id, jsdo) {\r\n     progress.data.ServicesManager._data[id] = jsdo;\r\n     };\r\n     progress.data.ServicesManager.get = function(id) {\r\n     return progress.data.ServicesManager._data[id];\r\n     };\r\n     */\r\n\r\n    progress.data.ServicesManager.addResource = function (id, resource) {\r\n        if (progress.data.ServicesManager._resources[id] === undefined)\r\n            progress.data.ServicesManager._resources[id] = resource;\r\n        else\r\n            throw new Error(\"A resource named '\" + id + \"' was already loaded.\");\r\n    };\r\n    progress.data.ServicesManager.getResource = function (id) {\r\n        return progress.data.ServicesManager._resources[id];\r\n    };\r\n    progress.data.ServicesManager.addService = function (id, service) {\r\n        if (progress.data.ServicesManager._services[id] === undefined)\r\n            progress.data.ServicesManager._services[id] = service;\r\n        else\r\n            throw new Error(\"A service named '\" + id + \"' was already loaded.\");\r\n    };\r\n    progress.data.ServicesManager.getService = function (id) {\r\n        return progress.data.ServicesManager._services[id];\r\n    };\r\n    progress.data.ServicesManager.addSession = function (catalogURI, session) {\r\n        if (progress.data.ServicesManager._sessions[catalogURI] === undefined)\r\n            progress.data.ServicesManager._sessions[catalogURI] = session;\r\n        else\r\n            throw new Error(\"Cannot load catalog '\" + catalogURI + \"' multiple times.\");\r\n    };\r\n\r\n    progress.data.ServicesManager.addJSDOSession = function (catalogURI, jsdosession) {\r\n        if (progress.data.ServicesManager._jsdosessions[catalogURI] === undefined) {\r\n            progress.data.ServicesManager._jsdosessions[catalogURI] = jsdosession;\r\n        }\r\n        else {\r\n            throw new Error(\"Cannot load catalog '\" + catalogURI + \"' multiple times.\");\r\n        }\r\n    };\r\n    progress.data.ServicesManager.getSession = function (catalogURI) {\r\n        try {\r\n            return progress.data.ServicesManager._sessions[catalogURI];\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    progress.data.ServicesManager.cleanSession = function (session) {\r\n        var servicesKey,\r\n            resourcesKey,\r\n            sessionsKey,\r\n            service,\r\n            services = progress.data.ServicesManager._services,\r\n            resources = progress.data.ServicesManager._resources,\r\n            sessions = progress.data.ServicesManager._sessions,\r\n            jsdosessions = progress.data.ServicesManager._jsdosessions;\r\n\r\n        // Delete the services and resources in the ServicesManager\r\n        // associated with the Session given\r\n        for (servicesKey in services) {\r\n            service = null;\r\n            if (services[servicesKey]._session === session) {\r\n                service = services[servicesKey];\r\n                delete services[servicesKey];\r\n            }\r\n\r\n            if (!service) {\r\n                continue;\r\n            }\r\n\r\n            for (resourcesKey in resources) {\r\n                if (resources[resourcesKey].service === service) {\r\n                    delete resources[resourcesKey];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Delete the session and jsdosession from the ServicesManager\r\n        for (sessionsKey in sessions) {\r\n            if (sessions[sessionsKey] === session) {\r\n                delete sessions[sessionsKey];\r\n\r\n                if (jsdosessions[sessionsKey]) {\r\n                    delete jsdosessions[sessionsKey];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /*\r\n     * Scans URL for parameters of the form {name}\r\n     * Returns array with the names\r\n     */\r\n    function extractParamsFromURL(url) {\r\n        var urlParams = [];\r\n        if (typeof(url) == 'string') {\r\n            var paramName = null;\r\n            for (var i = 0; i < url.length; i++) {\r\n                if (url.charAt(i) == '{') {\r\n                    paramName = \"\";\r\n                }\r\n                else if (url.charAt(i) == '}') {\r\n                    if (paramName)\r\n                        urlParams.push(paramName);\r\n                    paramName = null;\r\n                }\r\n                else if (paramName !== null) {\r\n                    paramName += url.charAt(i);\r\n                }\r\n            }\r\n        }\r\n        return urlParams;\r\n    }\r\n\r\n    /*\r\n     * Adds the catalog.json file provided by the catalog parameter, which is a JSDO\r\n     * that has loaded the catalog\r\n     */\r\n    progress.data.ServicesManager.addCatalog = function (services, session) {\r\n        if (!services) {\r\n            throw new Error(\"Cannot find 'services' property in catalog file.\");\r\n        }\r\n        if (services instanceof Array) {\r\n\r\n            // first check if there are duplicates before we add them to our cache,\r\n            // which only handles unique values\r\n            for (var j = 0; j < services.length; j++) {\r\n                // don't allow services with the same name across sessions\r\n                if (progress.data.ServicesManager.getService(services[j].name) !== undefined)\r\n                    throw new Error(\"A service named '\" + services[j].name + \"' was already loaded.\");\r\n\r\n                var resources = services[j].resources;\r\n\r\n                if (resources instanceof Array) {\r\n                    for (var i = 0; i < resources.length; i++) {\r\n                        if (progress.data.ServicesManager.getResource(resources[i].name) !== undefined)\r\n                            throw new Error(\"A resource named '\" + resources[i].name +\r\n                                \"' was already loaded.\");\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(\"Missing 'resources' array in catalog.\");\r\n                }\r\n            }\r\n\r\n            for (var j = 0; j < services.length; j++) {\r\n                services[j]._session = session;\r\n                this.addService(services[j].name, services[j]); // Register the service\r\n                var resources = services[j].resources;\r\n                var baseAddress = services[j].address;\r\n                if (resources instanceof Array) {\r\n                    for (var i = 0; i < resources.length; i++) {\r\n                        var resource = resources[i];\r\n                        resource.fn = {};\r\n                        resource.service = services[j];\r\n                        resources[i].url = baseAddress + resources[i].path;\r\n                        // Register resource\r\n                        progress.data.ServicesManager.addResource(resources[i].name, resources[i]);\r\n\r\n                        // Process schema\r\n                        resource.fields = null;\r\n                        resource.primaryKeys = null;\r\n                        if (resource.schema) {\r\n                            resource.fields = {};\r\n                            resource.primaryKeys = {};\r\n                            resource._dataSetName = undefined;\r\n                            resource._tempTableName = undefined;\r\n                            var properties = null;\r\n\r\n                            try {\r\n                                if (typeof resource.schema.properties != 'undefined') {\r\n                                    var keys = Object.keys(resource.schema.properties);\r\n                                    properties = resource.schema.properties;\r\n                                    if (keys.length == 1) {\r\n                                        if (typeof resource.schema.properties[keys[0]].properties !=\r\n                                            'undefined') {\r\n                                            // Schema corresponds to a DataSet\r\n                                            resource._dataSetName = keys[0];\r\n                                        }\r\n                                        else if (typeof resource.schema.properties[keys[0]].items !=\r\n                                            'undefined') {\r\n                                            // Schema corresponds to a temp-table\r\n                                            resource.dataProperty = keys[0];\r\n                                            properties = resource.schema.properties[keys[0]].items.properties;\r\n                                            resource._tempTableName = resource.dataProperty;\r\n                                            resource.primaryKeys[resource._tempTableName] =\r\n                                                resource.schema.properties[keys[0]].primaryKey;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    var keys = Object.keys(resource.schema);\r\n                                    if (keys.length == 1) {\r\n                                        resource.dataProperty = keys[0];\r\n                                        if (typeof resource.schema[keys[0]].items != 'undefined') {\r\n                                            // Catalog format correspond to Table Schema\r\n                                            properties = resource.schema[keys[0]].items.properties;\r\n                                            resource._tempTableName = resource.dataProperty;\r\n                                            resource.primaryKeys[resource._tempTableName] =\r\n                                                resource.schema[keys[0]].primaryKey;\r\n                                        }\r\n                                        else if (typeof resource.schema[keys[0]].properties != 'undefined') {\r\n                                            // Catalog format correspond to DataSet Schema\r\n                                            resource._dataSetName = keys[0];\r\n                                            resource.dataProperty = null;\r\n                                            properties = resource.schema;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                throw new Error(\"Error parsing catalog file.\");\r\n                            }\r\n                            if (properties) {\r\n                                if (resource._dataSetName) {\r\n                                    properties = properties[resource._dataSetName].properties;\r\n                                    for (var tableName in properties) {\r\n                                        resource.fields[tableName] = [];\r\n                                        resource.primaryKeys[tableName] = properties[tableName].primaryKey;\r\n                                        var tableProperties;\r\n                                        if (properties[tableName].items\r\n                                            && properties[tableName].items.properties) {\r\n                                            tableProperties = properties[tableName].items.properties;\r\n                                        }\r\n                                        else {\r\n                                            tableProperties = properties[tableName].properties;\r\n                                        }\r\n                                        for (var field in tableProperties) {\r\n                                            tableProperties[field].name = field;\r\n                                            if (field != '_id')\r\n                                                resource.fields[tableName].push(tableProperties[field]);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    var tableName = resource.dataProperty ? resource.dataProperty : \"\";\r\n                                    resource.fields[tableName] = [];\r\n                                    for (var field in properties) {\r\n                                        properties[field].name = field;\r\n                                        if (field != '_id')\r\n                                            resource.fields[tableName].push(properties[field]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else\r\n                                throw new Error(\"Error parsing catalog file.\");\r\n                        }\r\n                        else\r\n                            resource.fields = null;\r\n\r\n                        // Validate relationship property\r\n                        if ((resource.relations instanceof Array)\r\n                            && resource.relations[0]\r\n                            && resource.relations[0].RelationName) {\r\n                            throw new Error(\r\n                                \"Relationship properties in catalog must begin with lowercase.\");\r\n                        }\r\n                        // Process operations\r\n                        resource.generic = {};\r\n                        if (resource.operations) {\r\n                            for (var idx = 0; idx < resource.operations.length; idx++) {\r\n                                if (resource.operations[idx].path) {\r\n                                    resource.operations[idx].url =\r\n                                        resource.url + resource.operations[idx].path;\r\n                                }\r\n                                else {\r\n                                    resource.operations[idx].url = resource.url;\r\n                                }\r\n                                if (!resource.operations[idx].params) {\r\n                                    resource.operations[idx].params = [];\r\n                                }\r\n                                if (!resource.operations[idx].type) {\r\n                                    resource.operations[idx].type = \"INVOKE\";\r\n                                }\r\n\r\n                                // Set opname - validation of opname is done later\r\n                                var opname = resource.operations[idx].type.toLowerCase();\r\n\r\n                                // Set default verb based on operation\r\n                                if (!resource.operations[idx].verb) {\r\n                                    switch (opname) {\r\n                                        case 'create':\r\n                                            resource.operations[idx].verb = \"POST\";\r\n                                            break;\r\n                                        case 'read':\r\n                                            resource.operations[idx].verb = \"GET\";\r\n                                            break;\r\n                                        case 'update':\r\n                                        case 'invoke':\r\n                                        case 'submit':\r\n                                        case 'count':\r\n                                            resource.operations[idx].verb = \"PUT\";\r\n                                            break;\r\n                                        case 'delete':\r\n                                            resource.operations[idx].verb = \"DELETE\";\r\n                                            break;\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                // Point fn to operations\r\n                                var func = function fn(object, async) {\r\n                                    var deferred;\r\n\r\n                                    // Add static variable fnName to function\r\n                                    if (typeof fn.fnName == 'undefined') {\r\n                                        fn.fnName = arguments[0]; // Name of function\r\n                                        fn.definition = arguments[1]; // Operation definition\r\n                                        return;\r\n                                    }\r\n\r\n                                    var reqBody = null;\r\n                                    var url = fn.definition.url;\r\n                                    var jsdo = this;\r\n                                    var xhr = null;\r\n\r\n                                    var request = {};\r\n                                    if (object) {\r\n                                        if (typeof(object) != \"object\") {\r\n                                            throw new Error(\"Catalog error: Function '\" +\r\n                                                fn.fnName + \"' requires an object as a parameter.\");\r\n                                        }\r\n                                        var objParam;\r\n                                        if (object instanceof XMLHttpRequest\r\n                                            || (object.constructor\r\n                                                && object.constructor.name === \"XMLHttpRequest\")) {\r\n                                            jsdo = object.jsdo;\r\n                                            xhr = object;\r\n                                            objParam = xhr.objParam;\r\n\r\n                                            // use the request from the xhr request if possible\r\n                                            request = xhr.request;\r\n                                        }\r\n                                        else {\r\n                                            objParam = object;\r\n                                        }\r\n\r\n                                        if (typeof async == 'undefined') {\r\n                                            async = this._async;\r\n                                        }\r\n                                        else {\r\n                                            async = Boolean(async);\r\n                                        }\r\n\r\n                                        request.objParam = objParam;\r\n\r\n\r\n                                        // Process objParam\r\n                                        var isInvoke = (fn.definition.type.toUpperCase() == 'INVOKE');\r\n                                        for (var i = 0; i < fn.definition.params.length; i++) {\r\n                                            var name = fn.definition.params[i].name;\r\n                                            switch (fn.definition.params[i].type) {\r\n                                                case 'PATH':\r\n                                                case 'QUERY':\r\n                                                case 'MATRIX':\r\n                                                    var value = null;\r\n                                                    if (objParam)\r\n                                                        value = objParam[name];\r\n                                                    if (!value)\r\n                                                        value = \"\";\r\n                                                    if (url.indexOf('{' + name + '}') == -1) {\r\n                                                        throw new Error(\"Catalog error: Reference to \" +\r\n                                                            fn.definition.params[i].type + \" parameter '\" +\r\n                                                            name + \"' is missing in path.\");\r\n                                                    }\r\n                                                    url = url.replace(\r\n                                                        new RegExp('{' + name + '}', 'g'),\r\n                                                        encodeURIComponent(value));\r\n                                                    break;\r\n                                                case 'REQUEST_BODY':\r\n                                                case 'REQUEST_BODY,RESPONSE_BODY':\r\n                                                case 'RESPONSE_BODY,REQUEST_BODY':\r\n                                                    if (xhr && !reqBody) {\r\n                                                        reqBody = objParam;\r\n                                                    }\r\n                                                    else {\r\n                                                        var reqParam = objParam[name];\r\n                                                        if (isInvoke\r\n                                                            && (fn.definition.params[i].xType\r\n                                                                && (\"DATASET,TABLE\".indexOf(\r\n                                                                    fn.definition.params[i].xType) != -1))) {\r\n                                                            var unwrapped = (jsdo._resource.service.settings\r\n                                                                && jsdo._resource.service.settings.unwrapped);\r\n                                                            if (unwrapped) {\r\n                                                                // Remove extra level if found\r\n                                                                if ((typeof(reqParam) == 'object')\r\n                                                                    && (Object.keys(reqParam).length == 1)\r\n                                                                    && (typeof(reqParam[name]) == 'object'))\r\n                                                                    reqParam = reqParam[name];\r\n                                                            }\r\n                                                            else {\r\n                                                                // Add extra level if not found\r\n                                                                if ((typeof(reqParam) == 'object')\r\n                                                                    && (typeof(reqParam[name]) == 'undefined')) {\r\n                                                                    reqParam = {};\r\n                                                                    reqParam[name] = objParam[name];\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                        if (!reqBody) {\r\n                                                            reqBody = {};\r\n                                                        }\r\n                                                        reqBody[name] = reqParam;\r\n                                                    }\r\n                                                    break;\r\n                                                case 'RESPONSE_BODY':\r\n                                                    break;\r\n                                                default:\r\n                                                    throw new Error(\"Catalog error: \" +\r\n                                                        \"Unexpected parameter type '\" +\r\n                                                        fn.definition.params[i].type + \"'.\");\r\n                                            }\r\n                                        }\r\n\r\n                                        // URL has parameters\r\n                                        if (url.indexOf('{') != -1) {\r\n                                            var paramsFromURL = extractParamsFromURL(url);\r\n                                            for (var i = 0; i < paramsFromURL.length; i++) {\r\n                                                var name = paramsFromURL[i];\r\n                                                var value = null;\r\n                                                if (objParam)\r\n                                                    value = objParam[name];\r\n                                                if (!value)\r\n                                                    value = \"\";\r\n                                                if (typeof(value) === \"object\") {\r\n                                                    value = JSON.stringify(value);\r\n                                                }\r\n                                                url = url.replace(\r\n                                                    new RegExp('{' + name + '}', 'g'),\r\n                                                    encodeURIComponent(value));\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    request.fnName = fn.fnName;\r\n                                    request.async = async;\r\n\r\n                                    if (request.deferred === undefined &&\r\n                                        typeof($) == 'function' && typeof($.Deferred) == 'function') {\r\n                                        deferred = $.Deferred();\r\n                                        request.deferred = deferred;\r\n                                    }\r\n\r\n                                    var data = jsdo._httpRequest(xhr, fn.definition.verb,\r\n                                        url, reqBody, request, async);\r\n                                    return data;\r\n                                };\r\n                                // End of Function Definition\r\n\r\n                                switch (resource.operations[idx].verb.toLowerCase()) {\r\n                                    case 'get':\r\n                                    case 'post':\r\n                                    case 'put':\r\n                                    case 'delete':\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"Catalog error: Unexpected HTTP verb '\" +\r\n                                            resource.operations[idx].verb +\r\n                                            \"' found while parsing the catalog.\");\r\n                                }\r\n\r\n                                switch (opname) {\r\n                                    case 'invoke':\r\n                                        break;\r\n                                    case 'create':\r\n                                    case 'read':\r\n                                    case 'update':\r\n                                    case 'delete':\r\n                                    case 'submit':\r\n                                    case 'count':\r\n                                        if (typeof(resource.generic[opname]) == \"function\") {\r\n                                            throw new Error(\"Catalog error: Multiple '\" +\r\n                                                resource.operations[idx].type +\r\n                                                \"' operations specified in the catalog for resource '\" +\r\n                                                resource.name + \"'.\");\r\n                                        }\r\n                                        else\r\n                                            resource.generic[opname] = func;\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"Catalog error: Unexpected operation '\" +\r\n                                            resource.operations[idx].type +\r\n                                            \"' found while parsing the catalog.\");\r\n                                }\r\n\r\n                                // Set fnName\r\n                                var name = resource.operations[idx].name;\r\n                                if (opname === \"invoke\" || opname === \"count\") {\r\n                                    resource.fn[name] = {};\r\n                                    resource.fn[name][\"function\"] = func;\r\n                                }\r\n                                else {\r\n                                    name = \"_\" + opname;\r\n                                }\r\n                                func(name, resource.operations[idx]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Missing 'services' array in catalog.\");\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n     * Prints debug information about the ServicesManager.\r\n     */\r\n    progress.data.ServicesManager.printDebugInfo = function (resourceName) {\r\n        if (resourceName) {\r\n            //console.log(\"** ServicesManager **\");\r\n            //console.log(\"** BEGIN **\");\r\n            var resource = progress.data.ServicesManager.getResource(resourceName);\r\n            if (resource) {\r\n                var cSchema = \"Schema:\\n\";\r\n                var cOperations = \"Operations: \" + resource.operations.length + \"\\n\";\r\n                for (var field in resource.schema.properties) {\r\n                    cSchema += \"\\nName: \" + field\r\n                        + \"\\n\";\r\n                }\r\n\r\n                for (var i = 0; i < resource.operations.length; i++) {\r\n                    cOperations += \"\\n\" + i\r\n                        + \"\\nName: \" + resource.operations[i].name\r\n                        + \"\\nURL: \" + resource.operations[i].url\r\n                        + \"\\ntype: \" + resource.operations[i].type\r\n                        + \"\\nverb: \" + resource.operations[i].verb\r\n                        + \"\\nparams: \" + resource.operations[i].params.length\r\n                        + \"\\n\";\r\n                }\r\n                console.log(\"** DEBUG INFO **\\nResource name: %s\\nURL:%s\\n%s\\n%s\\n\\n\",\r\n                    resource.name, resource.url, cSchema, cOperations);\r\n            }\r\n            else\r\n                console.log(\"Resource not found\");\r\n            //console.log(\"** END **\");\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n     * Contains information about a server-side Mobile service.\r\n     * Properties of args parameter for constructor:\r\n     * @param name   the name of the service\r\n     * @param uri    the URI of the service\r\n     */\r\n    progress.data.MobileServiceObject = function MobileServiceObject(args) {\r\n        var _name = args.name;\r\n        Object.defineProperty(this, 'name',\r\n            {\r\n                get: function () {\r\n                    return _name;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        var _uri = args.uri;\r\n        Object.defineProperty(this, 'uri',\r\n            {\r\n                get: function () {\r\n                    return _uri;\r\n                },\r\n                enumerable: true\r\n            });\r\n    };\r\n\r\n    /* \r\n        An object that maintains the X-CLIENT-PROPS header string\r\n        The data for the string is stored in the internal variable named contextObject and is\r\n        always up to date. The internal var contextString isn't created until the first time it's\r\n        needed (the first get of the contextHeader property), and then it's updated an cached\r\n        A call to setContext or setContextProperty updates contextObject but sets contextString to\r\n        null, which signals that it needs to be updated. If contextObject is an empty object,\r\n        contextString is set to undefined to indicate that no header is to be sent\r\n     */\r\n    progress.data.ContextProperties = function () {\r\n        var contextObject = {},\r\n            contextString; // if null, contextObject has been changed but string wasn't updated yet\r\n\r\n        //  the string to be sent in the X-CLIENT-PROPS header (unless Session.xClientProps has been set)\r\n        Object.defineProperty(this, 'contextHeader',\r\n            {\r\n                get: function () {\r\n                    var header;\r\n\r\n                    if (contextString === null) {  // needs to be updated\r\n                        header = JSON.stringify(contextObject);\r\n                        if (header === \"{}\") {\r\n                            contextString = undefined;\r\n                        }\r\n                        else {\r\n                            contextString = header;\r\n                        }\r\n                    }\r\n                    // else (contextString === undefined || has a usable value) \r\n\r\n                    return contextString;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        /* determine whether the property is already present, and -\r\n            add it if it's not present\r\n            remove it if propertyValue is explicitly passed as undefined\r\n            otherwise replace its value (even if the new value is null or \"\")\r\n        */\r\n        this.setContextProperty = function (propertyName, propertyValue) {\r\n            if (arguments.length < 2) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session',\r\n                    'setContextProperty', 2));\r\n            }\r\n            if (arguments.length !== 2) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", \"Session\",\r\n                    \"setContextProperty\", 2));\r\n            }\r\n            if (typeof propertyName !== \"string\") {\r\n                // {1}: Parameter {1} must be of type {3} in {4} call.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG121\", 'Session', 1, 'string',\r\n                    'setContextProperty'));\r\n            }\r\n\r\n            if (propertyValue === undefined) {\r\n                delete contextObject[propertyName]; // OK if it doesn't exist -- no error\r\n            }\r\n            else {\r\n                contextObject[propertyName] = propertyValue;\r\n            }\r\n            contextString = null; // must be updated on next get of this.contextHeader\r\n        };\r\n\r\n        this.setContext = function (context) {\r\n            var prop;\r\n\r\n            if (arguments.length < 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session', 'setContext', 1));\r\n            }\r\n            if (arguments.length > 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session', 'setContext', 1));\r\n            }\r\n            if (typeof context == \"object\") {\r\n                /* Copy the properties of the context passed in as an argument into\r\n                 * an internal contextObject. (Note that if the context object passed in\r\n                 * has a prototype, this code copies them, too)\r\n                 */\r\n                contextObject = {};\r\n                for (prop in context) {\r\n                    if (context.hasOwnProperty(prop)) {\r\n                        if (typeof context[prop] !== \"function\") {\r\n                            contextObject[prop] = context[prop];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if ((context === undefined) || (context === null)) {\r\n                contextObject = {};\r\n            }\r\n            else {\r\n                // {1}: Parameter {1} must be of type {3} in {4} call.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG121\", 'Session', 1, 'Object',\r\n                    'setContextProperty'));\r\n            }\r\n            contextString = null; // must be updated on next get of this.contextHeader\r\n        };\r\n\r\n        this.getContext = function () {\r\n            if (arguments.length > 0) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session', 'getContext', 0));\r\n            }\r\n            return contextObject;\r\n        };\r\n\r\n        this.getContextProperty = function (propertyName) {\r\n            if (arguments.length < 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session', 'getContextProperty', 1));\r\n            }\r\n            if (arguments.length > 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'Session', 'getContextProperty', 1));\r\n            }\r\n            return contextObject[propertyName];\r\n        };\r\n\r\n    };  // end of ContextProperties\r\n\r\n    /*\r\n     * Manages authentication and session ID information for a service.\r\n     *\r\n     * Use:  OE mobile developer instantiates a session and calls addCatalog() to load\r\n     *       information for one or more services defined in a catalog file.\r\n     *\r\n     *       Developer instantiates JDSOs as needed.\r\n     *       Usually all of the JSDOs will use the same session, but if a client-side\r\n     *       service needs resources from more than one REST app, there would need to be more\r\n     *       than one session\r\n     *\r\n     */\r\n    progress.data.Session = function Session(options) {\r\n\r\n        var defPropSupported = false;\r\n        if ((typeof Object.defineProperty) == 'function') {\r\n            defPropSupported = true;\r\n        }\r\n\r\n        var that = this,\r\n            jsdosession, // \"backpointer\" if this Session is being used by a JSDOSession\r\n            isUserAgentiOS = false,  // checked just below this var statement\r\n            isFirefox = false,  // checked just below this var statement\r\n            isEdge = false,  // checked just below this var statement\r\n            isIE = false,  // checked just below this var statement\r\n            canPassCredentialsToOpenWithCORS = false,  // False will always work if creds are correct\r\n            defaultiOSBasicAuthTimeout = 4000,\r\n            deviceIsOnline = true,  // online until proven offline\r\n            restApplicationIsOnline = false,  // was the Mobile Web Application that this Session object\r\n                                              // connects to online the last time it was checked?\r\n                                              // (value is always false if session is not logged in)\r\n            oepingAvailable = false,\r\n            defaultPartialPingURI = \"/rest/_oeping\",\r\n            partialPingURI = defaultPartialPingURI,\r\n            _storageKey,\r\n            _authProvider = null,\r\n            customCredentials = false,\r\n\r\n            // Note: the variables above here are used during the lifetime of the object; the ones below\r\n            // are only used while the constructor is executing\r\n            storedAuthModel,\r\n            storedURI,\r\n            newURI,\r\n            stateWasReadFromStorage = false;\r\n\r\n        // This is a hidden argument to suppress this warning and be re-used for future warnings\r\n        if (!options || options._silent !== true) {\r\n            console.warn(\"Session: As of JSDO 4.4, the Session object has been deprecated. Please use the JSDOSession object instead.\");\r\n        }\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            if (typeof navigator.userAgent !== \"undefined\") {\r\n                isUserAgentiOS = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)/i);\r\n                isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n                // detect that we're running in MS Edge browser\r\n                isEdge = navigator.userAgent.indexOf('Edge/') > -1;\r\n                // detect that we're running in IE 11 (or IE 11 in pre-11 mode) or IE 10 browser\r\n                isIE = ((navigator.userAgent.indexOf('Trident/')) > -1 || (navigator.userAgent.indexOf('MSIE 10') > -1));\r\n            }\r\n        }\r\n\r\n        // Firefox, Edge, and IE will throw an error on the send() if CORS is being used for the request\r\n        // and we have included credentials in the URI (which is what passing them to open() does),\r\n        canPassCredentialsToOpenWithCORS = !(isFirefox || isEdge || isIE);\r\n\r\n        // When using basic authentication, we can pass the user name and password to the XMLHttpRequest.open()\r\n        // method. However, in some browsers, passing credentials to open() will result in the xhr's .send() \r\n        // method throwing an error. The goal of this function is to figure out whether it's safe to include\r\n        // the credentials. It returns false if there could be a problem, true otherwise.\r\n        // Note: currently it does this solely on the basis of what browser we are running in, regardless\r\n        // of whether the request will actually use the CORS protocol. Ideally, we should take into account whether \r\n        // the request will actually require CORS. The question is whether we can reliably do that.\r\n        // The reason for taking the specific request into account is that there are drawbacks to not passing the\r\n        // credentials when we are NOT using CORS, namely that if the credentials are invalid, some browsers will \r\n        // put up their own prompt for credentials in non-CORS situations (those browsers are IE, Edge, and Chrome)\r\n        function canPassCredentialsToOpen() {\r\n            return canPassCredentialsToOpenWithCORS;\r\n        }\r\n\r\n        this._onlineHandler = function () {\r\n            setDeviceIsOnline(true);\r\n            that.trigger(\"online\", that, null);\r\n        };\r\n\r\n        this._offlineHandler = function () {\r\n            setDeviceIsOnline(false);\r\n            that.trigger(\"offline\", that, progress.data.Session.DEVICE_OFFLINE, null);\r\n        };\r\n\r\n        if ((typeof window != 'undefined') && (window.addEventListener)) {\r\n            window.addEventListener(\"online\", this._onlineHandler, false);\r\n            window.addEventListener(\"offline\", this._offlineHandler, false);\r\n        }\r\n\r\n        /* constants and properties - define them as properties via the defineProperty()\r\n         * function, which has \"writable\" and \"configurable\" parameters that both\r\n         * default to false, so these calls create properties that are read-only\r\n         *\r\n         * IF WE DECIDE THAT WE CAN ASSUME WE ALWAYS RUN WITH A VERSION OF JAVASCRIPT THAT SUPPORTS\r\n         * Object.DefineProperty(), WE CAN DELETE THE defPropSupported VARIABLE, THE TEST OF IT BELOW,\r\n         * AND THE 'ELSE' CLAUSE BELOW AND ALL THE setXxxx functions (AND CHANGE THE CALLS TO THE setXxxx\r\n         * FUNCTIONS SO THEY JUST REFER TO THE PROPERTY)\r\n         *\r\n         */\r\n\r\n        // define these unconditionally so we don't get a warning on the push calls that they might\r\n        // have been uninitialized\r\n        var _catalogURIs = [];\r\n        var _services = [];\r\n        var _jsdos = [];\r\n\r\n        this.onOpenRequest = null;\r\n\r\n        var _password = null;\r\n\r\n        if (defPropSupported) {\r\n            var _userName = null;\r\n            Object.defineProperty(this, 'userName',\r\n                {\r\n                    get: function () {\r\n                        return _userName;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _loginTarget = '/static/home.html';\r\n            Object.defineProperty(this, 'loginTarget',\r\n                {\r\n                    get: function () {\r\n                        return _loginTarget;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _serviceURI = null;\r\n            Object.defineProperty(this, 'serviceURI',\r\n                {\r\n                    get: function () {\r\n                        return _serviceURI;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            Object.defineProperty(this, 'catalogURIs',\r\n                {\r\n                    get: function () {\r\n                        return _catalogURIs;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            Object.defineProperty(this, 'services',\r\n                {\r\n                    get: function () {\r\n                        return _services;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _loginResult = null;\r\n            Object.defineProperty(this, 'loginResult',\r\n                {\r\n                    get: function () {\r\n                        return _loginResult;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _loginHttpStatus = null;\r\n            Object.defineProperty(this, 'loginHttpStatus',\r\n                {\r\n                    get: function () {\r\n                        return _loginHttpStatus;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _clientContextId = null;\r\n            Object.defineProperty(this, 'clientContextId',\r\n                {\r\n                    get: function () {\r\n                        return _clientContextId;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _authenticationModel = progress.data.Session.AUTH_TYPE_ANON;\r\n            Object.defineProperty(this, 'authenticationModel',\r\n                {\r\n                    get: function () {\r\n                        return _authenticationModel;\r\n                    },\r\n                    set: function (newval) {\r\n                        if (newval) {\r\n                            newval = newval.toLowerCase();\r\n                        }\r\n                        switch (newval) {\r\n                            case progress.data.Session.AUTH_TYPE_FORM :\r\n                            case progress.data.Session.AUTH_TYPE_BASIC :\r\n                            case progress.data.Session.AUTH_TYPE_ANON :\r\n                            case progress.data.Session.AUTH_TYPE_SSO :\r\n                            case progress.data.Session.AUTH_TYPE_ADAL :\r\n                            case null :\r\n                                _authenticationModel = newval;\r\n                                storeSessionInfo(\"authenticationModel\", newval);\r\n                                break;\r\n                            default:\r\n                                throw new Error(\"Error setting Session.authenticationModel. '\" +\r\n                                    newval + \"' is an invalid value.\");\r\n                        }\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _lastSessionXHR = null;\r\n            Object.defineProperty(this, 'lastSessionXHR',\r\n                {\r\n                    get: function () {\r\n                        return _lastSessionXHR;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            Object.defineProperty(this, 'connected',\r\n                {\r\n                    get: function () {\r\n                        return (this.loginResult === progress.data.Session.LOGIN_SUCCESS)\r\n                            && restApplicationIsOnline\r\n                            && deviceIsOnline;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            Object.defineProperty(this, 'JSDOs',\r\n                {\r\n                    get: function () {\r\n                        return _jsdos;\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _pingInterval = 0;\r\n            var _timeoutID = null;\r\n            Object.defineProperty(this, 'pingInterval',\r\n                {\r\n                    get: function () {\r\n                        return _pingInterval;\r\n                    },\r\n                    set: function (newval) {\r\n                        if ((typeof newval === \"number\") && (newval >= 0)) {\r\n                            _pingInterval = newval;\r\n                            storeSessionInfo(\"pingInterval\", newval);\r\n                            if (newval > 0) {\r\n                                // if we're logged in, start autopinging\r\n                                if (this.loginResult === progress.data.Session.LOGIN_SUCCESS) {\r\n                                    _timeoutID = setTimeout(this._autoping, newval);\r\n                                }\r\n                            }\r\n                            else if (newval === 0) {\r\n                                clearTimeout(_timeoutID);\r\n                                _pingInterval = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Error setting Session.pingInterval. '\" +\r\n                                newval + \"' is an invalid value.\");\r\n                        }\r\n                    },\r\n                    enumerable: true\r\n                });\r\n\r\n            var _contextProperties = new progress.data.ContextProperties();\r\n            Object.defineProperty(this,\r\n                \"_contextProperties\",\r\n                {\r\n                    get: function () {\r\n                        return _contextProperties;\r\n                    },\r\n                    enumerable: false\r\n                }\r\n            );\r\n\r\n            var isInvalidated = false;\r\n            Object.defineProperty(\r\n                this,\r\n                \"_isInvalidated\",\r\n                {\r\n                    get: function () {\r\n                        return isInvalidated;\r\n                    },\r\n                    enumerable: false\r\n                }\r\n            );\r\n\r\n            // used internally, not supported as part of the Session API (tho authProvider is part\r\n            // of the *JSDOSession* API)\r\n            Object.defineProperty(this,\r\n                \"_authProvider\",\r\n                {\r\n                    get: function () {\r\n                        return _authProvider;\r\n                    },\r\n                    set: function (newval) {\r\n                        if (_authProvider) {\r\n                            throw new Error(\"Internal Error setting Session._authProvider. '\" +\r\n                                \"The property has already been set.\");\r\n\r\n                        } else {\r\n                            setAuthProvider(newval);\r\n                        }\r\n                    },\r\n                    enumerable: false\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            this.userName = null;\r\n            this.loginTarget = '/static/home.html';\r\n            this.serviceURI = null;\r\n            this.catalogURIs = [];\r\n            this.services = [];\r\n            this.loginResult = null;\r\n            this.loginHttpStatus = null;\r\n            this.clientContextId = null;\r\n            this.authenticationModel = progress.data.Session.AUTH_TYPE_ANON;\r\n            this.lastSessionXHR = null;\r\n        }\r\n\r\n        // stores data value using the JSDOSession's storage key plus the infoName\r\n        // argument as a key. If there is no infoName, just uses the storage key\r\n        // by itself (the latter case is intended to serve as a flag that we have\r\n        // stored this JSDOSession's data before)\r\n        // \r\n        function storeSessionInfo(infoName, value) {\r\n            var key;\r\n            if (that.loginResult === progress.data.Session.LOGIN_SUCCESS &&\r\n                typeof (sessionStorage) === 'object' && _storageKey) {\r\n\r\n                key = _storageKey;\r\n                if (infoName) {\r\n                    key = key + \".\" + infoName;\r\n                }\r\n                if (typeof (value) !== 'undefined') {\r\n                    sessionStorage.setItem(key, JSON.stringify(value));\r\n                }\r\n            }\r\n        }\r\n\r\n        function retrieveSessionInfo(infoName) {\r\n            var key,\r\n                jsonStr,\r\n                value = null;\r\n            if (typeof (sessionStorage) === 'object' && _storageKey) {\r\n                key = _storageKey;\r\n                if (infoName) {\r\n                    key = key + \".\" + infoName;\r\n                }\r\n                jsonStr = sessionStorage.getItem(key);\r\n                if (jsonStr !== null) {\r\n                    try {\r\n                        value = JSON.parse(jsonStr);\r\n                    } catch (e) {\r\n                        value = null;\r\n                    }\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n\r\n        function clearSessionInfo(infoName) {\r\n            var key;\r\n            if (typeof (sessionStorage) === 'object' && _storageKey) {\r\n                key = _storageKey;\r\n                if (infoName) {\r\n                    key = key + \".\" + infoName;\r\n                    sessionStorage.removeItem(key);\r\n                }\r\n            }\r\n        }\r\n\r\n        function storeAllSessionInfo() {\r\n            if (_storageKey) {\r\n                storeSessionInfo(\"loginResult\", that.loginResult);\r\n                storeSessionInfo(\"userName\", that.userName);\r\n                storeSessionInfo(\"serviceURI\", that.serviceURI);\r\n                storeSessionInfo(\"loginHttpStatus\", that.loginHttpStatus);\r\n                storeSessionInfo(\"authenticationModel\", that.authenticationModel);\r\n                storeSessionInfo(\"pingInterval\", that.pingInterval);\r\n                storeSessionInfo(\"oepingAvailable\", oepingAvailable);\r\n                storeSessionInfo(\"partialPingURI\", partialPingURI);\r\n                storeSessionInfo(\"clientContextId\", that.clientContextId);\r\n                storeSessionInfo(\"deviceIsOnline\", deviceIsOnline);\r\n                storeSessionInfo(\"restApplicationIsOnline\", restApplicationIsOnline);\r\n                if (that._authProvider) {\r\n                    storeSessionInfo(\"_authProvider.init\",\r\n                        {\r\n                            uri: that._authProvider.uri,\r\n                            authenticationModel: that._authProvider.authenticationModel\r\n                        });\r\n                }\r\n                storeSessionInfo(_storageKey, true);\r\n            }\r\n        }\r\n\r\n        function clearAllSessionInfo() {\r\n            if (_storageKey) {\r\n                if (retrieveSessionInfo(_storageKey)) {\r\n                    clearSessionInfo(\"loginResult\");\r\n                    clearSessionInfo(\"userName\");\r\n                    clearSessionInfo(\"serviceURI\");\r\n                    clearSessionInfo(\"loginHttpStatus\");\r\n                    clearSessionInfo(\"clientContextId\");\r\n                    clearSessionInfo(\"deviceIsOnline\");\r\n                    clearSessionInfo(\"restApplicationIsOnline\");\r\n                    clearSessionInfo(\"authenticationModel\");\r\n                    clearSessionInfo(\"pingInterval\");\r\n                    clearSessionInfo(\"oepingAvailable\");\r\n                    clearSessionInfo(\"partialPingURI\");\r\n                    clearSessionInfo(\"_authProvider.init\");\r\n                    clearSessionInfo(_storageKey);\r\n                }\r\n            }\r\n        }\r\n\r\n        function setSessionInfoFromStorage(key) {\r\n            var authproviderInitObject,\r\n                authProvider;\r\n            if (retrieveSessionInfo(key)) {\r\n                setLoginResult(retrieveSessionInfo(\"loginResult\"), this);\r\n                setUserName(retrieveSessionInfo(\"userName\"), this);\r\n                setServiceURI(retrieveSessionInfo(\"serviceURI\"), this);\r\n                setLoginHttpStatus(retrieveSessionInfo(\"loginHttpStatus\"), this);\r\n                setClientContextID(retrieveSessionInfo(\"clientContextId\"), this);\r\n                setDeviceIsOnline(retrieveSessionInfo(\"deviceIsOnline\"));\r\n                setRestApplicationIsOnline(retrieveSessionInfo(\"restApplicationIsOnline\"));\r\n                that.authenticationModel = retrieveSessionInfo(\"authenticationModel\");\r\n                that.pingInterval = retrieveSessionInfo(\"pingInterval\");\r\n                setOepingAvailable(retrieveSessionInfo(\"oepingAvailable\"));\r\n                setPartialPingURI(retrieveSessionInfo(\"partialPingURI\"));\r\n                // if information on an AuthenticationProvider for the session is in storage, and if\r\n                // the authProvider hasn't already been set for this Session, create a new authProvider\r\n                // using the same info as the old one. This would be likely to happen if the app's code\r\n                // had used the old JSDOSession.login API, where we create the AuthenticationProvider\r\n                // automatically during login instead of the code passing one to the constructor               \r\n                if (!that._authProvider) {\r\n                    authproviderInitObject = retrieveSessionInfo(\"_authProvider.init\");\r\n                    if (authproviderInitObject) {\r\n                        setAuthProvider(new progress.data.AuthenticationProvider(authproviderInitObject));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function setUserName(newname, sessionObject) {\r\n            if (defPropSupported) {\r\n                _userName = newname;\r\n            }\r\n            else {\r\n                sessionObject.userName = newname;\r\n            }\r\n\r\n            storeSessionInfo(\"userName\", newname);\r\n        }\r\n\r\n        function setLoginTarget(target, sessionObject) {\r\n            if (defPropSupported) {\r\n                _loginTarget = target;\r\n            }\r\n            else {\r\n                sessionObject.loginTarget = target;\r\n            }\r\n        }\r\n\r\n        function setServiceURI(url, sessionObject) {\r\n            if (defPropSupported) {\r\n                _serviceURI = url;\r\n            }\r\n            else {\r\n                sessionObject.serviceURI = url;\r\n            }\r\n\r\n            storeSessionInfo(\"serviceURI\", url);\r\n        }\r\n\r\n        function pushCatalogURIs(url, sessionObject) {\r\n            if (defPropSupported) {\r\n                _catalogURIs.push(url);\r\n            }\r\n            else {\r\n                sessionObject.catalogURIs.push(url);\r\n            }\r\n        }\r\n\r\n        function pushService(serviceObject, sessionObject) {\r\n            if (defPropSupported) {\r\n                _services.push(serviceObject);\r\n            }\r\n            else {\r\n                sessionObject.services.push(serviceObject);\r\n            }\r\n        }\r\n\r\n        function findService(serviceName) {\r\n            for (var prop in _services) {\r\n                var srv = _services[prop];\r\n                if (srv.name === serviceName) {\r\n                    return srv;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function setLoginResult(result, sessionObject) {\r\n            if (defPropSupported) {\r\n                _loginResult = result;\r\n            } else {\r\n                sessionObject.loginResult = result;\r\n            }\r\n\r\n            if (result === progress.data.Session.LOGIN_SUCCESS) {\r\n                storeSessionInfo(\"loginResult\", result);\r\n            } else {\r\n                // Let's clear sessionStorage since we logged out or something went bad!\r\n                clearAllSessionInfo();\r\n            }\r\n        }\r\n\r\n        function setLoginHttpStatus(status, sessionObject) {\r\n            if (defPropSupported) {\r\n                _loginHttpStatus = status;\r\n            }\r\n            else {\r\n                sessionObject.loginHttpStatus = status;\r\n            }\r\n\r\n            storeSessionInfo(\"loginHttpStatus\", status);\r\n        }\r\n\r\n        function setClientContextIDfromXHR(xhr, sessionObject) {\r\n            if (xhr) {\r\n                setClientContextID(getResponseHeaderNoError(xhr, \"X-CLIENT-CONTEXT-ID\"), sessionObject);\r\n            }\r\n        }\r\n\r\n        function setClientContextID(ccid, sessionObject) {\r\n            if (defPropSupported) {\r\n                _clientContextId = ccid;\r\n            }\r\n            else {\r\n                sessionObject.clientContextId = ccid;\r\n            }\r\n\r\n            storeSessionInfo(\"clientContextId\", ccid);\r\n        }\r\n\r\n        function setLastSessionXHR(xhr, sessionObject) {\r\n            if (defPropSupported) {\r\n                _lastSessionXHR = xhr;\r\n            }\r\n            else {\r\n                sessionObject.lastSessionXHR = xhr;\r\n            }\r\n        }\r\n\r\n        function setDeviceIsOnline(value) {\r\n            deviceIsOnline = value;\r\n\r\n            storeSessionInfo(\"deviceIsOnline\", value);\r\n        }\r\n\r\n        function setAuthProvider(value) {\r\n            // Do this to preserve authprovider's null-ness.\r\n            _authProvider = value ? value : null;\r\n        }\r\n\r\n        function setRestApplicationIsOnline(value) {\r\n            restApplicationIsOnline = value;\r\n\r\n            storeSessionInfo(\"restApplicationIsOnline\", value);\r\n        }\r\n\r\n        function setOepingAvailable(value) {\r\n            oepingAvailable = value;\r\n\r\n            storeSessionInfo(\"oepingAvailable\", value);\r\n        }\r\n\r\n        function setPartialPingURI(value) {\r\n            partialPingURI = value;\r\n\r\n            storeSessionInfo(\"partialPingURI\", value);\r\n        }\r\n\r\n        /*\r\n            When using CORS, if the client asks for a response header that is not among \r\n            the headers exposed by the Web application, the user agent may write an error\r\n            to the console, e.g., \"REFUSED TO GET UNSAFE HEADER\". This function checks for \r\n            a given response header in a way that will avoid the error message. It does this\r\n            by requesting all headers and then checking to see whether the desired header\r\n            is present (it will not be present, even if the server sent it, if the server has not\r\n            also allowed that header). The function caches the string returned by getAllResponseHeaders\r\n            by storing it on the xhr that was used in the request. It does the caching in\r\n            case there is another header to be checked.\r\n          */\r\n        function getResponseHeaderNoError(xhr, headerName) {\r\n            var allHeaders = xhr._pdsResponseHeaders,\r\n                regExp;\r\n\r\n            if (allHeaders === undefined) {\r\n                allHeaders = xhr.getAllResponseHeaders();\r\n                if (allHeaders) {\r\n                    xhr._pdsResponseHeaders = allHeaders;\r\n                }\r\n                else {\r\n                    xhr._pdsResponseHeaders = null;\r\n                }\r\n            }\r\n            if (allHeaders) {\r\n                regExp = new RegExp(\"^\" + headerName + \":\", \"m\");\r\n                if (allHeaders.match(regExp)) {\r\n                    return xhr.getResponseHeader(headerName);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        // \"Methods\"\r\n\r\n        this._pushJSDOs = function (jsdo) {\r\n            _jsdos.push(jsdo);\r\n        };\r\n\r\n\r\n        /* _openRequest  (intended for progress.data library use only)\r\n         * calls open() for an xhr -- the assumption is that this is an xhr for a JSDO, and we need to add\r\n         * some session management information for the request, such as user credentials and a session ID if\r\n         * there is one\r\n         *\r\n         * The callback parameter is to support async calls --- it's possible that the call in here to\r\n         * _openRequestAndAuthorize will make an async request (for token refresh), so it's expected that\r\n         * callers will invoke _openRequest with a callback parameter for async execution\r\n         */\r\n        this._openRequest = function (xhr, verb, url, async, callback) {\r\n            var urlPlusCCID,\r\n                that = this;\r\n\r\n            function afterOpenAndAuthorize(xhr) {\r\n                // add CCID header\r\n                if (that.clientContextId && (that.clientContextId !== \"0\")) {\r\n                    xhr.setRequestHeader(\"X-CLIENT-CONTEXT-ID\", that.clientContextId);\r\n                }\r\n                // set X-CLIENT-PROPS header\r\n                setRequestHeaderFromContextProps(that, xhr);\r\n\r\n                if (typeof that.onOpenRequest === 'function') {\r\n                    var params = {\r\n                        \"xhr\": xhr,\r\n                        \"verb\": verb,\r\n                        \"uri\": urlPlusCCID,\r\n                        \"async\": async,\r\n                        \"formPreTest\": false,\r\n                        \"session\": that\r\n                    };\r\n                    that.onOpenRequest(params);\r\n                    // xhr = params.xhr; //Note that, currently, this would have no effect in the caller.\r\n                }\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n\r\n            if (this._isInvalidated) {\r\n                // Session: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"Session\"));\r\n            }\r\n\r\n            if (this.loginResult !== progress.data.Session.LOGIN_SUCCESS && !this._authProvider && this.authenticationModel) {\r\n                throw new Error(\"Attempted to make server request when there is no active session.\");\r\n            }\r\n\r\n            // if resource url is not absolute, add the REST app url to the front\r\n            urlPlusCCID = this._prependAppURL(url);\r\n\r\n            // add CCID as JSESSIONID query string to url\r\n            urlPlusCCID = this._addCCIDtoURL(urlPlusCCID);\r\n\r\n            // add time stamp to the url\r\n            if (progress.data.Session._useTimeStamp) {\r\n                urlPlusCCID = progress.data.Session._addTimeStampToURL(urlPlusCCID);\r\n            }\r\n\r\n            // should be able to remove this check and only do what's in the \"if\" when we no longer \r\n            // support calling the Session API directly (need to keep that now because tdriver, for\r\n            // one, uses the Session object, and uses it synchronously\r\n            if (this._authProvider) {\r\n                this._authProvider._openRequestAndAuthorize(xhr,\r\n                    verb,\r\n                    urlPlusCCID,\r\n                    async,\r\n                    afterOpenAndAuthorize);\r\n            } else {\r\n                this._setXHRCredentials(xhr, verb, urlPlusCCID, this.userName, _password, async);\r\n                if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                    _addWithCredentialsAndAccept(xhr, \"application/json\");\r\n                }\r\n                afterOpenAndAuthorize(xhr);\r\n            }\r\n\r\n        };\r\n\r\n        // callback used in login to determine whether ping is available on server\r\n        this.pingTestCallback = function (cbArgs) {\r\n            var foundOeping = cbArgs.pingResult ? true : false;\r\n\r\n            setOepingAvailable(foundOeping);\r\n        };\r\n\r\n        // generic async callback, currently used by login(), addCatalog(), logout(), connect, and disconnect\r\n        this._onReadyStateChangeGeneric = function () {\r\n            var xhr = this;\r\n            var result;\r\n            var errorObject;\r\n\r\n            clearTimeout(xhr._requestTimeout); // for the iOS Basic Auth bug\r\n\r\n            if (xhr.readyState == 4) {\r\n                result = null;\r\n                errorObject = null;\r\n\r\n                // initial processing of the response from the Web application\r\n                if ((typeof xhr.onResponseFn) == 'function') {\r\n                    try {\r\n                        result = xhr.onResponseFn(xhr);\r\n                        // ( note that result will remain null if this is a logout() )\r\n                    }\r\n                    catch (e) {\r\n                        errorObject = e;\r\n                    }\r\n                }\r\n                // handle the results of the processing (e.g., fire any events required)\r\n                if ((typeof xhr.onResponseProcessedFn) == 'function') {\r\n                    if (!result) {\r\n                        result = progress.data.Session.GENERAL_FAILURE;\r\n                    }\r\n                    xhr.onResponseProcessedFn(xhr.pdsession, result, errorObject, xhr);\r\n                }\r\n            }\r\n        };\r\n\r\n        // Intended only for internal use by the JSDO library\r\n        // NOTE: disconnect does not currently send a request to the Web application for the Anonymous or \r\n        // OE SSO models. It's conceivable, though unlikely, that it might. For that reason, the design is\r\n        // similar to the functions that DO make a server request. There is a \"setup\" function (this one)\r\n        // and a separate function to process the \"result\" (_processDisconnectResult, below). Currently the\r\n        // setup function is minimal and just calls _processDisconnectResult directly. If we ever do need to\r\n        // send a server request, _processDisconnectResult will be specified as the callback to be invoked\r\n        // from onReadyStateChangeGeneric. The possibility of this potential enhancement is the reason for\r\n        // the odd signature of _processDisconnectResult, which has a currently unused first parameter for \r\n        // the potential XHR. \r\n        this._disconnect = function (deferred) {\r\n\r\n            // Note: we use the \"no harm, no foul\" approach for disconnect. If you aren't connected, it's\r\n            // regarded as a success rather than cause for throwing an error.\r\n            this._processDisconnectResult(null, deferred);\r\n        };\r\n\r\n\r\n        // This is separate from _disconnect for cases in which _disconnect makes a server request. \r\n        // If there has been a server request, xhr should be valid and deferred will be undefined\r\n        // If there was no server request, xhr will be undefined  and deferred will be valid.\r\n        // If this needs to be enhanced to support server requests, see _procesLoginResponse as\r\n        // a general model\r\n        // Probably the only time this function will be called as the result of a server request is with\r\n        // Form authentication, and even then it's questionable\r\n        this._processDisconnectResult = function (xhr, deferred) {\r\n\r\n            this._reinitializeAfterLogout(this, progress.data.Session.SUCCESS);\r\n            this._disconnectComplete(this, progress.data.Session.SUCCESS, null, null, deferred);\r\n        };\r\n\r\n        this._disconnectComplete = function (pdsession, result, errObj, xhr, deferred) {\r\n            pdsession.trigger(\"afterDisconnect\", pdsession, result, errObj, xhr, deferred);\r\n        };\r\n\r\n\r\n        // GET RID OF progress.data.Session login CODE (AND RELATED) IF WE DROP SUPPORT FOR USING\r\n        // THE OLD progress.data.Session API DIRECTLY (mainly a problem for existing code (tdriver),\r\n        // or anyone who wants to call methods synchronously, which should be no one)\r\n        /* login\r\n         *\r\n         */\r\n\r\n        // store password here until successful login; only then do we store it in the Session object\r\n        var pwSave = null;\r\n        // store user name here until successful login; only then do we store it in the Session object\r\n        var unameSave = null;\r\n        this.login = function (serviceURI, loginUserName, loginPassword, loginTarget) {\r\n            var uname,\r\n                pw,\r\n                isAsync = false,\r\n                args = [],\r\n                deferred,\r\n                iOSBasicAuthTimeout,\r\n                uriForRequest;   // \"decorated\" version of serviceURI, used to actually send the request\r\n\r\n            pwSave = null;   // in case these are left over from a previous login\r\n            unameSave = null;\r\n\r\n            if (!defPropSupported) {\r\n                // this is here on the presumably slim chance that we're running with a\r\n                // version of JavaScript that doesn't support defineProperty (otherwise\r\n                // the lower casing will have already happened). When we decide that it's\r\n                // OK to remove our conditionalization of property definitions, we should\r\n                // get rid of this whole conditional\r\n                this.authenticationModel = this.authenticationModel.toLowerCase();\r\n            }\r\n\r\n            if (this.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                // Session: Cannot call login() when authenticationModel is SSO. \r\n                // Please use the AuthenticationProvider object instead.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG057\", 'Session', 'login()'));\r\n            }\r\n\r\n            if (this.loginResult === progress.data.Session.LOGIN_SUCCESS || this._authProvider) {\r\n                throw new Error(\"Attempted to call login() on a Session object that is already logged in.\");\r\n            }\r\n\r\n            if (arguments.length > 0) {\r\n                if (arguments[0] && typeof(arguments[0]) === 'object') {\r\n                    // Note that arguments[0].serviceURI may be undefined because when the JSDOSession\r\n                    // uses a Session internally, it passes serviceURI to the constructor. The other\r\n                    // properties may be present, though\r\n                    args[0] = arguments[0].serviceURI;\r\n                    args[1] = arguments[0].userName;\r\n                    args[2] = arguments[0].password;\r\n                    args[3] = arguments[0].loginTarget;\r\n                    args[4] = arguments[0].async;\r\n\r\n                    /* Special for JSDOSession: if this method was called by a JSDOSession object, \r\n                        it passes deferred and jsdosession and we need to eventually attach them \r\n                        to the XHR we use so that the promise created by the JSDOSession will work\r\n                        correctly\r\n                    */\r\n                    deferred = arguments[0].deferred;\r\n\r\n                    iOSBasicAuthTimeout = arguments[0].iOSBasicAuthTimeout;\r\n                    if (typeof iOSBasicAuthTimeout === 'undefined') {\r\n                        iOSBasicAuthTimeout = defaultiOSBasicAuthTimeout;\r\n                    }\r\n                    else if (iOSBasicAuthTimeout && (typeof iOSBasicAuthTimeout != 'number')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'login',\r\n                            'The iOSBasicAuthTimeout argument was invalid.'));\r\n                    }\r\n                }\r\n                else {\r\n                    args = arguments;\r\n                }\r\n            }\r\n\r\n            if (args.length > 0) {\r\n                if (args[0]) {\r\n                    var restURLtemp = args[0];\r\n\r\n                    // get rid of trailing '/' because appending service url that starts with '/'\r\n                    // will cause request failures\r\n                    if (restURLtemp[restURLtemp.length - 1] === \"/\") {\r\n                        restURLtemp = restURLtemp.substring(0, restURLtemp.length - 1);\r\n                    }\r\n                    setServiceURI(restURLtemp, this);\r\n                } else if (!this.serviceURI) {\r\n                    setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, this);\r\n                    throw new Error(\"Session.login() is missing the serviceURI argument.\");\r\n                }\r\n\r\n                if (args[1]) {\r\n                    uname = args[1];\r\n                }\r\n\r\n                if (args[2]) {\r\n                    pw = args[2];\r\n                }\r\n\r\n                if (args[3]) {\r\n                    setLoginTarget(args[3], this);\r\n                }\r\n\r\n                if (args[4]) {\r\n                    if (typeof(args[4]) === 'boolean') {\r\n                        isAsync = args[4];\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Session.login() was passed an async setting that is not a boolean.\");\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, this);\r\n                throw new Error(\"Session.login() is missing the serviceURI argument.\");\r\n            }\r\n\r\n            // use these temp cred variables later; if login succeeds, we'll use them to set the\r\n            // real credentials\r\n            unameSave = uname;\r\n            pwSave = pw;\r\n\r\n            if (this.authenticationModel === progress.data.Session.AUTH_TYPE_ANON ||\r\n                this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                /* anonymous should NOT have a username and password passed (this is\r\n                 probably unnecessary because the XHR seems to send the request without\r\n                 credentials first, then intercept the 401 if there is one and try again,\r\n                 this time with credentials. Just making sure.\r\n                 */\r\n                /* For form authentication, we may as well not send the user name and password\r\n                 * on this request, since we are just trying to test whether the authentication\r\n                 *  has already happened and they are therefore irrelevant\r\n                 */\r\n                uname = null;\r\n                pw = null;\r\n            }\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.pdsession = this;\r\n\r\n            try {\r\n                uriForRequest = this.serviceURI + this.loginTarget;\r\n                if (progress.data.Session._useTimeStamp) {\r\n                    uriForRequest = progress.data.Session._addTimeStampToURL(uriForRequest);\r\n                }\r\n                this._setXHRCredentials(xhr, 'GET', uriForRequest, uname, pw, isAsync);\r\n\r\n                progress.data.Session._setNoCacheHeaders(xhr);\r\n                // set X-CLIENT-PROPS header\r\n                setRequestHeaderFromContextProps(this, xhr);\r\n                if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                    _addWithCredentialsAndAccept(xhr,\r\n                        \"application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\r\n                }\r\n\r\n                xhr._isAsync = isAsync;\r\n                if (isAsync) {\r\n                    xhr.onreadystatechange = this._onReadyStateChangeGeneric;\r\n                    if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                        xhr.onResponseFn = this._afterFormPretestLogin;\r\n                    }\r\n                    else {\r\n                        xhr.onResponseFn = this._processLoginResult;\r\n                        xhr.onResponseProcessedFn = this._loginComplete;\r\n                    }\r\n                    if (this.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC\r\n                        && isUserAgentiOS\r\n                        && iOSBasicAuthTimeout > 0) {\r\n                        xhr._requestTimeout = setTimeout(function () {\r\n                                clearTimeout(xhr._requestTimeout);\r\n                                xhr._iosTimeOutExpired = true;\r\n                                xhr.abort();\r\n                            },\r\n                            iOSBasicAuthTimeout);\r\n                    }\r\n                    xhr._jsdosession = jsdosession;  // in case the caller is a JSDOSession\r\n                    xhr._deferred = deferred;  // in case the caller is a JSDOSession\r\n                }\r\n\r\n                if (typeof this.onOpenRequest === 'function') {\r\n                    var isFormPreTest = false;\r\n                    if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                        isFormPreTest = true;\r\n                    }\r\n\r\n                    //  set this here in case onOpenRequest checks it\r\n                    setLastSessionXHR(xhr, this);\r\n                    var params = {\r\n                        \"xhr\": xhr,\r\n                        \"verb\": \"GET\",\r\n                        \"uri\": this.serviceURI + this.loginTarget,\r\n                        \"async\": false,\r\n                        \"formPreTest\": isFormPreTest,\r\n                        \"session\": this\r\n                    };\r\n                    this.onOpenRequest(params);\r\n                    xhr = params.xhr; // just in case it has been changed\r\n                }\r\n                setLastSessionXHR(xhr, this);\r\n                xhr.send(null);\r\n            }\r\n            catch (e) {\r\n                clearTimeout(xhr._requestTimeout);\r\n                setLoginHttpStatus(xhr.status, this);\r\n                setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, this);\r\n                unameSave = null;\r\n                pwSave = null;\r\n                throw e;\r\n            }\r\n\r\n            if (isAsync) {\r\n                return progress.data.Session.ASYNC_PENDING;\r\n            }\r\n            else {\r\n                setLoginHttpStatus(xhr.status, this);\r\n                if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                    return (this._afterFormPretestLogin(xhr));\r\n                }\r\n                else {\r\n                    return (this._processLoginResult(xhr));\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        this._afterFormPretestLogin = function (xhr) {\r\n            var pdsession = xhr.pdsession;\r\n            setLoginHttpStatus(xhr.status, xhr.pdsession);\r\n\r\n            var formLoginParams = {\r\n                \"xhr\": xhr,\r\n                \"pw\": pwSave,\r\n                \"uname\": unameSave,\r\n                \"theSession\": pdsession\r\n            };\r\n            try {\r\n                return doFormLogin(formLoginParams);\r\n            }\r\n            catch (e) {\r\n                pwSave = null;\r\n                unameSave = null;\r\n                throw e;\r\n            }\r\n        };\r\n\r\n        /* doFormLogin\r\n         * This function handles logging in to a service that uses form-based authentication. It's separate\r\n         * from the main login function because it's long. One of the things it does is examine the\r\n         * response from an initial attempt to get the login target without credentials (done in the main\r\n         * login() function) to determine whether the user has already been authenticated. Although a\r\n         * current OE Mobile Web application (as of 5/30/2013) will return an error if authentication\r\n         * failed on a form login, previous versions and non-OE servers return a\r\n         * redirect to a login page and the user agent (browser or native wrapper)\r\n         * usually then fetches the redirect location and returns it along with a\r\n         * 200 Success status, when in fcat it was an authentication failure. Hence\r\n         * the need to analyze the response to try to figure out what we get back.\r\n         *\r\n         */\r\n        function doFormLogin(args) {\r\n            var xhr = args.xhr;\r\n            var theSession = args.theSession;\r\n            var oldXHR;\r\n\r\n            // check whether we got the OE REST Form based error response\r\n            var contentType = null;\r\n            var needAuth = false;\r\n            var params = {\r\n                \"session\": theSession,\r\n                \"xhr\": xhr,\r\n                \"statusFromjson\": null\r\n            };\r\n\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n\r\n            if (contentType && contentType.indexOf(\"application/json\") >= 0) {\r\n                handleJSONLoginResponse(params);\r\n                if (!params.statusFromjson\r\n                    || (params.statusFromjson >= 400 && params.statusFromjson < 500)\r\n                ) {\r\n                    needAuth = true;\r\n                }\r\n                else {\r\n                    // either the response shows that we're already authenticated, or\r\n                    // there's some error other than an authentication error\r\n                    setLoginHttpStatus(params.statusFromjson, theSession);\r\n                }\r\n            }\r\n            else {\r\n                // need to do only 200 for async to work with MWA down\r\n                if (theSession.loginHttpStatus == 200) {\r\n                    if (_gotLoginForm(xhr)) {\r\n                        needAuth = true;\r\n                    }\r\n                    // else we are assuming we truly retrieved the login target and\r\n                    // therefore we were previously authenticated\r\n                }\r\n                // else had an error, just return it\r\n            }\r\n\r\n            if (needAuth) {\r\n                // create new XHR, because if this is an async call we don't want to\r\n                // confuse things by using this xhr to send another request while we're\r\n                // still processing its old request (this function, doFormLogin(), may\r\n                // have been called from onReadyStateChangeGeneric and it's conceivable\r\n                // that that function has more code to execute involving this xhr)\r\n                oldXHR = xhr;\r\n                xhr = new XMLHttpRequest();\r\n                args.xhr = xhr;\r\n                params.xhr = xhr;\r\n\r\n                // need to transfer any properties that the Session code stored in the\r\n                // the xhr that need to persist across the 2 requests made by a our\r\n                // login implementation for Form auth\r\n                xhr.pdsession = oldXHR.pdsession;\r\n                xhr._isAsync = oldXHR._isAsync;\r\n                xhr._deferred = oldXHR._deferred;  // special for JSDOSession \r\n                xhr._jsdosession = oldXHR._jsdosession;  // special for JSDOSession \r\n\r\n                xhr.open('POST', theSession.serviceURI + \"/static/auth/j_spring_security_check\", xhr._isAsync);\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                xhr.setRequestHeader(\"Cache-Control\", \"max-age=0\");\r\n                // set X-CLIENT-PROPS header\r\n                setRequestHeaderFromContextProps(theSession, xhr);\r\n\r\n                _addWithCredentialsAndAccept(xhr, \"application/json\");\r\n\r\n                try {\r\n\r\n                    // Note: this gives a developer a way to change certain aspects of how we do the \r\n                    // form-based login, but we will still be assuming that we are going directly to\r\n                    // j_spring_security_check and including credentials in the body. They really should not\r\n                    // try to change that.\r\n                    //\r\n                    if (typeof theSession.onOpenRequest === 'function') {\r\n                        var cbparams = {\r\n                            \"xhr\": xhr,\r\n                            \"verb\": \"POST\",\r\n                            \"uri\": theSession.serviceURI + \"/static/auth/j_spring_security_check\",\r\n                            \"async\": xhr._isAsync,\r\n                            \"formPreTest\": false,\r\n                            \"session\": theSession\r\n                        };\r\n                        theSession.onOpenRequest(cbparams);\r\n                        xhr = cbparams.xhr;\r\n                    }\r\n\r\n                    if (xhr._isAsync) {\r\n                        xhr.onreadystatechange = theSession._onReadyStateChangeGeneric;\r\n                        xhr.onResponseFn = theSession._afterFormLogin;\r\n                        xhr.onResponseProcessedFn = theSession._loginComplete;\r\n                    }\r\n\r\n                    // j_username=username&j_password=password&submit=Submit\r\n                    xhr.send(\"j_username=\" + encodeURIComponent(args.uname) + \"&j_password=\" + encodeURIComponent(args.pw) + \"&submit=Submit\");\r\n                }\r\n                catch (e) {\r\n                    setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, theSession);\r\n                    setLoginHttpStatus(xhr.status, theSession);\r\n                    // null the temporary credentials variables\r\n                    unameSave = null;\r\n                    pwSave = null;\r\n                    throw e;\r\n                }\r\n\r\n            }\r\n\r\n            if (xhr._isAsync && !needAuth) {\r\n                xhr.onResponseProcessedFn = theSession._loginComplete;\r\n                return theSession._afterFormLogin(xhr);\r\n            }\r\n            if (!xhr._isAsync) {\r\n                return theSession._afterFormLogin(xhr);\r\n            }\r\n\r\n        }\r\n\r\n        this._afterFormLogin = function (xhr) {\r\n            // check what we got\r\n            var theSession = xhr.pdsession;\r\n            var params = {\r\n                \"session\": theSession,\r\n                \"xhr\": xhr,\r\n                \"statusFromjson\": null\r\n            };\r\n            var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n\r\n            if (contentType && contentType.indexOf(\"application/json\") >= 0) {\r\n                handleJSONLoginResponse(params);\r\n                if (!params.statusFromjson) {\r\n                    throw new Error(\r\n                        \"Internal OpenEdge Mobile client error handling login response. HTTP status: \" +\r\n                        xhr.status + \".\");\r\n                }\r\n                else {\r\n                    setLoginHttpStatus(params.statusFromjson, theSession);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr.status === 200) {\r\n                    // Was the response actually the login failure page or the login page itself (in case\r\n                    // the appSecurity config file sets the login failure url so the server sends the login\r\n                    // page again)? If so, call it an error because the credentials apparently failed to be\r\n                    // authenticated\r\n                    if (_gotLoginFailure(xhr) || _gotLoginForm(xhr)) {\r\n                        setLoginHttpStatus(401, theSession);\r\n                    }\r\n                    else {\r\n                        setLoginHttpStatus(xhr.status, theSession);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return theSession._processLoginResult(xhr);\r\n        };\r\n\r\n\r\n        this._processLoginResult = function (xhr) {\r\n            /* OK, one way or another, by hook or by crook, the Session object's loginHttpStatus\r\n             * has been set to the value that indicates the real outcome of the\r\n             * login, after adjusting for form-based authentication and anything\r\n             * else. At this point, it should be just a matter of examining\r\n             * this.loginHttpStatus, using it to set this.loginResult, maybe doing\r\n             * some other work appropriate to the outcome of the login, and returning\r\n             * this.loginResult.\r\n             */\r\n            var pdsession = xhr.pdsession;\r\n\r\n            setLoginHttpStatus(xhr.status, xhr.pdsession);\r\n\r\n            if (pdsession.loginHttpStatus === 200) {\r\n                setLoginResult(progress.data.Session.LOGIN_SUCCESS, pdsession);\r\n                setRestApplicationIsOnline(true);\r\n                setUserName(unameSave, pdsession);\r\n                _password = pwSave;\r\n                pdsession._saveClientContextId(xhr);\r\n                storeAllSessionInfo();  // save info to persistent storage \r\n\r\n                var pingTestArgs = {\r\n                    pingURI: null, async: true, onCompleteFn: null,\r\n                    fireEventIfOfflineChange: true, onReadyStateFn: pdsession._pingtestOnReadyStateChange\r\n                };\r\n                pingTestArgs.pingURI = pdsession._makePingURI();\r\n                pdsession._sendPing(pingTestArgs);  // see whether the ping feature is available\r\n            }\r\n            else {\r\n                if (pdsession.loginHttpStatus == 401) {\r\n                    setLoginResult(progress.data.Session.LOGIN_AUTHENTICATION_FAILURE, pdsession);\r\n                }\r\n                else {\r\n                    setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, pdsession);\r\n                }\r\n            }\r\n            setLastSessionXHR(xhr, pdsession);\r\n            updateContextPropsFromResponse(pdsession, xhr);\r\n\r\n            // null the temporary credentials variables\r\n            unameSave = null;\r\n            pwSave = null;\r\n            if (xhr._iosTimeOutExpired) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG047\", \"login\"));\r\n            }\r\n\r\n            // return loginResult even if it's an async operation -- the async handler\r\n            // (e.g., onReadyStateChangeGeneric) will just ignore\r\n            return pdsession.loginResult;\r\n        };\r\n\r\n\r\n        this._loginComplete = function (pdsession, result, errObj, xhr) {\r\n            pdsession.trigger(\"afterLogin\", pdsession, result, errObj, xhr);\r\n        };\r\n\r\n        // GET RID OF progress.data.Session logout CODE (AND RELATED) IF WE DROP SUPPORT FOR USING\r\n        // THE OLD progress.data.Session API DIRECTLY (mainly a problem for existing code (tdriver),\r\n        // or anyone who wants to call methods synchronously, which should be no one)\r\n        this.logout = function (args) {\r\n            var isAsync = false,\r\n                errorObject = null,\r\n                xhr,\r\n                deferred,\r\n                params;\r\n\r\n            if (this.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                // Session: Cannot call logout() when authenticationModel is SSO. \r\n                // Please use the AuthenticationProvider object instead.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG057\", 'Session', 'logout()'));\r\n            }\r\n\r\n            if (this.loginResult !== progress.data.Session.LOGIN_SUCCESS && this.authenticationModel) {\r\n                throw new Error(\"Attempted to call logout when there is no active session.\");\r\n            }\r\n\r\n            if (typeof(args) === 'object') {\r\n                isAsync = args.async;\r\n                if (isAsync && (typeof isAsync !== 'boolean')) {\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG033\",\r\n                        \"Session\",\r\n                        'logout',\r\n                        'The async argument was invalid.'));\r\n                }\r\n                /* Special for JSDOSession: if this method was called by a JSDOSession object, it passes\r\n                    deferred and jsdosession and we need to eventually attach them to the XHR we use \r\n                    so that the promise created by the JSDOSession will work correctly\r\n                */\r\n                deferred = args.deferred;\r\n            }\r\n\r\n            xhr = new XMLHttpRequest();\r\n            xhr.pdsession = this;\r\n            try {\r\n                /* logout when auth model is anonymous is a no-op on the server side \r\n                   (but we need to set _jsdosession and _deferred anyway to make promise work\r\n                    if logout was called by a JSDOSession) */\r\n                xhr._jsdosession = jsdosession;  // in case the caller is a JSDOSession\r\n                xhr._deferred = deferred;  // in case the caller is a JSDOSession\r\n                if (this.authenticationModel === progress.data.Session.AUTH_TYPE_FORM ||\r\n                    this.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC) {\r\n                    if (isAsync) {\r\n                        xhr.onreadystatechange = this._onReadyStateChangeGeneric;\r\n                        xhr.onResponseFn = this._processLogoutResult;\r\n                        xhr.onResponseProcessedFn = this._logoutComplete;\r\n                    }\r\n\r\n\r\n                    xhr.open('GET', this.serviceURI + \"/static/auth/j_spring_security_logout\", isAsync);\r\n\r\n                    /* instead of calling _addWithCredentialsAndAccept, we code the withCredentials\r\n                     * and setRequestHeader inline so we can do it slightly differently. That\r\n                     * function deliberately sets the request header inside the try so we don't\r\n                     * run into a FireFox oddity that would give us a successful login and then\r\n                     * a failure on getCatalog (see the comment on that function). On logout,\r\n                     * however, we don't care -- just send the Accept header so we can get a 200\r\n                     * response\r\n                     */\r\n                    try {\r\n                        xhr.withCredentials = true;\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n\r\n                    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\r\n                    // set X-CLIENT-PROPS header\r\n                    setRequestHeaderFromContextProps(this, xhr);\r\n\r\n                    if (typeof this.onOpenRequest === 'function') {\r\n                        setLastSessionXHR(xhr, this);\r\n                        params = {\r\n                            \"xhr\": xhr,\r\n                            \"verb\": \"GET\",\r\n                            \"uri\": this.serviceURI + \"/static/auth/j_spring_security_logout\",\r\n                            \"async\": false,\r\n                            \"formPreTest\": false,\r\n                            \"session\": this\r\n                        };\r\n                        this.onOpenRequest(params);\r\n                        xhr = params.xhr;\r\n                    }\r\n\r\n                    setLastSessionXHR(xhr, this);\r\n                    xhr.send();\r\n                }\r\n                else {\r\n                    xhr._anonymousLogoutOK = true;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._reinitializeAfterLogout(this, false);\r\n                throw e;\r\n            }\r\n\r\n            if (!isAsync) {\r\n                try {\r\n                    this._processLogoutResult(xhr);\r\n                }\r\n                catch (e) {\r\n                    throw e;\r\n                }\r\n            }\r\n\r\n            if (isAsync && this.authenticationModel === progress.data.Session.AUTH_TYPE_ANON) {\r\n                // fake async for Anonymous -- fire afterLogout event\r\n                try {\r\n                    this._processLogoutResult(xhr);\r\n                }\r\n                catch (e) {\r\n                    errorObject = e;\r\n                }\r\n                this._logoutComplete(this, null, errorObject, xhr);\r\n            }\r\n\r\n        };\r\n\r\n        // This function erases all evidence of itself from the ServicesManager and\r\n        // flips a bit to prevent it to be used in the future\r\n        this.invalidate = function () {\r\n            isInvalidated = true;\r\n            cleanServicesManager();\r\n        };\r\n\r\n        this._logoutComplete = function (pdsession, result, errorObject, xhr) {\r\n            // ignore result, it doesn't apply to logout -- is probably null or GENERAL_FAILURE\r\n            // we include it so onReadyStateChangeGeneric calls this correctly\r\n            pdsession.trigger(\"afterLogout\", pdsession, errorObject, xhr);\r\n        };\r\n\r\n        this._processLogoutResult = function (xhr) {\r\n            var logoutSucceeded;\r\n            var pdsession = xhr.pdsession;\r\n            var basicStatusOK = false;\r\n\r\n            if (xhr._anonymousLogoutOK) {\r\n                logoutSucceeded = true;\r\n            }\r\n            else if (xhr.status !== 200) {\r\n                /* Determine whether an error returned from the server is really an error\r\n                 */\r\n                if (pdsession.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC) {\r\n                    /* If the Auth model is Basic, we probably got back a 404 Not found.\r\n                     * But that's OK, because logout from Basic is meaningless on the\r\n                     * server side unless it happens to be stateful, which is the only\r\n                     * reason we even try calling j_spring_security_logout\r\n                     */\r\n                    if (xhr.status === 404) {\r\n                        logoutSucceeded = true;\r\n                    }\r\n                    else {\r\n                        logoutSucceeded = false;\r\n                        throw new Error(\"Error logging out, HTTP status = \" + xhr.status);\r\n                    }\r\n                }\r\n                else {\r\n                    // for Form auth, any error on logout is an error\r\n                    logoutSucceeded = false;\r\n\r\n                    // page refresh - we should call _reinitializeAfterLogout, or do something, so that\r\n                    // caller can try logging in again (this is not a problem specific to page refresh,\r\n                    // but the case of a page refresh after a server has gone down emphasizes it)\r\n\r\n                    throw new Error(\"Error logging out, HTTP status = \" + xhr.status);\r\n                }\r\n            }\r\n            else {\r\n                logoutSucceeded = true;\r\n            }\r\n\r\n            updateContextPropsFromResponse(pdsession, xhr);\r\n            pdsession._reinitializeAfterLogout(pdsession, logoutSucceeded);\r\n        };\r\n\r\n        this._reinitializeAfterLogout = function (pdsession, success) {\r\n            setLoginResult(null, pdsession);\r\n            setLoginHttpStatus(null, pdsession);\r\n            setClientContextID(null, pdsession);\r\n            setUserName(null, pdsession);\r\n            _password = null;\r\n            setAuthProvider(null);\r\n\r\n            if (success) {\r\n                setRestApplicationIsOnline(false);\r\n                setOepingAvailable(false);\r\n                setPartialPingURI(defaultPartialPingURI);\r\n                setLastSessionXHR(null, pdsession);\r\n                clearTimeout(_timeoutID);   //  stop autopinging \r\n            }\r\n        };\r\n\r\n\r\n        /* addCatalog\r\n         *\r\n         */\r\n        this.addCatalog = function (arg1, arg2, arg3, arg4) {\r\n            var catalogURI,\r\n                catalogUserName,\r\n                catalogPassword,\r\n                isAsync = false,\r\n                xhr,\r\n                deferred,\r\n                iOSBasicAuthTimeout,\r\n                catalogIndex,\r\n                authProvider,\r\n                that = this;\r\n\r\n            function addCatalogAfterOpen() {\r\n                /* This is here as much for CORS situations as the possibility that there might be an \r\n                 * out of date cached version of the catalog. The CORS problem happens if you have \r\n                 * accessed the catalog locally and then run an app on a different server that requests\r\n                 * the catalog. Your browser already has the catalog, but the request used to get it was\r\n                 * a non-CORS request and the browser will raise an error\r\n                 */\r\n                progress.data.Session._setNoCacheHeaders(xhr);\r\n                // set X-CLIENT-PROPS header\r\n                setRequestHeaderFromContextProps(that, xhr);\r\n\r\n                if (isAsync) {\r\n                    xhr.onreadystatechange = that._onReadyStateChangeGeneric;\r\n                    xhr.onResponseFn = that._processAddCatalogResult;\r\n                    xhr.onResponseProcessedFn = that._addCatalogComplete;\r\n\r\n                    if (that.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC\r\n                        && isUserAgentiOS\r\n                        && iOSBasicAuthTimeout) {\r\n                        xhr._requestTimeout = setTimeout(function () {\r\n                                clearTimeout(xhr._requestTimeout);\r\n                                xhr._iosTimeOutExpired = true;\r\n                                xhr.abort();\r\n                            },\r\n                            iOSBasicAuthTimeout);\r\n                    }\r\n\r\n                    // in case the caller is a JSDOSession\r\n                    xhr._jsdosession = jsdosession;\r\n                    xhr._deferred = deferred;\r\n                    xhr._catalogIndex = catalogIndex;\r\n                }\r\n\r\n                try {\r\n                    if (typeof that.onOpenRequest === 'function') {\r\n                        setLastSessionXHR(xhr, that);\r\n                        var params = {\r\n                            \"xhr\": xhr,\r\n                            \"verb\": \"GET\",\r\n                            \"uri\": catalogURI,\r\n                            \"async\": false,\r\n                            \"formPreTest\": false,\r\n                            \"session\": that\r\n                        };\r\n                        that.onOpenRequest(params);\r\n                        xhr = params.xhr;\r\n                    }\r\n\r\n                    setLastSessionXHR(xhr, that);\r\n                    xhr.send(null);\r\n                } catch (e) {\r\n                    throw new Error(\"Error retrieving catalog '\" + catalogURI + \"'.\\n\" + e.message);\r\n                }\r\n                if (isAsync) {\r\n                    return progress.data.Session.ASYNC_PENDING;\r\n                } else {\r\n                    return that._processAddCatalogResult(xhr);\r\n                }\r\n\r\n            }\r\n\r\n            if (this._isInvalidated) {\r\n                // JSDOSession: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"JSDOSession\"));\r\n            }\r\n\r\n            // Assume we're using a custom username/pw/authprovider\r\n            customCredentials = true;\r\n\r\n            // check whether the args were passed in a single object. If so, copy them\r\n            // to the named arguments and a variable\r\n            if (arguments.length > 0) {\r\n                if (typeof arg1 === 'object') {\r\n                    // check whether it's OK to add a catalog whilst offline\r\n                    if (!arguments[0].offlineAddCatalog) {\r\n                        if ((this.loginResult !== progress.data.Session.LOGIN_SUCCESS\r\n                            && !this._authProvider)\r\n                            && this.authenticationModel) {\r\n                            throw new Error(\"Attempted to call addCatalog when there is no active session.\");\r\n                        }\r\n                    }\r\n\r\n                    catalogURI = arg1.catalogURI;\r\n                    if (!catalogURI || (typeof catalogURI !== 'string')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'addCatalog',\r\n                            'The catalogURI argument was missing or invalid.'));\r\n                    }\r\n                    catalogUserName = arg1.userName;\r\n                    if (catalogUserName && (typeof catalogUserName !== 'string')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'addCatalog',\r\n                            'The catalogUserName argument was invalid.'));\r\n                    }\r\n                    catalogPassword = arg1.password;\r\n                    if (catalogPassword && (typeof catalogPassword !== 'string')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'addCatalog',\r\n                            'The catalogPassword argument was invalid.'));\r\n                    }\r\n                    isAsync = arg1.async;\r\n                    if (isAsync && (typeof isAsync !== 'boolean')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'addCatalog',\r\n                            'The async argument was invalid.'));\r\n                    }\r\n                    iOSBasicAuthTimeout = arg1.iOSBasicAuthTimeout;\r\n                    if (typeof iOSBasicAuthTimeout === 'undefined') {\r\n                        iOSBasicAuthTimeout = defaultiOSBasicAuthTimeout;\r\n                    } else if (iOSBasicAuthTimeout && (typeof iOSBasicAuthTimeout !== 'number')) {\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG033\", 'Session', 'addCatalog',\r\n                            'The iOSBasicAuthTimeout argument was invalid.'));\r\n                    }\r\n                    authProvider = arg1.authProvider;\r\n\r\n                    /* Special for JSDOSession: if this method was called by a JSDOSession object, it passes\r\n                        deferred, jsdosession, and catalogIndex and we need to eventually attach them to the\r\n                        XHR we use so that the promise created by the JSDOSession will work correctly\r\n                    */\r\n                    deferred = arg1.deferred;\r\n                    catalogIndex = arg1.catalogIndex;\r\n                } else {\r\n                    catalogURI = arg1;\r\n                    if (typeof catalogURI !== 'string') {\r\n                        throw new Error(\"First argument to Session.addCatalog must be the URL of the catalog.\");\r\n                    }\r\n                    catalogUserName = arg2;\r\n                    if (catalogUserName && (typeof catalogUserName !== 'string')) {\r\n                        throw new Error(\"Second argument to Session.addCatalog must be a user name string.\");\r\n                    }\r\n                    catalogPassword = arg3;\r\n                    if (catalogPassword && (typeof catalogPassword !== 'string')) {\r\n                        throw new Error(\"Third argument to Session.addCatalog must be a password string.\");\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"Session.addCatalog is missing its first argument, the URL of the catalog.\");\r\n            }\r\n\r\n            if (!authProvider) {\r\n                authProvider = this._authProvider;\r\n\r\n                // Guess we're using the default credentials passed earlier\r\n                customCredentials = false;\r\n            }\r\n\r\n            // TODO: we expect that there will always be an authProvider if a login has been done.\r\n            // Therefore, we don't need to set catalogUsername and catalogPassword if they aren't\r\n            // passed in. What we should do here, when we extend the AuthenticationProvider API\r\n            // for the older auth models, is take any uname and pw passed in and create an auth\r\n            // provider, log in to the catalogURI with it, create an authImpl, and then fetch the\r\n            // catalog.\r\n            if (!catalogUserName) {\r\n                catalogUserName = this.userName;\r\n            }\r\n\r\n            if (!catalogPassword) {\r\n                catalogPassword = _password;\r\n            }\r\n\r\n            xhr = new XMLHttpRequest();\r\n            xhr.pdsession = this;\r\n            xhr._catalogURI = catalogURI;\r\n\r\n            // for now we don't support multiple version of the catalog across sessions\r\n            if (progress.data.ServicesManager.getSession(catalogURI) !== undefined) {\r\n                if (isAsync) {\r\n                    /*\r\n                        Attempt to get the event to fire AFTER this call returns ASYNC_PENDING\r\n                        (and if the method was called from a JSDOSession, create an xhr to communicate \r\n                         information related to promises back to its afterAddCatalog handler). Note that \r\n                         the xhr is never used to make a request, it just carries data in the way \r\n                         expected by the handler)\r\n                     */\r\n                    // in case the caller is a JSDOSession \r\n                    xhr._jsdosession = jsdosession;\r\n                    xhr._deferred = deferred;\r\n                    xhr._catalogIndex = catalogIndex;\r\n\r\n                    setTimeout(this._addCatalogComplete, 10, this,\r\n                        progress.data.Session.CATALOG_ALREADY_LOADED, null, xhr);\r\n                    return progress.data.Session.ASYNC_PENDING;\r\n                }\r\n                return progress.data.Session.CATALOG_ALREADY_LOADED;\r\n            }\r\n\r\n            if (authProvider) {\r\n                authProvider._openRequestAndAuthorize(xhr, 'GET', catalogURI, isAsync, addCatalogAfterOpen);\r\n                // existing code in JSDOSession addCatalog expects to get this as a return value,\r\n                // have to return it now\r\n                return progress.data.Session.ASYNC_PENDING;\r\n            } else {  // should be able to get rid of this if we do away with synchronous (old Session API) support\r\n                this._setXHRCredentials(xhr, 'GET', catalogURI, catalogUserName, catalogPassword, isAsync);\r\n                // Note that we are not adding the CCID to the URL or as a header, because the catalog may not\r\n                // be stored with the REST app and even if it is, the AppServer ID shouldn't be relevant\r\n\r\n                return addCatalogAfterOpen();\r\n            }\r\n\r\n        };\r\n\r\n        this._processAddCatalogResult = function (xhr) {\r\n            var _catalogHttpStatus = xhr.status;\r\n            var theSession = xhr.pdsession;\r\n            var servicedata;\r\n            var catalogURI = xhr._catalogURI,\r\n                serviceURL,\r\n                theJSDOSession = jsdosession;\r\n\r\n            // Only change the Session's state if the default AuthProv is being used\r\n            if (!customCredentials) {\r\n                toggleOnlineState(xhr);\r\n            }\r\n\r\n            if ((_catalogHttpStatus == 200) || (_catalogHttpStatus === 0) && xhr.responseText) {\r\n                servicedata = theSession._parseCatalog(xhr);\r\n                try {\r\n                    progress.data.ServicesManager.addCatalog(servicedata, theSession);\r\n                }\r\n                catch (e) {\r\n                    if (progress.data.ServicesManager.getSession(catalogURI) !== undefined) {\r\n                        /* this failed because the catalog had already been loaded, but the code\r\n                           in addCatalog did not catch that, probably because we are executing\r\n                           the JSDOSession addCatalog with multiple catalogURIs passed, and 2 \r\n                           are the same\r\n                         */\r\n                        return progress.data.Session.CATALOG_ALREADY_LOADED;\r\n                    }\r\n                    // different catalogs, with same resource name\r\n                    throw new Error(\"Error processing catalog '\" + catalogURI + \"'. \\n\" + e.message);\r\n                }\r\n                // create a mobile service object and add it to the Session's array of same\r\n                for (var i = 0; i < servicedata.length; i++) {\r\n                    serviceURL = theSession._prependAppURL(servicedata[i].address);\r\n                    pushService(new progress.data.MobileServiceObject(\r\n                        {\r\n                            name: servicedata[i].name,\r\n                            uri: serviceURL\r\n                        }),\r\n                        theSession);\r\n\r\n                    if (servicedata[i].settings\r\n                        && servicedata[i].settings.useXClientProps\r\n                        && !theSession.xClientProps) {\r\n                        console.warn(\"Catalog warning: Service settings property 'useXClientProps' \" +\r\n                            \"is true but 'xClientProps' property has not been set.\");\r\n                    }\r\n                }\r\n                pushCatalogURIs(catalogURI, theSession);\r\n                progress.data.ServicesManager.addSession(catalogURI, theSession);\r\n                if (theJSDOSession) {\r\n                    progress.data.ServicesManager.addJSDOSession(catalogURI, theJSDOSession);\r\n                }\r\n            }\r\n            else if (_catalogHttpStatus == 401) {\r\n                return progress.data.AuthenticationProvider._getAuthFailureReason(xhr);\r\n            }\r\n            else if (xhr._iosTimeOutExpired) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG047\", \"addCatalog\"));\r\n            }\r\n            else {\r\n                throw new Error(\"Error retrieving catalog '\" + catalogURI +\r\n                    \"'. Http status: \" + _catalogHttpStatus + \".\");\r\n            }\r\n\r\n            return progress.data.Session.SUCCESS;\r\n        };\r\n\r\n        this._addCatalogComplete = function (pdsession, result, errObj, xhr) {\r\n            pdsession.trigger(\"afterAddCatalog\", pdsession, result, errObj, xhr);\r\n        };\r\n\r\n\r\n        /*\r\n         *  ping -- determine whether the Mobile Web Application that the Session object represents\r\n         *  is available, which includes determining whether its associated AppServer is running\r\n         *  Also determine whether the Mobile services managed by this Session object are available\r\n         *  (which means simply that they're known to the Mobile Web Application)\r\n         *  (Implementation note: be sure that this Session object's \"connected\"\r\n         *  property retains its current value until the end of this function, where\r\n         *  it gets updated, if necessary, after calling _isOnlineStateChange\r\n         *\r\n         *  Signatures :\r\n         *  @param arg\r\n         *  There are 2 signatures --\r\n         *   -  no argument -- do an async ping of the Session's Mobile Web application. The only effect\r\n         *                     of the ping will be firing an offline or an online event, if appropriate\r\n         *                     The ping function itself will return false to the caller\r\n         *   -  object argument -- the object's properties provide the input args. They are all\r\n         *          optional (if for some reason the caller passes an object that has no properties, it's\r\n         *          the same as passing no argument at all). The properties may be:\r\n         *            async -- tells whether to execute the ping asynchronously (which is the default)\r\n         *            onCompleteFn -- if async, this will be called when response returns\r\n         *            doNotFireEvent -- used internally, controls whether the ping method causes an offline\r\n         *                 or online event to be fired if there has been a change (the default is that it\r\n         *                 does, but our Session._checkServiceResponse() sets this to true so that it can\r\n         *                 control the firing of the event)\r\n         *            offlineReason -- if present, and if the ping code discovers that teh server is offline,\r\n         *                 the ping code will set this with its best guess \r\n         *                 as to the reason the server is offline\r\n         */\r\n        this.ping = function (args) {\r\n            var pingResult = false;\r\n            var pingArgs = {\r\n                pingURI: null, async: true, onCompleteFn: null,\r\n                fireEventIfOfflineChange: true, onReadyStateFn: this._onReadyStateChangePing,\r\n                offlineReason: null\r\n            };\r\n\r\n            if (this._isInvalidated) {\r\n                // Session: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"Session\"));\r\n            }\r\n\r\n            if ((!this._authProvider) && (this.loginResult !== progress.data.Session.LOGIN_SUCCESS)) {\r\n                throw new Error(\"Attempted to call ping when not logged in.\");\r\n            }\r\n\r\n            if (args) {\r\n                if (args.async !== undefined) {\r\n                    // when we do background pinging (because pingInterval is set),\r\n                    // we pass in an arg that is just an object that has an async property,\r\n                    // set to true. This can be expanded to enable other kinds of ping calls\r\n                    // to be done async (so that application developers can do so, if we decide\r\n                    // to support that)\r\n                    pingArgs.async = args.async;\r\n                }\r\n\r\n                if (args.doNotFireEvent !== undefined) {\r\n                    pingArgs.fireEventIfOfflineChange = !args.doNotFireEvent;\r\n                }\r\n\r\n                if (args.onCompleteFn && (typeof args.onCompleteFn) == 'function') {\r\n                    pingArgs.onCompleteFn = args.onCompleteFn;\r\n                }\r\n                /* Special for JSDOSession: if this method was called by a JSDOSession object, it passes\r\n                    deferred and jsdosession and we need to eventually attach them to the XHR we use so that\r\n                    the promise created by the JSDOSession will work correctly\r\n                */\r\n                pingArgs.deferred = args.deferred;\r\n                pingArgs.jsdosession = args.jsdosession;\r\n\r\n            }\r\n\r\n\r\n            /* Ping the Mobile Web Application (this will also determine whether AppServer is available)\r\n             * Call _processPingResult() if we're synchronous, otherwise the handler for the xhr.send()\r\n             * will call it\r\n             */\r\n            pingArgs.pingURI = that._makePingURI();\r\n            that._sendPing(pingArgs);\r\n            if (!pingArgs.async) {\r\n                if (pingArgs.xhr) {\r\n                    pingResult = that._processPingResult(pingArgs);\r\n                    if (args.offlineReason !== undefined) {\r\n                        args.offlineReason = pingArgs.offlineReason;\r\n                    }\r\n                }\r\n                else {\r\n                    pingResult = false; // no xhr returned from _sendPing, something must have gone wrong\r\n                }\r\n                if (args.xhr !== undefined) {\r\n                    // if it's a sync ping, return the xhr if caller indicates they want it\r\n                    // (there's almost guaranteed to be one, even if the ping was never sent\r\n                    // if for some reason there isn't, we give them the null or undefined we ended up with)\r\n                    args.xhr = pingArgs.xhr;\r\n                }\r\n            }\r\n            // else it's async, deliberately returning false \r\n            // so developer not misled into thinking the ping succeeded\r\n\r\n            return pingResult;\r\n        };\r\n\r\n\r\n        // \"protected\" Functions\r\n\r\n        /*\r\n         * given a value of true or false for being online for the Mobile Web Application\r\n         * managed by this Session object, determine whether that changes the current\r\n         * state of being offline or online.\r\n         * Returns true if the input state is a change from the current state\r\n         *\r\n         * Signature :\r\n         * @param isOnline  Required. True to determine whether online is a state change, false to\r\n         *                  determine whether offline constitutes a state change. Boolean.\r\n         *\r\n         */\r\n        this._isOnlineStateChange = function (isOnline) {\r\n            var stateChanged = false;\r\n\r\n            if (isOnline && !(this.connected)) {\r\n                stateChanged = true;\r\n            }\r\n            else if (!isOnline && (this.connected)) {\r\n                stateChanged = true;\r\n            }\r\n\r\n            return stateChanged;\r\n        };\r\n\r\n\r\n        /*\r\n         * given information about the response from a request made to a service,\r\n         * do the following:\r\n         *\r\n         * determine whether the online status of the Session has changed, and\r\n         * set the Session's Connected property accordingly\r\n         * if the Session's online status has changed, fire the appropriate event\r\n         *\r\n         * Signature :\r\n         * @param xhr      Required. The xhr that was used to make the request. Object\r\n         * @param success  Required. True if caller regards the request as having succeeded. Boolean\r\n         * @param request  Required. The JSDO request object created for making the request. Object.\r\n         *\r\n         */\r\n        this._checkServiceResponse = function (xhr, success, request) {\r\n            var offlineReason = null,\r\n                wasOnline = this.connected;\r\n            updateContextPropsFromResponse(this, xhr);\r\n\r\n            /* first of all, if there are no subscriptions to offline or online events, don't\r\n             * bother -- we don't want to run the risk of messing things up by calling ping\r\n             * if the app developer isn't interested (especially because that may mean that\r\n             * ping isn't enabled on the server, anyway)\r\n             */\r\n            if (!this._events) {\r\n                return;\r\n            }\r\n            var offlineObservers = this._events[\"offline\"] || [];\r\n            var onlineObservers = this._events[\"online\"] || [];\r\n            if ((offlineObservers.length === 0) && (onlineObservers.length === 0)) {\r\n                return;\r\n            }\r\n\r\n            /* even though this function gets called as a result of trying to\r\n             * contact the server, don't bother to change anything if we already\r\n             * know that the device (or user agent, or client machine) is offline.\r\n             * We can't assume anything about the state of the server if we can't\r\n             * even get to the internet from the client\r\n             */\r\n\r\n            // if the call to the server was a success, we will assume we are online,\r\n            // both server and device\r\n            if (success) {\r\n                setRestApplicationIsOnline(true);\r\n                setDeviceIsOnline(true);  // presumably this is true (probably was already true)\r\n            }\r\n            else {\r\n                /* Request failed, determine whether it's because server is offline\r\n                 * Do this even if the Session was already in an offline state, because\r\n                 * we need to determine whether the failure was due to still being\r\n                 * offline, or whether it's now possible to communicate with the\r\n                 * server but the problem was something else.\r\n                 */\r\n\r\n                if (deviceIsOnline) {\r\n                    /* ping the server to get better information on whether this is an offline case\r\n                     * NB: synchronous ping for simplicity, maybe should consider async so as not\r\n                     * to potentially freeze UI\r\n                     */\r\n                    var localPingArgs = {\r\n                        doNotFireEvent: true,  // do in this fn so we have the request\r\n                        offlineReason: null,\r\n                        async: false\r\n                    };\r\n                    if (!(that.ping(localPingArgs))) {\r\n                        offlineReason = localPingArgs.offlineReason;\r\n                        setRestApplicationIsOnline(false);\r\n                    }\r\n                    else {\r\n                        // ping returned true, so even though the original request failed,\r\n                        // we are online and the failure must have been due to something else\r\n                        setRestApplicationIsOnline(true);\r\n                    }\r\n                }\r\n                // else deviceIsOnline was already false, so the offline event should already have\r\n                // been fired for that reason and there is no need to do anything else\r\n            }\r\n\r\n            if (wasOnline && !this.connected) {\r\n                this.trigger(\"offline\", this, offlineReason, request);\r\n            }\r\n            else if (!wasOnline && this.connected) {\r\n                this.trigger(\"online\", this, request);\r\n            }\r\n        };\r\n\r\n        /* Decide whether, on the basis of information returned by a server request, the\r\n         * Mobile Web Application managed by this Session object is online, where online\r\n         * means that the ping response was a 200 and, IF the body of the response contains\r\n         * JSON with an AppServerStatus property, that AppServerStatus Status property has\r\n         * a pingStatus property set to true\r\n         *     i.e., the body has an AppServerStatus.PingStatus set to true\r\n         * (if the body doesn't contain JSON with an AppServerStatus, we use just the HTTP\r\n         * response status code to decide)\r\n         * \r\n         * Returns:  true if the response meets the above conditions, false if it doesn't\r\n         *   \r\n         * Parameters:\r\n         *   args, with properties:\r\n         *      xhr - the XMLHttpRequest used to make the request\r\n         *      offlineReason - if the function determines that the app is offline,\r\n         *                      it sets offlineReason to the reason for that decision,\r\n         *                      for the use of the caller\r\n         *      fireEventIfOfflineChange - if true, the function fires an offline or online\r\n         *                      event if there has been a change (i.e., the online state determined \r\n         *                      by the function is different from what it had been when the function\r\n         *                      began executing)\r\n         *      usingOepingFormat - OPTIONAL. The function's default assumption is that the value\r\n         *                      of the session's internal oepingAvailable variable indicates whether the\r\n         *                      the response body will be in the format used by the OpenEdge oeping service.\r\n         *                      A caller can override this assumption by using this property to true or false.\r\n         *                     (the isAuthorized code sets this to false because it doesn't use oeping \r\n         *                     but does call this function)\r\n         */\r\n        this._processPingResult = function (args) {\r\n            var xhr = args.xhr,\r\n                pingResponseJSON,\r\n                appServerStatus = null,\r\n                wasOnline = this.connected,\r\n                connectedBeforeCallback,\r\n                assumeOepingFormat;\r\n\r\n            if (args.hasOwnProperty('usingOepingFormat')) {\r\n                assumeOepingFormat = args.usingOepingFormat;\r\n            } else {\r\n                assumeOepingFormat = oepingAvailable;\r\n            }\r\n\r\n            /* first determine whether the Web server and the Mobile Web Application (MWA)\r\n             * are available\r\n             */\r\n            if (xhr.status >= 200 && xhr.status < 300) {\r\n                updateContextPropsFromResponse(this, xhr);\r\n                if (assumeOepingFormat) {\r\n                    try {\r\n                        pingResponseJSON = JSON.parse(xhr.responseText);\r\n                        appServerStatus = pingResponseJSON.AppServerStatus;\r\n                    }\r\n                    catch (e) {\r\n                        /* We got a successful response from calling our ping URI, but it\r\n                         * didn't return valid JSON. If we think that the oeping REST API\r\n                         * is available on the server (so we should have gotten valid\r\n                         * json), log this to the console.\r\n                         *\r\n                         */\r\n                        console.error(\"Unable to parse ping response.\");\r\n                    }\r\n                }\r\n                toggleOnlineState(xhr);\r\n            }\r\n            else {\r\n                if (deviceIsOnline) {\r\n                    if (xhr.status === 0) {\r\n                        args.offlineReason = progress.data.Session.SERVER_OFFLINE;\r\n                        setRestApplicationIsOnline(false);\r\n                    }\r\n                    else if ((xhr.status === 404) || (xhr.status === 410)) {\r\n                        /* if we get a 404, it means the Web server is up, but it\r\n                         * can't find the resource we requested (either _oeping or\r\n                         * the login target), therefore the Mobile Web application\r\n                         * must be unavailable (410 is Gone)\r\n                         */\r\n                        args.offlineReason = progress.data.Session.WEB_APPLICATION_OFFLINE;\r\n                        setRestApplicationIsOnline(false);\r\n                    }\r\n                    else {\r\n                        /* There's some error, but we can't say for sure that it's because\r\n                         * the Web application is unavailable. May be an authentication problem,\r\n                         * internal server error, or for some reason our ping request was\r\n                         * invalid (unlikely to happen if it previously succeeded).\r\n                         * In particular, if the server uses Form authentication, it\r\n                         * may have come back online but now the session id\r\n                         * is no longer valid.\r\n                         */\r\n                        setRestApplicationIsOnline(true);\r\n                    }\r\n                }\r\n                else {\r\n                    args.offlineReason = progress.data.Session.DEVICE_OFFLINE;\r\n                }\r\n            }\r\n\r\n            // is the AppServer online? appServerStatus will be non-null only\r\n            // if the ping request returned 200, meaning the other things are OK\r\n            // (connection to server, Tomcat, Mobile Web application)\r\n            if (appServerStatus) {\r\n                if (appServerStatus.PingStatus === \"false\") {\r\n                    args.offlineReason = progress.data.Session.APPSERVER_OFFLINE;\r\n                    setRestApplicationIsOnline(false);\r\n                }\r\n                else {\r\n                    setRestApplicationIsOnline(true);\r\n                }\r\n            }\r\n\r\n            /* We call any async ping callback handler and then, after that returns, fire an\r\n               offline or online event if necessary. \r\n               When deciding whether to fire an event, the responsibility of this _processPingResult()\r\n               function is to decide about the event on the basis of the data returned from the ping\r\n               that it is currently processing. Therefore, since the ping callback that is just about\r\n               to be called could change the outcome of the event decision (for example, if the handler\r\n               calls logout(), thus setting Session.connected to false)), we save the current value of\r\n               Session.connected and use that saved value to decide about the event after the ping \r\n               handler returns.\r\n               (If the application programmer wants to get an event fired as a result of something\r\n               that happens in the ping handler, they should call a ping() *after* that. \r\n             */\r\n            connectedBeforeCallback = this.connected;\r\n\r\n            if ((typeof xhr.onCompleteFn) == 'function') {\r\n                xhr.onCompleteFn({\r\n                    pingResult: this.connected,\r\n                    xhr: xhr,\r\n                    offlineReason: args.offlineReason\r\n                });\r\n            }\r\n\r\n            // decide whether to fire an event, and if so do it\r\n            if (args.fireEventIfOfflineChange) {\r\n                if (wasOnline && !connectedBeforeCallback) {\r\n                    that.trigger(\"offline\", that, args.offlineReason, null);\r\n                }\r\n                else if (!wasOnline && connectedBeforeCallback) {\r\n                    that.trigger(\"online\", that, null);\r\n                }\r\n            }\r\n\r\n            return this.connected;\r\n        };\r\n\r\n\r\n        this._onReadyStateChangePing = function () {\r\n            var xhr = this;\r\n            var args;\r\n\r\n            if (xhr.readyState == 4) {\r\n                args = {\r\n                    xhr: xhr,\r\n                    fireEventIfOfflineChange: true,\r\n                    offlineReason: null\r\n                };\r\n                that._processPingResult(args);\r\n                if (_pingInterval > 0) {\r\n                    _timeoutID = setTimeout(that._autoping, _pingInterval);\r\n                }\r\n            }\r\n        };\r\n\r\n        this._pingtestOnReadyStateChange = function () {\r\n            var xhr = this;\r\n\r\n            if (xhr.readyState == 4) {\r\n                var foundOeping = false;\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    foundOeping = true;\r\n                }\r\n                else {\r\n                    setPartialPingURI(that.loginTarget);\r\n                    console.warn(\"Default ping target not available, will use loginTarget instead.\");\r\n                }\r\n                setOepingAvailable(foundOeping);\r\n\r\n                // If we're here, we've just logged in. If pingInterval has been set, we need\r\n                // to start autopinging\r\n                if (_pingInterval > 0) {\r\n                    _timeoutID = setTimeout(that._autoping, _pingInterval);\r\n                }\r\n            }\r\n        };\r\n\r\n        /*\r\n         * args: pingURI\r\n         *       async\r\n         *       onCompleteFn     used only if async is true\r\n         *\r\n         *  (deliberately not catching thrown error)\r\n         */\r\n        this._sendPing = function (args) {\r\n            var xhr = new XMLHttpRequest(),\r\n                that = this;\r\n\r\n            function sendPingAfterOpen() {\r\n                if (args.async) {\r\n                    xhr.onreadystatechange = args.onReadyStateFn;\r\n                    xhr.onCompleteFn = args.onCompleteFn;\r\n                    xhr._jsdosession = jsdosession; // in case the Session is part of a JSDOSession\r\n                    xhr._deferred = args.deferred;  // in case the Session is part of a JSDOSession\r\n                }\r\n                progress.data.Session._setNoCacheHeaders(xhr);\r\n                // set X-CLIENT-PROPS header\r\n                setRequestHeaderFromContextProps(that, xhr);\r\n                if (that.authenticationModel === progress.data.Session.AUTH_TYPE_FORM) {\r\n                    _addWithCredentialsAndAccept(xhr,\r\n                        \"application/json,text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\");\r\n                }\r\n                xhr.send(null);\r\n            }\r\n\r\n            try {\r\n                if (this._authProvider) {\r\n                    this._authProvider._openRequestAndAuthorize(xhr,\r\n                        'GET',\r\n                        args.pingURI,\r\n                        args.async,\r\n                        sendPingAfterOpen);\r\n                } else {\r\n                    // get rid of this if we do away with synchronous support (i.e., customer use of\r\n                    // old Session API)\r\n                    this._setXHRCredentials(xhr, \"GET\", args.pingURI, this.userName, _password, args.async);\r\n\r\n                    // Sending the XHR request after opening the channel\r\n                    if (xhr.readyState === 1) {\r\n                        sendPingAfterOpen();\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                args.error = e;\r\n            }\r\n\r\n            args.xhr = xhr;\r\n        };\r\n\r\n        this._makePingURI = function () {\r\n            var pingURI = this.serviceURI + partialPingURI;\r\n            // had caching problem with Firefox in its offline mode\r\n            if (progress.data.Session._useTimeStamp) {\r\n                pingURI = progress.data.Session._addTimeStampToURL(pingURI);\r\n            }\r\n            return pingURI;\r\n        };\r\n\r\n\r\n        /*\r\n         *  autoping -- callback\r\n         */\r\n        this._autoping = function () {\r\n            that.ping({async: true});\r\n        };\r\n\r\n\r\n        // TODO for API revamp: get rid of this method and replace it with implementations\r\n        //    of AUthenticationImplementation.openRequest that are specific to the\r\n        //    auth models (assuming we can use some sort of subclassing or interface design)\r\n        //   (and when we remove this, remove the calls to it in this file)\r\n        /*   _setXHRCredentials  (intended for progress.data library use only)\r\n         *  set credentials as needed, both via the xhr's open method and setting the\r\n         *  Authorization header directly\r\n         */\r\n        this._setXHRCredentials = function (xhr, verb, uri, userName, password, async) {\r\n\r\n            // note that we do not set credentials if userName is null. \r\n            // Null userName indicates that the developer is depending on the browser to\r\n            // get and manage the credentials, and we need to make sure we don't interfere with that\r\n            if (userName\r\n                && this.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC) {\r\n\r\n                // See the comment at the definition of the canPassCredentialsToOpen() function\r\n                // for why we pass credentials to open() in some cases but not others. (If we're not using\r\n                // Basic auth, we never pass credentials)\r\n                if (canPassCredentialsToOpen()) {\r\n                    xhr.open(verb, uri, async, userName, password);\r\n                }\r\n                else {\r\n                    xhr.open(verb, uri, async);\r\n                }\r\n\r\n                // set Authorization header\r\n                var auth = _make_basic_auth(userName, password);\r\n                xhr.setRequestHeader('Authorization', auth);\r\n            }\r\n            else {\r\n                xhr.open(verb, uri, async);\r\n            }\r\n        };\r\n\r\n        /*   _addCCIDtoURL  (intended for progress.data library use only)\r\n         *  Add the Client Context ID being used by a session on an OE REST application, if we have\r\n         *  previously stored one from a response from the server\r\n         */\r\n        this._addCCIDtoURL = function (url) {\r\n            var urlPart1,\r\n                urlPart2,\r\n                jsessionidStr,\r\n                index;\r\n\r\n            if (this.clientContextId && (this.clientContextId !== \"0\")) {\r\n                // Should we test protocol, \r\n                // host and port in addition to path to ensure that jsessionid is only sent\r\n                // when request applies to the REST app (it might not be if the catalog is somewhere else)\r\n                if (url.substring(0, this.serviceURI.length) == this.serviceURI) {\r\n                    jsessionidStr = \";\" + \"JSESSIONID=\" + this.clientContextId;\r\n                    index = url.indexOf('?');\r\n                    if (index == -1) {\r\n                        url += jsessionidStr;  // just append the jsessionid path parameter to the path\r\n                    }\r\n                    else {\r\n                        // insert jsessionid path parameter before the first query parameter\r\n                        urlPart1 = url.substring(0, index);\r\n                        urlPart2 = url.substring(index);\r\n                        url = urlPart1 + jsessionidStr + urlPart2;\r\n                    }\r\n                }\r\n            }\r\n            return url;\r\n        };\r\n\r\n        /*   _saveClientContextId  (intended for progress.data library use only)\r\n         *  If the CCID hasn't been set for the session yet, check the xhr for it and store it.\r\n         *  (If it has been set, assume that the existing one is correct and do nothing. We could\r\n         *   enhance this function by checking to see whether the new one matches the existing one.\r\n         *  Not sure what to do if that's the case -- overwrite the old one? ignore the new one?\r\n         *   Should at least log a warning or error\r\n         */\r\n        this._saveClientContextId = function (xhr) {\r\n            // do this unconditionally (even if there is already a client-context-id), because\r\n            // if basic authentication is set up such that it uses sessions, and cookies are disabled,\r\n            // the server will generate a different session on each request and the X-CLIENT-CONTEXT-ID\r\n            // will therefore be different\r\n            setClientContextIDfromXHR(xhr, this);\r\n        };\r\n\r\n        this._parseCatalog = function (xhr) {\r\n            var jsonObject;\r\n            var catalogdata;\r\n\r\n            try {\r\n                jsonObject = JSON.parse(xhr.responseText);\r\n                catalogdata = jsonObject.services;\r\n            }\r\n            catch (e) {\r\n                console.error(\"Unable to parse response. Make sure catalog has correct format.\");\r\n                catalogdata = null;\r\n            }\r\n\r\n            return catalogdata;\r\n        };\r\n\r\n        /* _prependAppURL\r\n         * Prepends the URL of the Web application \r\n         * (the 1st parameter passed to login, stored in this.serviceURI)\r\n         * to whatever string is passed in. If the string passed in is an absolute URL, this function does\r\n         * nothing except return a copy. This function ensures that the resulting URL has the correct number\r\n         * of slashes between the web app url and the string passed in (currently that means that if what's\r\n         * passed in has no initial slash, the function adds one)\r\n         */\r\n        this._prependAppURL = function (oldURL) {\r\n            if (!oldURL) {\r\n                /* If oldURL is null, just return the app URL. (It's not the responsibility of this\r\n                 * function to decide whether having a null URL is an error. Its only responsibility\r\n                 * is to prepend the App URL to whatever it gets passed \r\n                 * (and make sure the result is a valid URL)\r\n                 */\r\n                return this.serviceURI;\r\n            }\r\n            var newURL = oldURL;\r\n            var pat = /^https?:\\/\\//i;\r\n            if (!pat.test(newURL)) {\r\n                if (newURL.indexOf(\"/\") !== 0) {\r\n                    newURL = \"/\" + newURL;\r\n                }\r\n\r\n                newURL = this.serviceURI + newURL;\r\n            }\r\n            return newURL;\r\n        };\r\n\r\n\r\n        // Functions\r\n\r\n        // get rid of this if we get rid of synchronous (old Session object API) support?\r\n        // Set an XMLHttpRequest object's withCredentials attribute and Accept header,\r\n        // using a try-catch so that if setting withCredentials throws an error it doesn't\r\n        // interrupt execution (this is a workaround for the fact that Firefox doesn't\r\n        // allow you to set withCredentials when you're doing a synchronous operation)\r\n        // The setting of the Accept header is included here, and happens after the\r\n        // attempt to set withCredentials, to make the behavior in 11.3.0 match\r\n        // the behavior in 11.2.1 -- for Firefox, in a CORS situation, login() will\r\n        // fail. (If we allowed the Accept header to be set, login() would succeed\r\n        // because of that but addCatalog() would fail because no JSESSIONID would\r\n        // be sent due to withCredentials not being true)\r\n        function _addWithCredentialsAndAccept(xhr, acceptString) {\r\n            try {\r\n                xhr.withCredentials = true;\r\n                xhr.setRequestHeader(\"Accept\", acceptString);\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n\r\n        // get rid of this if we get rid of synchronous (old Session API) support?\r\n        // (because it's in AuthenticationProviderBasic)\r\n        // from http://coderseye.com/2007/how-to-do-http-basic-auth-in-ajax.html\r\n        function _make_basic_auth(user, pw) {\r\n            var tok = user + ':' + pw;\r\n            var hash = btoa(tok);\r\n            return \"Basic \" + hash;\r\n        }\r\n\r\n        /* The next 2 functions, _gotLoginForm() and _gotLoginFailure(), attempt to determine whether\r\n         * a server response consists of\r\n         * the application's login page or login failure page. Currently (release 11.2), this\r\n         * is the only way we have of determining that a request made to the server that's\r\n         * configured for form-based authentication failed due to authentication (i.e.,\r\n         * authentication hadn't happened before the request and either invalid credentials or\r\n         * no credentials were sent to the server). That's because, due to the fact that the browser\r\n         * or native wrapper typically intercepts the redirect involved in an unauthenticated request\r\n         * to a server that's using using form auth, all we see in the XHR is a success status code\r\n         * plus whatever page we were redirected to.\r\n         * In the future, we expect to enhance the OE REST adapter so that it will return a status code\r\n         * indicating failure for form-based authentication, and we can reimplement these functions so\r\n         * they check for that code rather than do the simplistic string search.\r\n         */\r\n\r\n        // Determines whether the content of the xhr is the login page. Assumes\r\n        // use of a convention for testing for login page\r\n        var loginFormIDString = \"j_spring_security_check\";\r\n\r\n        function _gotLoginForm(xhr) {\r\n            // is the response contained in an xhr actually the login page?\r\n            return _findStringInResponseHTML(xhr, loginFormIDString);\r\n        }\r\n\r\n        // Determines whether the content of the xhr is the login failure page. Assumes\r\n        // use of a convention for testing for login fail page\r\n        var loginFailureIdentificationString = \"login failed\";\r\n\r\n        function _gotLoginFailure(xhr) {\r\n            return _findStringInResponseHTML(xhr, loginFailureIdentificationString);\r\n        }\r\n\r\n        // Does a given xhr contain html and does that html contain a given string?\r\n        function _findStringInResponseHTML(xhr, searchString) {\r\n            if (!xhr.responseText) {\r\n                return false;\r\n            }\r\n            var contentType = xhr.getResponseHeader(\"Content-Type\");\r\n\r\n            if ((contentType.indexOf(\"text/html\") >= 0) &&\r\n                (xhr.responseText.indexOf(searchString) >= 0)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        // get rid of this if we get rid of synchronous (old Session API) support?\r\n        /* sets the statusFromjson property in the params object to indicate\r\n         * the status of a response from an OE Mobile Web application that has\r\n         * to do with authentication (the response to a login request, or a\r\n         * response to a request for a resource where there was an error having\r\n         * to do with authentication */\r\n        function handleJSONLoginResponse(params) {\r\n            // Parse the json in the response to see whether it's the special OE REST service\r\n            // response. If it is, check the result (which should be consistent with the status from\r\n            // the xhr)\r\n            var jsonObject;\r\n            params.statusFromjson = null;\r\n            try {\r\n                jsonObject = JSON.parse(params.xhr.responseText);\r\n\r\n                if (jsonObject.status_code !== undefined\r\n                    && jsonObject.status_txt !== undefined) {\r\n                    params.statusFromjson = jsonObject.status_code;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // invalid json\r\n                setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, params.session);\r\n                setLoginHttpStatus(xhr.status, params.session);\r\n                throw new Error(\"Unable to parse login response from server.\");\r\n            }\r\n\r\n        }\r\n\r\n        function setRequestHeaderFromContextProps(session, xhr) {\r\n            if (session.xClientProps) {\r\n                xhr.setRequestHeader(\"X-CLIENT-PROPS\", session.xClientProps);\r\n            }\r\n            else if (session._contextProperties.contextHeader !== undefined) {\r\n                xhr.setRequestHeader(\"X-CLIENT-PROPS\", session._contextProperties.contextHeader);\r\n            }\r\n        }\r\n\r\n        function toggleOnlineState(xhr) {\r\n            var pdsession = that;\r\n\r\n            setLoginHttpStatus(xhr.status, pdsession);\r\n\r\n            if (pdsession.loginHttpStatus >= 200 && pdsession.loginHttpStatus < 400) {\r\n                setLoginResult(progress.data.Session.LOGIN_SUCCESS, pdsession);\r\n                setRestApplicationIsOnline(true);\r\n                pdsession._saveClientContextId(xhr);\r\n                storeAllSessionInfo();  // save info to persistent storage\r\n            } else {\r\n                // Taking a page from _processPingResult where we set the rest application as offline if it's one of\r\n                // these error codes\r\n                if (pdsession.loginHttpStatus === 0 || pdsession.loginHttpStatus === 400 || pdsession.loginHttpStatus === 410) {\r\n                    setRestApplicationIsOnline(false);\r\n                    setLoginResult(progress.data.AuthenticationProvider._getAuthFailureReason(xhr),\r\n                        pdsession);\r\n                }\r\n                // Otherwise if it's probably an internal error or auth problem. Either way, we know it's still online.\r\n                else {\r\n\r\n                    setRestApplicationIsOnline(true);\r\n                    setLoginResult(progress.data.Session.LOGIN_GENERAL_FAILURE, pdsession);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            setLastSessionXHR(xhr, pdsession);\r\n            updateContextPropsFromResponse(pdsession, xhr);\r\n\r\n            return pdsession.loginResult;\r\n        };\r\n\r\n        function updateContextPropsFromResponse(session, xhr) {\r\n            /* determine whether the response contains an X-CLIENT_PROPS header and, if so, \r\n               set the Session's context\r\n             */\r\n            var contextString,\r\n                context;\r\n\r\n            if (xhr) {\r\n                contextString = getResponseHeaderNoError(xhr, \"X-CLIENT-PROPS\");\r\n                if (contextString) {\r\n                    try {\r\n                        context = JSON.parse(contextString);\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                    if (typeof context === \"object\") {\r\n                        session._contextProperties.setContext(context);\r\n                    }\r\n                    else {\r\n                        //{1}: A server response included an invalid {2} header.\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG123\", 'Session', 'X-CLIENT-PROPS'));\r\n                    }\r\n                }\r\n                else if (contextString === \"\") {\r\n                    // If header is \"\", clear the X-CLIENT-PROPS context, \r\n                    session._contextProperties.setContext({});\r\n                }\r\n                // if header is absent (getResponseHeader will return null), don't change _contextProperties\r\n            }\r\n        }\r\n\r\n        // Remove all resources, services, and sessions related to this Session from the ServicesManager\r\n        function cleanServicesManager() {\r\n            progress.data.ServicesManager.cleanSession(that);\r\n        }\r\n\r\n        // process constructor options and do other initialization\r\n\r\n        // If a storage key (name property of a JSDOSession) was passed to the constructor, \r\n        // use it to try to retrieve state data from a previous JSDOSession instance that \r\n        // had the same name. This code was introduced to handle page refreshes, but could\r\n        // be used for other purposes.\r\n        if (typeof (options) === 'object') {\r\n\r\n            jsdosession = options.jsdosession;\r\n            newURI = options.serviceURI;\r\n            setAuthProvider(options.authProvider);  // do this BEFORE calling setSessionInfoFromStorage\r\n\r\n            if (options.authProvider && options.authProvider.hasClientCredentials()) {\r\n                _loginResult = progress.data.Session.LOGIN_SUCCESS;\r\n            }\r\n\r\n            // get rid of trailing '/' because appending service url that starts with '/'\r\n            // will cause request failures\r\n            if (newURI && newURI[newURI.length - 1] === \"/\") {\r\n                newURI = newURI.substring(0, newURI.length - 1);\r\n            }\r\n\r\n            _storageKey = options._storageKey;\r\n            if (_storageKey) {\r\n                if (retrieveSessionInfo(_storageKey)) {\r\n                    storedAuthModel = retrieveSessionInfo(\"authenticationModel\");\r\n                    storedURI = retrieveSessionInfo(\"serviceURI\");\r\n\r\n                    if ((storedAuthModel !== options.authenticationModel) ||\r\n                        (storedURI !== newURI)) {\r\n                        clearAllSessionInfo();\r\n                    } else {\r\n                        // Note: be sure we have set authProvider (if any) from options before\r\n                        // calling setSessionInfoFromStorage (important so that the logic in\r\n                        // setSessionInfoFromStorage that re-creates an AuthenticationProvider\r\n                        // after page refresh only gets used if the app is using the old JSDOSession.login)\r\n                        setSessionInfoFromStorage(_storageKey);\r\n                        stateWasReadFromStorage = true;\r\n                    }\r\n                }\r\n                // _storageKey is in essence the flag for page refresh; we are not supporting page refresh for Basic\r\n                // auth, so clear it even if it was passed in. \r\n                // (But had to set and keep _storageKey until this point so that the above validation of\r\n                // serviceURI and auth model will be done even in the case where there's a mismatch and\r\n                // the new auth model is Basic. This statement will go away when we support page refresh with\r\n                // Basic)\r\n                if (options.authenticationModel === progress.data.Session.AUTH_TYPE_BASIC) {\r\n                    _storageKey = undefined;\r\n                }\r\n            }\r\n\r\n            // If we didn't read state info from storage, we need to set the serviceURI and probably\r\n            // the authenticationModel\r\n            if (!stateWasReadFromStorage) {\r\n                if (newURI) {\r\n                    setServiceURI(newURI, this);\r\n                }\r\n                if (options.authenticationModel) {\r\n                    this.authenticationModel = options.authenticationModel;\r\n                }\r\n            }\r\n        }\r\n\r\n    }; // End of Session\r\n    progress.data.Session._useTimeStamp = true;\r\n\r\n    var SEQ_MAX_VALUE = 999999999999999;\r\n    // 15 - 9 \r\n    var _tsseq = SEQ_MAX_VALUE;\r\n    // Initialized to SEQ_MAX_VALUE to initialize values.\r\n    var _tsprefix1 = 0;\r\n    var _tsprefix2 = 0;\r\n\r\n    // this._getNextTimeStamp = function () {\r\n    progress.data.Session._getNextTimeStamp = function () {\r\n        var seq = ++_tsseq;\r\n        if (seq >= SEQ_MAX_VALUE) {\r\n            _tsseq = seq = 1;\r\n            var t = Math.floor((Date.now ? Date.now() : (new Date().getTime())) / 10000);\r\n            if (_tsprefix1 == t) {\r\n                _tsprefix2++;\r\n                if (_tsprefix2 >= SEQ_MAX_VALUE) {\r\n                    _tsprefix2 = 1;\r\n                }\r\n            }\r\n            else {\r\n                _tsprefix1 = t;\r\n                Math.random(); // Ignore call to random\r\n                _tsprefix2 = Math.round(Math.random() * 10000000000);\r\n            }\r\n        }\r\n\r\n        return _tsprefix1 + \"-\" + _tsprefix2 + \"-\" + seq;\r\n    };\r\n\r\n    /*\r\n     * _addTimeStampToURL (intended for progress.data library use only)\r\n     * Add a time stamp to the a URL to prevent caching of the request.\r\n     * Set progress.data.Session._useTimeStamp = false to turn off.\r\n     */\r\n    progress.data.Session._addTimeStampToURL = function (url) {\r\n        var timeStamp = \"_ts=\" + progress.data.Session._getNextTimeStamp();\r\n        url += ((url.indexOf('?') == -1) ? \"?\" : \"&\") + timeStamp;\r\n        return url;\r\n    };\r\n\r\n    // Do whatever it takes to direct the XMLHttpRequest not to fulfill the request\r\n    // from a cache\r\n    // (convenience method --- we do this several different places in the code)\r\n    progress.data.Session._setNoCacheHeaders = function (xhr) {\r\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n        xhr.setRequestHeader(\"Pragma\", \"no-cache\");\r\n    };\r\n\r\n\r\n// Constants for progress.data.Session\r\n    if ((typeof Object.defineProperty) == 'function') {\r\n        Object.defineProperty(progress.data.Session, 'LOGIN_AUTHENTICATION_REQUIRED', {\r\n            value: 0, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'LOGIN_SUCCESS', {\r\n            value: 1, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'LOGIN_AUTHENTICATION_FAILURE', {\r\n            value: 2, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'LOGIN_GENERAL_FAILURE', {\r\n            value: 3, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'CATALOG_ALREADY_LOADED', {\r\n            value: 4, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'ASYNC_PENDING', {\r\n            value: 5, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'EXPIRED_TOKEN', {\r\n            value: 6, enumerable: true\r\n        });\r\n\r\n        Object.defineProperty(progress.data.Session, 'SUCCESS', {\r\n            value: 1, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTHENTICATION_FAILURE', {\r\n            value: 2, enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'GENERAL_FAILURE', {\r\n            value: 3, enumerable: true\r\n        });\r\n\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_ANON', {\r\n            value: \"anonymous\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_BASIC', {\r\n            value: \"basic\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_FORM', {\r\n            value: \"form\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_SSO', {\r\n            value: \"sso\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_FORM_SSO', {\r\n            value: \"form_sso\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'AUTH_TYPE_ADAL', {\r\n            value: \"adal\", enumerable: true\r\n        });\r\n\r\n\r\n        Object.defineProperty(progress.data.Session, 'DEVICE_OFFLINE', {\r\n            value: \"Device is offline\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'SERVER_OFFLINE', {\r\n            value: \"Cannot contact server\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'WEB_APPLICATION_OFFLINE', {\r\n            value: \"Mobile Web Application is not available\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'SERVICE_OFFLINE', {\r\n            value: \"REST web Service is not available\", enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.Session, 'APPSERVER_OFFLINE', {\r\n            value: \"AppServer is not available\", enumerable: true\r\n        });\r\n    }\r\n    else {\r\n        progress.data.Session.LOGIN_SUCCESS = 1;\r\n        progress.data.Session.LOGIN_AUTHENTICATION_FAILURE = 2;\r\n        progress.data.Session.LOGIN_GENERAL_FAILURE = 3;\r\n        progress.data.Session.CATALOG_ALREADY_LOADED = 4;\r\n\r\n        progress.data.Session.SUCCESS = 1;\r\n        progress.data.Session.AUTHENTICATION_FAILURE = 2;\r\n        progress.data.Session.GENERAL_FAILURE = 3;\r\n\r\n        progress.data.Session.AUTH_TYPE_ANON = \"anonymous\";\r\n        progress.data.Session.AUTH_TYPE_BASIC = \"basic\";\r\n        progress.data.Session.AUTH_TYPE_FORM = \"form\";\r\n        progress.data.Session.AUTH_TYPE_SSO = \"sso\";\r\n        progress.data.Session.AUTH_TYPE_ADAL = \"adal\";\r\n\r\n        /* deliberately not including the \"offline reasons\" that are defined in the\r\n         * 1st part of the conditional. We believe that we can be used only in environments where\r\n         * ECMAScript 5 is supported, so let's put that assumption to the test\r\n         */\r\n    }\r\n\r\n//setup inheritance for Session -- specifically for incorporating an Observable object \r\n    progress.data.Session.prototype = new progress.util.Observable();\r\n    progress.data.Session.prototype.constructor = progress.data.Session;\r\n\r\n    function validateSessionSubscribe(args, evt, listenerData) {\r\n        listenerData.operation = undefined;\r\n        var found = false;\r\n\r\n        // make sure this event is one that we support\r\n        for (var i = 0; i < this._eventNames.length; i++) {\r\n            if (evt === this._eventNames[i].toLowerCase()) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG042\", evt));\r\n        }\r\n\r\n        if (args.length < 2) {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG038\", 2));\r\n        }\r\n\r\n        if (typeof args[0] !== 'string') {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG039\"));\r\n        }\r\n\r\n        if (typeof args[1] !== 'function') {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG040\"));\r\n        }\r\n        else {\r\n            listenerData.fn = args[1];\r\n        }\r\n\r\n        if (args.length > 2) {\r\n            if (typeof args[2] !== 'object') {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG041\", evt));\r\n            }\r\n            else {\r\n                listenerData.scope = args[2];\r\n            }\r\n        }\r\n    }\r\n\r\n    // events supported by Session\r\n    progress.data.Session.prototype._eventNames =\r\n        [\"offline\", \"online\", \"afterLogin\", \"afterAddCatalog\", \"afterLogout\", \"afterDisconnect\"];\r\n    // callback to validate subscribe and unsubscribe\r\n    progress.data.Session.prototype.validateSubscribe = validateSessionSubscribe;\r\n    progress.data.Session.prototype.toString = function (radix) {\r\n        return \"progress.data.Session\";\r\n    };\r\n\r\n\r\n    /*\r\n        progress.data.JSDOSession\r\n            Like progress.data.Session, but the methods are async-only and return promises.\r\n            (first implementation uses progress.data.Session to do the work, but conceivably\r\n            that implementation could be changed to something different)\r\n            The JSDOSession object keeps the same underlying pdsession object for the lifetime\r\n            of the JSDOSession object -- i.e., even after logout and subsequent login, the pdsession\r\n            is re-used rather than re-created.\r\n    */\r\n    progress.data.JSDOSession = function JSDOSession(options) {\r\n        var _pdsession,\r\n            _serviceURI,\r\n            that = this,\r\n            _name;\r\n\r\n        // PROPERTIES\r\n        // Approach: Use the properties of the underlying progress.data.Session object whenever\r\n        // possible. \r\n        Object.defineProperty(this, 'authenticationModel',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.authenticationModel : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'authProvider',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession._authProvider : null;\r\n                },\r\n                enumerable: true\r\n            });\r\n        Object.defineProperty(this, 'catalogURIs',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.catalogURIs : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'clientContextId',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.clientContextId : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'connected',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.connected : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'JSDOs',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.JSDOs : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'loginResult',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.loginResult : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'loginHttpStatus',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.loginHttpStatus : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'onOpenRequest',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.onOpenRequest : undefined;\r\n                },\r\n                set: function (newval) {\r\n                    if (_pdsession) {\r\n                        _pdsession.onOpenRequest = newval;\r\n                    }\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'pingInterval',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.pingInterval : undefined;\r\n                },\r\n                set: function (newval) {\r\n                    if (_pdsession) {\r\n                        _pdsession.pingInterval = newval;\r\n                    }\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'services',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.services : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'serviceURI',\r\n            {\r\n                get: function () {\r\n                    if (_pdsession && _pdsession.serviceURI) {\r\n                        return _pdsession.serviceURI;\r\n                    }\r\n                    else {\r\n                        return _serviceURI;\r\n                    }\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'userName',\r\n            {\r\n                get: function () {\r\n                    return _pdsession ? _pdsession.userName : undefined;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'name',\r\n            {\r\n                get: function () {\r\n                    return _name;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(\r\n            this,\r\n            \"_isInvalidated\",\r\n            {\r\n                get: function () {\r\n                    return _pdsession._isInvalidated;\r\n                },\r\n                enumerable: false\r\n            }\r\n        );\r\n\r\n        // PRIVATE FUNCTIONS\r\n\r\n\r\n        // Wrapper to make it easier to change the promise implementation we use.\r\n        // Note that in the JSDO library's first implementation of promise support,\r\n        // the \"promise\" parameter for this function is actually a jQuery Deferred object\r\n        function settlePromise(promise, fulfill, result, info) {\r\n            if (fulfill) {\r\n                promise.resolve(that, result, info);\r\n            } else {\r\n                promise.reject(that, result, info);\r\n            }\r\n        }\r\n\r\n        // use this for the events fired by progress.data.Session that can be handled with common code\r\n        function genericSessionEventHandler(pdsession, result, errorObject, xhr, deferred) {\r\n            var myDeferred;\r\n\r\n            if (xhr) {\r\n                myDeferred = xhr._deferred;\r\n            } else {\r\n                myDeferred = deferred;\r\n            }\r\n\r\n            settlePromise(myDeferred,\r\n                result === progress.data.Session.SUCCESS ? true : false,\r\n                result,\r\n                {\r\n                    errorObject: errorObject,\r\n                    xhr: xhr\r\n                });\r\n        }\r\n\r\n        function onAfterAddCatalog(pdsession, result, errorObject, xhr) {\r\n            var deferred,\r\n                fulfill = false,\r\n                settleResult;\r\n\r\n            if (result === progress.data.Session.EXPIRED_TOKEN) {\r\n                settleResult = progress.data.Session.EXPIRED_TOKEN;\r\n            } else {\r\n                settleResult = progress.data.Session.GENERAL_FAILURE;\r\n            }\r\n\r\n            if (xhr && xhr._deferred) {\r\n                deferred = xhr._deferred;\r\n\r\n                /* add the result for this addCatalog to the result array. */\r\n                if (result !== progress.data.Session.SUCCESS &&\r\n                    result !== progress.data.Session.CATALOG_ALREADY_LOADED) {\r\n\r\n                    result = result || progress.data.Session.GENERAL_FAILURE;\r\n\r\n                    /* Set a property on the deferred to indicates that the \"overall\" result was\r\n                       a failure. When we decide whether to reject or resolve the promise, we reject\r\n                       if it's set to GENERAL_FAILURE, otherwise we resolve the promise\r\n                       (really only need to set this once, but simpler code if we just set (or possibly\r\n                       re-set) it whenever we find an error, plus if, at some point while we're still\r\n                       processing, it's important to know whether we've already had an error, we can\r\n                       check the property)\r\n                     */\r\n                    deferred._overallCatalogResult = progress.data.Session.GENERAL_FAILURE;\r\n                }\r\n\r\n                deferred._results[xhr._catalogIndex] = {\r\n                    catalogURI: xhr._catalogURI,\r\n                    result: result,\r\n                    errorObject: errorObject,\r\n                    xhr: xhr\r\n                };\r\n                deferred._numCatalogsProcessed += 1;\r\n                if (deferred._numCatalogsProcessed === deferred._numCatalogs) {\r\n                    deferred._processedPromise = true;\r\n\r\n                    if (!deferred._overallCatalogResult) {\r\n                        fulfill = true;\r\n                        settleResult = progress.data.Session.SUCCESS;\r\n                    }\r\n                    settlePromise(xhr._deferred,\r\n                        fulfill,\r\n                        settleResult,\r\n                        xhr._deferred._results);\r\n                }\r\n            }\r\n        }\r\n\r\n        function onAfterLogout(pdsession, errorObject, xhr) {\r\n            var result = progress.data.Session.GENERAL_FAILURE,\r\n                fulfill = false;\r\n            if (xhr && xhr._deferred) {\r\n                /* Note: loginResult gets cleared on successful logout, so testing it for false\r\n                         to confirm that logout succeeded\r\n                 */\r\n                if (!errorObject && !pdsession.loginResult) {\r\n                    result = progress.data.Session.SUCCESS;\r\n                    fulfill = true;\r\n                }\r\n                settlePromise(xhr._deferred,\r\n                    fulfill,\r\n                    result,\r\n                    {\r\n                        errorObject: errorObject,\r\n                        xhr: xhr\r\n                    });\r\n            }\r\n        }\r\n\r\n        function onPingComplete(args) {\r\n            var xhr = args.xhr;\r\n            if (xhr && xhr._deferred) {\r\n                settlePromise(xhr._deferred,\r\n                    args.pingResult,  // this tells settlePromise whether to resolve or reject\r\n                    args.pingResult,  // this is the result value passed to the promise handler\r\n                    {\r\n                        offlineReason: args.offlineReason,\r\n                        xhr: xhr\r\n                    });\r\n            }\r\n        }\r\n\r\n        // METHODS\r\n\r\n        // login()\r\n        // Creates an AuthenticationProvider and calls its login() method. Any errors thrown by the \r\n        // Auth Provider's constructor or login will bubble up to the caller, otherwise this method\r\n        // returns the promise from the A-P's login call.\r\n        this.login = function (username, password, options) {\r\n            var deferred = $.Deferred(),\r\n                iOSBasicAuthTimeout;\r\n\r\n            function callIsAuthorized() {\r\n                that.isAuthorized()\r\n                    .then(function (jsdosession, result, info) {\r\n                        deferred.resolve(that, result, info);\r\n                    }, function (jsdosession, result, info) {\r\n                        deferred.reject(that, result, info);\r\n                    });\r\n            }\r\n\r\n            if (this._isInvalidated) {\r\n                // JSDOSession: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"JSDOSession\"));\r\n            }\r\n\r\n            if (this.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                // JSDOSession: Cannot call login() when authenticationModel is SSO. \r\n                // Please use the AuthenticationProvider object instead.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG057\",\r\n                    'JSDOSession',\r\n                    'login()'));\r\n            }\r\n\r\n            if (typeof options === 'object') {\r\n                iOSBasicAuthTimeout = options.iOSBasicAuthTimeout;\r\n            }\r\n\r\n            if (!_pdsession._authProvider) {\r\n                // is there a better way to do this? Need it because we didn't have the authprovider when\r\n                // running the constructor\r\n                _pdsession._authProvider = new progress.data.AuthenticationProvider({\r\n                    uri: this.serviceURI,\r\n                    authenticationModel: this.authenticationModel\r\n                });\r\n            }\r\n\r\n\r\n            _pdsession._authProvider.logout()\r\n                .then(function () {\r\n                    return _pdsession._authProvider.login(username, password);\r\n                })\r\n                .then(function () {\r\n                    callIsAuthorized();\r\n                }, function (provider, result, info) {\r\n                    deferred.reject(that, result, info);\r\n                });\r\n\r\n            return deferred.promise();\r\n        };\r\n\r\n        // This method terminates the JSDOSession's ability to send requests to its serviceURI. \r\n        // Remove the reference to the AuthenticationProvider that was passed to connect(). \r\n        // Will be a no-op if connect() has not yet been called successfully.\r\n        // This method reinitializes the Session object back to the state it was in just after being created. \r\n        // Retains the serviceURI, authenticationModel, and name values. \r\n        // Delete any of the object's data that had been persisted (for example, to sessionStorage to support \r\n        // page refresh). \r\n        // Data for any catalogs loaded by the JSDOSession will NOT be deleted.\r\n        // See additional commecnts at the Session._disconnect method.\r\n        this.disconnect = function () {\r\n            var deferred = $.Deferred(),\r\n                errorObject;\r\n\r\n            try {\r\n                _pdsession.subscribe('afterDisconnect', genericSessionEventHandler, this);\r\n\r\n                _pdsession._disconnect(deferred);\r\n            } catch (e) {\r\n                // JSDOSession: Unexpected error calling disconnect: {e.message}\r\n                errorObject = new Error(progress.data._getMsgText(\"jsdoMSG049\", \"JSDOSession\", \"disconnect\", e.message));\r\n            }\r\n\r\n            if (errorObject) {\r\n                throw errorObject;\r\n            } else {\r\n                return deferred.promise();\r\n            }\r\n        };\r\n\r\n        this.addCatalog = function (catalogURI, unameOrOpts, password, opts) {\r\n            var deferred = $.Deferred(),\r\n                catalogURIs,\r\n                numCatalogs,\r\n                catalogIndex,\r\n                addResult,\r\n                errorObject,\r\n                iOSBasicAuthTimeout,\r\n                username,\r\n                options,\r\n                authProvider;\r\n\r\n            if (this._isInvalidated) {\r\n                // JSDOSession: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"JSDOSession\"));\r\n            }\r\n\r\n            // check whether 1st param is a string or an array\r\n            if (typeof catalogURI === \"string\") {\r\n                catalogURIs = [catalogURI];\r\n            } else if (catalogURI instanceof Array) {\r\n                catalogURIs = catalogURI;\r\n            } else {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", \"JSDOSession\", \"addCatalog\",\r\n                    \"The first argument must be a string or an array of strings specifying the URI of the catalog.\"));\r\n            }\r\n\r\n            // type check the 2nd param if it exists\r\n            if (unameOrOpts) {\r\n                if (typeof unameOrOpts === \"string\") {\r\n                    if (this.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                        // Session: Cannot pass username and password to addCatalog when \r\n                        // authenticationModel is SSO. Pass an AuthenticationProvider instead.\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG058\", 'Session'));\r\n                    }\r\n                    username = unameOrOpts;\r\n                    // explictly ignore any authProvider if using the (catURI, uname, pw, options) signature\r\n                    if (opts) {\r\n                        options = opts;\r\n                        options.authProvider = undefined;\r\n                    }\r\n                } else if (typeof unameOrOpts === \"object\") {\r\n                    options = unameOrOpts;\r\n                } else {\r\n                    // JSDOSession: Argument 2 must be of type object in addCatalog call.\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG121\", \"JSDOSession\", \"2\",\r\n                        \"object\", \"addCatalog\"));\r\n                }\r\n            }\r\n\r\n            if (typeof options === 'object') {\r\n                // possible override for the workaround for the Cordova iOS async Basic auth bug\r\n                iOSBasicAuthTimeout = options.iOSBasicAuthTimeout;\r\n                if (options.authProvider) {\r\n                    authProvider = options.authProvider;\r\n                } else if (this.authProvider) {\r\n                    authProvider = this.authProvider;\r\n                }\r\n            }\r\n\r\n            // Error out if no authProvider or username was given\r\n            if (!authProvider && !this.authProvider && !username) {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG511\"));\r\n            }\r\n\r\n            /* When we're done processing all catalogs, we pass an array of results to resolve() or\r\n               reject(). We're attaching this array to the deferred object, in case the app makes \r\n               multiple addCatalog calls (if the array was attached to the JSDOSession,\r\n               the 2nd call might overwrite the first)\r\n             */\r\n\r\n            /*  Add properties to the deferred object for this call to store the total \r\n                number of catalogs that are to be done, the number that ahve been processed,\r\n                and a reference to an array of results.\r\n                Loop through the array of catalogURIs, calling addCatalog for each one. If a call\r\n                throws an error or returns something other than ASYNC_PENDING, create a result object\r\n                for that catalog and add the result object to the resultArray. Otherwise, the result \r\n                object will be added by the afterAddCatalog handler.\r\n                If all of the Session.addCatalog calls throw an error or return something other\r\n                than ASYNC_PENDING, this function will reject the promise and return. Otherwise \r\n                the afterAddCatalog handler will resolve or reject the promise after all calls have \r\n                been processed.\r\n                Note that we try to make sure that each entry in the results array is in the same position\r\n                as its catalogURI in the input array.\r\n               */\r\n            // if a catalogURI has no protocol, pdsession will assume it's relative to the serviceURI,\r\n            // if there has been a login\r\n            // NOTE: this means if the app is trying to load a local catalog, it MUST\r\n            // specify the file: protocol (and we need to make sure that works on all platforms)\r\n\r\n            _pdsession.subscribe('afterAddCatalog', onAfterAddCatalog, this);\r\n\r\n            numCatalogs = catalogURIs.length;\r\n            deferred._numCatalogs = numCatalogs;\r\n            deferred._numCatalogsProcessed = 0;\r\n            deferred._results = [];\r\n            deferred._results.length = numCatalogs;\r\n\r\n            for (catalogIndex = 0; catalogIndex < numCatalogs; catalogIndex += 1) {\r\n                errorObject = undefined;\r\n                addResult = undefined;\r\n                try {\r\n                    addResult = _pdsession.addCatalog(\r\n                        {\r\n                            catalogURI: catalogURIs[catalogIndex],\r\n                            async: true,\r\n                            userName: username,\r\n                            password: password,\r\n                            deferred: deferred,\r\n                            catalogIndex: catalogIndex,\r\n                            iOSBasicAuthTimeout: iOSBasicAuthTimeout,\r\n                            authProvider: authProvider,\r\n                            offlineAddCatalog: true\r\n                        });  // OK to get catalog if offline\r\n                }\r\n                catch (e) {\r\n                    errorObject = new Error(\"JSDOSession: Unable to send addCatalog request. \" + e.message);\r\n                }\r\n\r\n                if (addResult !== progress.data.Session.ASYNC_PENDING) {\r\n                    /* Set a property on the deferred to indicate that the \"overall\" result was \r\n                       a failure. When we decide whether to reject or resolve the promise, we reject \r\n                       if it's set to GENERAL_FAILURE, otherwise we resolve the promise\r\n                       (really only need to set this once, but simpler code if we just set (or possibly \r\n                       re-set) it whenever we find an error, plus if, at some point while we're still\r\n                       processing, it's important to know whether we've already had an error, we can \r\n                       check the property)\r\n                     */\r\n                    deferred._overallCatalogResult = progress.data.Session.GENERAL_FAILURE;\r\n                    if (errorObject) {\r\n                        addResult = progress.data.Session.GENERAL_FAILURE;\r\n                    }\r\n                    deferred._results[catalogIndex] = {\r\n                        catalogURI: catalogURIs[catalogIndex],\r\n                        result: addResult,\r\n                        errorObject: errorObject,\r\n                        xhr: undefined\r\n                    };\r\n                    deferred._numCatalogsProcessed += 1;\r\n                }\r\n            }\r\n\r\n            if ((deferred._numCatalogsProcessed === numCatalogs) && !deferred._processedPromise) {\r\n                /* The goal here is to handle the case where all the catalogs\r\n                   have been processed but the afterAddCatalog handler may not be invoked at the \r\n                   end (the obvious example is if there are no async requests actually made by \r\n                   Session.addCatalog). In that case, we have to resolve/reject from here. Chances are\r\n                   very good that if we're doing this here, there's been at least one error, but just\r\n                   to be sure, we check the deferred._overallCatalogResult anyway\r\n                 */\r\n                if (deferred._overallCatalogResult === progress.data.Session.GENERAL_FAILURE) {\r\n                    deferred.reject(this, progress.data.Session.GENERAL_FAILURE, deferred._results);\r\n                }\r\n                else {\r\n                    deferred.resolve(this, progress.data.Session.SUCCESS, deferred._results);\r\n                }\r\n            }\r\n\r\n            return deferred.promise();\r\n        };\r\n\r\n        // Note that this will work for either of these cases:\r\n        //    - app originally called JSDOSession.login (so we implicitly created the AuthenticationProvider)\r\n        //    - app created an AuthenticationProvider and passed it to connect, but now for some reason has\r\n        //          called logout (this is actually a nice shortcut for someone who has used getSession)\r\n        //          (NB: we should not allow this for SSO, tho)\r\n        // \r\n        // Note that we also don't support login/logout on the JSDOSession for page refresh\r\n        this.logout = function () {\r\n            var deferred = $.Deferred(),\r\n                authProv = this.authProvider;\r\n\r\n            if (this.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                // JSDOSession: Cannot call logout() when authenticationModel is SSO. \r\n                // Please use the AuthenticationProvider object instead.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG057\",\r\n                    'JSDOSession',\r\n                    'logout()'));\r\n            }\r\n\r\n            this.disconnect()\r\n                .then(function () {\r\n                    if (authProv) {\r\n                        return authProv.logout();\r\n                    }\r\n                    // if there's no AP, just resolve immediately\r\n                    deferred.resolve(that, progress.data.Session.SUCCESS, {});\r\n                })\r\n                .then(function (jsdosession, result, info) {\r\n                        deferred.resolve(that, result, info);\r\n                    },\r\n                    // catches errors on either login or connect\r\n                    function (provider, result, info) {\r\n                        deferred.reject(that, result, info);\r\n                    }\r\n                );\r\n\r\n            return deferred.promise();\r\n        };\r\n\r\n        this.invalidate = function () {\r\n            _pdsession.invalidate();\r\n            return this.logout();\r\n        };\r\n\r\n        this.ping = function () {\r\n            var deferred = $.Deferred();\r\n\r\n            if (this._isInvalidated) {\r\n                // JSDOSession: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"JSDOSession\"));\r\n            }\r\n\r\n            try {\r\n                _pdsession.ping({\r\n                    async: true,\r\n                    deferred: deferred,\r\n                    onCompleteFn: onPingComplete\r\n                });\r\n            }\r\n            catch (e) {\r\n                throw new Error(\"JSDOSession: Unable to send ping request. \" + e.message);\r\n            }\r\n\r\n            return deferred.promise();\r\n        };\r\n\r\n        // Determine whether the JSDOSession can currently access its web application.\r\n        // The use expected for this method is to determine whether a JSDOSession that has\r\n        // previously authenticated to its web application still has authorization.\r\n        // For example, if the JSDOSession is using Form authentication, is the server\r\n        // session still valid or did it expire? \r\n        this.isAuthorized = function () {\r\n            var deferred = $.Deferred(),\r\n                xhr = new XMLHttpRequest(),\r\n                result,\r\n                that = this;\r\n\r\n            if (this._isInvalidated) {\r\n                // JSDOSession: This session has been invalidated and cannot be used.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG510\", \"JSDOSession\"));\r\n            }\r\n\r\n            // If we logged in successfuly using login() or if we have an AuthProvider, make the call\r\n            if (this.loginResult === progress.data.Session.LOGIN_SUCCESS || this.authProvider) {\r\n                _pdsession._openRequest(xhr, \"GET\", _pdsession.loginTarget, true,\r\n                    function () {\r\n                        xhr.onreadystatechange = function () {\r\n                            // do we need this xhr var? The one declared in isAuthorized seems to be in scope\r\n                            var xhr = this,\r\n                                cbresult,\r\n                                fakePingArgs,\r\n                                info;\r\n\r\n                            if (xhr.readyState === 4) {\r\n                                info = {\r\n                                    xhr: xhr,\r\n                                    offlineReason: undefined,\r\n                                    fireEventIfOfflineChange: true,\r\n                                    usingOepingFormat: false\r\n                                };\r\n\r\n                                // call _processPingResult because it has logic for \r\n                                // detecting change in online/offline state\r\n                                _pdsession._processPingResult(info);\r\n\r\n                                if (xhr.status >= 200 && xhr.status < 300) {\r\n                                    deferred.resolve(that,\r\n                                        progress.data.Session.SUCCESS,\r\n                                        info);\r\n                                } else {\r\n                                    if (xhr.status === 401) {\r\n                                        cbresult = progress.data.AuthenticationProvider._getAuthFailureReason(xhr);\r\n                                    } else {\r\n                                        cbresult = progress.data.Session.GENERAL_FAILURE;\r\n                                    }\r\n                                    deferred.reject(that, cbresult, info);\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        try {\r\n                            xhr.send();\r\n                        } catch (e) {\r\n                            throw new Error(\"JSDOSession: Unable to validate authorization. \" + e.message);\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                // Never logged in (or logged in and logged out). Regardless of what the reason\r\n                // was that there wasn't a login, the bottom line is that authentication is required\r\n                result = progress.data.Session.LOGIN_AUTHENTICATION_REQUIRED;\r\n                deferred.reject(that, result, {xhr: xhr});\r\n            }\r\n\r\n            return deferred.promise();\r\n        };\r\n\r\n        /* \r\n           set the properties that are passed between client and Web application in the \r\n           X-CLIENT-PROPS header. This sets the complete set of properties all at once;\r\n           it replaces any existing context\r\n         */\r\n        this.setContext = function (context) {\r\n            _pdsession._contextProperties.setContext(context);\r\n        };\r\n\r\n        /* \r\n         *  Set or remove an individual property in the set of the properties that are passed \r\n         *  between client and Web application in the X-CLIENT-PROPS header. This operates only \r\n         *  on the property identiofied by propertyName; all other existing properties remain\r\n         *  as they are.\r\n         *  If the propertyName is not part of the context, this call adds it\r\n         *  If it is part of the context, this call updates it, unless -\r\n         *  If propertyValue is undefined, this call removes the property\r\n         */\r\n        this.setContextProperty = function (propertyName, propertyValue) {\r\n            _pdsession._contextProperties.setContextProperty(propertyName, propertyValue);\r\n        };\r\n\r\n        /* \r\n         * get the set of properties that are passed between client and Web application in the \r\n         * X-CLIENT-PROPS header. Returns an object that has the properties\r\n         */\r\n        this.getContext = function () {\r\n            return _pdsession._contextProperties.getContext();\r\n        };\r\n\r\n        /*  get the value of an individual property that is in the set of properties passed between \r\n         *  client and Web application in the X-CLIENT-PROPS header\r\n         */\r\n        this.getContextProperty = function (propertyName) {\r\n            return _pdsession._contextProperties.getContextProperty(propertyName);\r\n        };\r\n\r\n\r\n        this._onlineHandler = function (session, request) {\r\n            that.trigger(\"online\", that, request);\r\n        };\r\n\r\n        this._offlineHandler = function (session, offlineReason, request) {\r\n            that.trigger(\"offline\", that, offlineReason, request);\r\n        };\r\n\r\n        // PROCESS CONSTRUCTOR ARGUMENTS \r\n        // validate constructor input arguments\r\n        if ((arguments.length > 0) && (typeof(arguments[0]) === 'object')) {\r\n\r\n            // (options is the name of the arguments[0] parameter)\r\n            if (options.serviceURI && (typeof(options.serviceURI) === \"string\")) {\r\n                _serviceURI = options.serviceURI;\r\n            }\r\n            else {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG033\", \"JSDOSession\", \"the constructor\",\r\n                    \"The options parameter must include a 'serviceURI' property that is a string.\"));\r\n            }\r\n\r\n            if (options.authenticationModel) {\r\n                if (typeof(options.authenticationModel) !== \"string\") {\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG033\", \"JSDOSession\", \"the constructor\",\r\n                        \"The authenticationModel property of the options parameter must be a string.\"));\r\n                }\r\n\r\n                options.authenticationModel = options.authenticationModel.toLowerCase();\r\n            } else {\r\n                options.authenticationModel = progress.data.Session.AUTH_TYPE_ANON;\r\n            }\r\n\r\n            // TODO: clean this up. Maybe make an immediate function\r\n            if (options.authProvider) {\r\n                if (typeof options.authProvider !== 'object') {\r\n                    // JSDOSession: The 'options' parameter passed to the 'constructor' function\r\n                    //              has an invalid value for the 'authProvider' property.\r\n                    throw new Error(progress.data._getMsgText(\r\n                        \"jsdoMSG502\",\r\n                        \"JSDOSession\",\r\n                        \"options\",\r\n                        \"constructor\",\r\n                        \"authProvider\"\r\n                    ));\r\n                }\r\n\r\n                if ((options.authProvider.authenticationModel !== progress.data.Session.AUTH_TYPE_FORM_SSO\r\n                    && options.authProvider.authenticationModel !== options.authenticationModel) ||\r\n                    (options.authProvider.authenticationModel === progress.data.Session.AUTH_TYPE_FORM_SSO\r\n                        && options.authenticationModel !== progress.data.Session.AUTH_TYPE_SSO)) {\r\n                    // JSDOSession: Error in constructor. The authenticationModels of the \" +\r\n                    // AuthenticationProvider ({2}) and the JSDOSession ({3}) were not compatible.\";\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG059\", \"JSDOSession\",\r\n                        options.authProvider.authenticationModel, options.authenticationModel));\r\n                }\r\n                // Check if the provider exposes the required API.\r\n                if (typeof options.authProvider.hasClientCredentials === 'function') {\r\n                    if (!options.authProvider.hasClientCredentials()) {\r\n                        // JSDOSession: The AuthenticationProvider is not managing valid credentials.\r\n                        throw new Error(progress.data._getMsgText(\"jsdoMSG125\", \"JSDOSession\"));\r\n                    }\r\n                } else {\r\n                    // JSDOSession: AuthenticationProvider objects must have a hasClientCredentials method.\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG505\",\r\n                        \"JSDOSession\",\r\n                        \"AuthenticationProvider\",\r\n                        \"hasClientCredentials\"));\r\n                }\r\n            } else if (options.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                // JSDOSession: If a JSDOSession object is using the SSO authentication model,\r\n                // the options object passed to its constructor must include an authProvider property.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG508\"));\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG033\", \"JSDOSession\", \"the constructor\",\r\n                \"The options argument was missing or invalid.\"));\r\n        }\r\n\r\n        _name = options.name;\r\n\r\n        _pdsession = new progress.data.Session({\r\n            _storageKey: _name,\r\n            _silent: true,\r\n            authenticationModel: options.authenticationModel,\r\n            serviceURI: options.serviceURI,\r\n            jsdosession: this,\r\n            authProvider: options.authProvider\r\n        });\r\n\r\n        try {\r\n            if (options.context) {\r\n                this.setContext(options.context);\r\n            }\r\n            _pdsession.subscribe(\"online\", this._onlineHandler, this);\r\n            _pdsession.subscribe(\"offline\", this._offlineHandler, this);\r\n        } catch (err) {\r\n            _pdsession = undefined;  // so it will be garbage collected\r\n            throw err;\r\n        }\r\n\r\n    };   // end of JSDOSession\r\n\r\n//set up inheritance for JSDOSession -- specifically for incorporating an Observable object \r\n    progress.data.JSDOSession.prototype = new progress.util.Observable();\r\n    progress.data.JSDOSession.prototype.constructor = progress.data.JSDOSession;\r\n\r\n    function validateJSDOSessionSubscribe(args, evt, listenerData) {\r\n        listenerData.operation = undefined;\r\n        var found = false;\r\n\r\n        // make sure this event is one that we support\r\n        for (var i = 0; i < this._eventNames.length; i++) {\r\n            if (evt === this._eventNames[i].toLowerCase()) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG042\", evt));\r\n        }\r\n\r\n        if (args.length < 2) {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG038\", 2));\r\n        }\r\n\r\n        if (typeof args[0] !== 'string') {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG039\"));\r\n        }\r\n\r\n        if (typeof args[1] !== 'function') {\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG040\"));\r\n        }\r\n        else {\r\n            listenerData.fn = args[1];\r\n        }\r\n\r\n        if (args.length > 2) {\r\n            if (typeof args[2] !== 'object') {\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG041\", evt));\r\n            }\r\n            else {\r\n                listenerData.scope = args[2];\r\n            }\r\n        }\r\n    }\r\n\r\n    // events supported by JSDOSession\r\n    progress.data.JSDOSession.prototype._eventNames =\r\n        [\"offline\", \"online\"];\r\n    // callback to validate subscribe and unsubscribe\r\n    progress.data.JSDOSession.prototype.validateSubscribe = validateJSDOSessionSubscribe;\r\n    progress.data.JSDOSession.prototype.toString = function (radix) {\r\n        return \"progress.data.JSDOSession\";\r\n    };\r\n\r\n    progress.data.getSession = function (options) {\r\n        var deferred = $.Deferred(),\r\n            authProvider,\r\n            promise,\r\n            authProviderInitObject = {};\r\n\r\n        // This is the reject handler for session-related operations\r\n        // login, addCatalog, and logout\r\n        function sessionRejectHandler(originator, result, info) {\r\n            // undo the AuthenticationProvider's login if it succeeded\r\n            if (authProvider && authProvider.hasClientCredentials()) {\r\n                authProvider.logout()\r\n                    .always(function () {\r\n                        deferred.reject(result, info);\r\n                    });\r\n            } else {\r\n                deferred.reject(result, info);\r\n            }\r\n        }\r\n\r\n        // This is the reject handler for the login callback\r\n        function callbackRejectHandler(reason) {\r\n            deferred.reject(progress.data.Session.GENERAL_FAILURE, {\"reason\": reason});\r\n        }\r\n\r\n        function loginHandler(provider) {\r\n            var jsdosession;\r\n\r\n            try {\r\n                jsdosession = new progress.data.JSDOSession(options);\r\n                try {\r\n                    jsdosession.isAuthorized()\r\n                        .then(function () {\r\n                            return jsdosession.addCatalog(options.catalogURI);\r\n                        }, sessionRejectHandler)\r\n                        .then(function (jsdosession, result, info) {\r\n                            deferred.resolve(jsdosession, progress.data.Session.SUCCESS);\r\n                        }, sessionRejectHandler);\r\n                } catch (e) {\r\n                    sessionRejectHandler(jsdosession,\r\n                        progress.data.Session.GENERAL_FAILURE,\r\n                        {errorObject: e});\r\n                }\r\n            } catch (e) {\r\n                sessionRejectHandler(jsdosession,\r\n                    progress.data.Session.GENERAL_FAILURE,\r\n                    {errorObject: e});\r\n            }\r\n        }\r\n\r\n        // This function calls login using credentials from the appropriate source\r\n        // Note that as currently implemented, this should NOT be called when\r\n        // ANONYMOUS auth is being used, because it unconditionally returns \r\n        // AUTHENTICATION_FAILURE if there are no credentials and no loginCallback\r\n        function callLogin(provider) {\r\n            var errorObject;\r\n\r\n            // Use the login callback if we are passed one \r\n            // NOTE: Do we even use logincallback? Remove this???\r\n            if (typeof options.loginCallback !== 'undefined') {\r\n                options.loginCallback()\r\n                    .then(function (result) {\r\n                        try {\r\n                            provider.login(result.username, result.password)\r\n                                .then(loginHandler, sessionRejectHandler);\r\n                        } catch (e) {\r\n                            sessionRejectHandler(\r\n                                provider,\r\n                                progress.data.Session.GENERAL_FAILURE,\r\n                                {\r\n                                    errorObject: e\r\n                                }\r\n                            );\r\n                        }\r\n                    }, callbackRejectHandler);\r\n            } else if (options.username && options.password) {\r\n                try {\r\n                    provider.login(options.username, options.password)\r\n                        .then(loginHandler, sessionRejectHandler);\r\n                } catch (e) {\r\n                    sessionRejectHandler(\r\n                        provider,\r\n                        progress.data.Session.GENERAL_FAILURE,\r\n                        {\r\n                            errorObject: e\r\n                        }\r\n                    );\r\n                }\r\n            } else {\r\n                // getSession(): The login method was not executed because no credentials were supplied.\r\n                errorObject = new Error(progress.data._getMsgText(\r\n                    \"jsdoMSG052\",\r\n                    \"getSession()\"\r\n                ));\r\n                sessionRejectHandler(\r\n                    provider,\r\n                    progress.data.Session.AUTHENTICATION_FAILURE,\r\n                    {\r\n                        // including an Error object to make clear why there is no xhr (normally there would\r\n                        // be one for an authentication failure)\r\n                        errorObject: errorObject\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (typeof options !== 'object') {\r\n            // getSession(): 'options' must be of type 'object'\r\n            throw new Error(progress.data._getMsgText(\r\n                \"jsdoMSG503\",\r\n                \"getSession()\",\r\n                \"options\",\r\n                \"object\"\r\n            ));\r\n        }\r\n\r\n        if (typeof options.loginCallback !== 'undefined' &&\r\n            typeof options.loginCallback !== 'function') {\r\n            // getSession(): 'options.loginCallback' must be of type 'function'\r\n            throw new Error(progress.data._getMsgText(\r\n                \"jsdoMSG503\",\r\n                \"getSession()\",\r\n                \"options.loginCallback\",\r\n                \"function\"\r\n            ));\r\n        }\r\n\r\n        // Create the AuthenticationProvider and let it handle the argument parsing\r\n        try {\r\n            // If authenticationURI is not set, use serviceURI (except for SSO)\r\n            // Note: the test will of course catch any value that evaluates to false, not just undefined or\r\n            // null (which are the main concern), but that's probably OK\r\n            if (options.authenticationModel === progress.data.Session.AUTH_TYPE_SSO) {\r\n                if (!options.authenticationURI || !options.authProviderAuthenticationModel) {\r\n                    // \"progress.data.getSession: If the getSession method is passed AUTH_TYPE_SSO as\r\n                    // the authenticationModel, it must also be passed an authenticationURI and an \r\n                    // authProviderAuthenticationModel.\"\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG509\"));\r\n                }\r\n            }\r\n\r\n            if (options.authenticationURI) {\r\n                authProviderInitObject.uri = options.authenticationURI;\r\n                authProviderInitObject.authenticationModel = options.authProviderAuthenticationModel;\r\n\r\n                // if auth uri has been passed, there must be an authProviderAuthenticationModel\r\n                if (typeof authProviderInitObject.authenticationModel !== \"string\") {\r\n                    // JSDOSession: The 'object' parameter passed to the 'getSession' function\r\n                    //              has an invalid value for the 'authProviderAuthenticationModel' property.\r\n                    throw new Error(progress.data._getMsgText(\r\n                        \"jsdoMSG502\",\r\n                        \"progress.data.getSession\",\r\n                        \"object\",\r\n                        \"getSession\",\r\n                        \"authProviderAuthenticationModel\"\r\n                    ));\r\n                }\r\n            } else {\r\n                authProviderInitObject.uri = options.serviceURI;\r\n                authProviderInitObject.authenticationModel = options.authenticationModel;\r\n            }\r\n\r\n            if (options.authConfig) {\r\n                authProviderInitObject.authConfig = options.authConfig;\r\n            }\r\n\r\n            authProvider = new progress.data.AuthenticationProvider(authProviderInitObject);\r\n            options.authProvider = authProvider;\r\n\r\n            if (authProvider.hasClientCredentials()) {\r\n                loginHandler(authProvider);\r\n            } else {\r\n                // If model is anon, just log in.\r\n                if (authProvider.authenticationModel === progress.data.Session.AUTH_TYPE_ANON || authProvider.authenticationModel === progress.data.Session.AUTH_TYPE_ADAL) {\r\n                    authProvider.login().then(loginHandler, sessionRejectHandler);\r\n                } else {\r\n                    //  We need to log-in with credentials.\r\n                    callLogin(authProvider);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // throw error;\r\n            sessionRejectHandler(\r\n                null,\r\n                progress.data.Session.GENERAL_FAILURE,\r\n                {\r\n                    errorObject: error\r\n                }\r\n            );\r\n        }\r\n\r\n        return deferred.promise();\r\n    };\r\n\r\n    progress.data.invalidateAllSessions = function () {\r\n        var jsdosession,\r\n            key,\r\n            deferred = $.Deferred(),\r\n            jsdosessions = progress.data.ServicesManager._jsdosessions,\r\n            invalidatePromises = [];\r\n\r\n        for (key in jsdosessions) {\r\n            if (jsdosessions.hasOwnProperty(key)) {\r\n                jsdosession = jsdosessions[key];\r\n\r\n                invalidatePromises.push(jsdosession.invalidate());\r\n            }\r\n        }\r\n\r\n        $.when.apply($, invalidatePromises)\r\n            .then(function () {\r\n                deferred.resolve(progress.data.Session.SUCCESS);\r\n            }, function (session, result, info) {\r\n                deferred.reject(progress.data.Session.GENERAL_FAILURE, info);\r\n            });\r\n\r\n        // Using beautiful jquery shenanigans\r\n        return deferred.promise();\r\n    };\r\n\r\n})();\r\n\r\nif (typeof exports !== \"undefined\") {\r\n    exports.progress = progress;\r\n}\r\n    \r\n\n\n\n// WEBPACK FOOTER //\n// ./JSDO/src/progress.session.js","/* \r\nprogress.js    Version: 4.4.1-01\r\n\r\nCopyright (c) 2012-2017 Progress Software Corporation and/or its subsidiaries or affiliates.\r\n \r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n  \r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n */\r\n\r\n(function () {\r\n\r\n    // \"use strict\";\r\n    \r\n    var PROGRESS_JSDO_PCT_MAX_EMPTY_BLOCKS = 20,\r\n        PROGRESS_JSDO_OP_STRING = [\"none\", \"create\", \"read\", \"update\", \"delete\", \"submit\"],\r\n        PROGRESS_JSDO_ROW_STATE_STRING = [\"\", \"created\", \"\", \"modified\", \"deleted\"];\r\n    \r\n    /* define these if not defined yet - they may already be defined if\r\n     progress.session.js was included first */\r\n    if (typeof progress === 'undefined') {\r\n        progress = {};\r\n    }\r\n    if (typeof progress.data === 'undefined') {\r\n        progress.data = {};\r\n    }\r\n\r\n    progress.data._nextid = 0;\r\n    progress.data._uidprefix = \"\" + ( Date.now ? Date.now() : (new Date().getTime()));\r\n\r\n    /* 15 - 9 */\r\n    var UID_MAX_VALUE = 999999999999999;\r\n\r\n    progress.data._getNextId = function () {\r\n        var uid = ++progress.data._nextid;\r\n        if (uid >= UID_MAX_VALUE) {\r\n            progress.data._nextid = uid = 1;\r\n            progress.data._uidprefix = \"\" + ( Date.now ? Date.now() : (new Date().getTime()));\r\n        }\r\n\r\n        return progress.data._uidprefix + \"-\" + uid;\r\n    };\r\n\r\n\r\n    var msg = {};\r\n    msg.msgs = {};\r\n//        msg numbers   0 -  99 are related to use of the API (methods and properties we expose to developers)\r\n//                    100 - 109 relate to network errors\r\n//                    110 - 998 are for miscellaneous errors\r\n                    \r\n    msg.msgs.jsdoMSG000 = \"JSDO, Internal Error: {1}\";\r\n    msg.msgs.jsdoMSG001 = \"JSDO: JSDO has multiple tables. Please use {1} at the table reference level.\";\r\n    msg.msgs.jsdoMSG002 = \"JSDO: Working record for '{1}' is undefined.\";\r\n    msg.msgs.jsdoMSG003 = \"JSDO: {1} function requires a function as a parameter.\";\r\n    msg.msgs.jsdoMSG004 = \"JSDO: Unable to find resource '{1}' in the catalog.\";\r\n    msg.msgs.jsdoMSG005 = \"JSDO: Data for table '{1}' was not specified in addRecords() call.\";\r\n    msg.msgs.jsdoMSG006 = \"JSDO: Data for JSDO was not specified in addRecords() call.\";\r\n    msg.msgs.jsdoMSG007 = \"JSDO: Test function in {1} must return a boolean.\";\r\n    msg.msgs.jsdoMSG008 = \"JSDO: Invalid keyFields parameter in addRecords() call.\";\r\n    msg.msgs.jsdoMSG009 = \"JSDO: KeyField '{1}' in addRecords() call was not found in the schema.\";\r\n    msg.msgs.jsdoMSG010 = \"JSDO: Field '{1}' in relationship was not found in the schema.\";\r\n    msg.msgs.jsdoMSG011 = \"UIHelper: JSDO has multiple tables. \" +\r\n        \"Please use {1} at the table reference level.\";\r\n    msg.msgs.jsdoMSG012 = \"UIHelper: Invalid {2} parameter in {1} call.\";\r\n    msg.msgs.jsdoMSG020 = \"JSDO: tableName parameter must be a string in addRecords() call.\";\r\n    msg.msgs.jsdoMSG021 = \"JSDO: addMode parameter must be specified in addRecords() call.\";\r\n    msg.msgs.jsdoMSG022 = \"JSDO: Invalid addMode specified in addRecords() call.\";\r\n    msg.msgs.jsdoMSG023 = \"JSDO: Duplicate found in addRecords() call using APPEND mode.\";\r\n    msg.msgs.jsdoMSG024 = \"{1}: Unexpected signature in call to {2} function.\";\r\n    msg.msgs.jsdoMSG025 = \"{1}: Invalid parameters in call to {2} function.\";\r\n    msg.msgs.jsdoMSG026 = \"JSDO: saveChanges requires a \" +\r\n        \"CREATE, UPDATE, DELETE or SUBMIT operation to be defined.\";\r\n    msg.msgs.jsdoMSG030 = \"JSDO: Invalid {1}, expected {2}.\";\r\n    msg.msgs.jsdoMSG031 = \"JSDO: Specified sort field name '{1}' was not found in the schema.\";\r\n    msg.msgs.jsdoMSG032 = \"JSDO: Before-image data already exists for record in addRecords() call.\";\r\n    msg.msgs.jsdoMSG033 = \"{1}: Invalid signature for {2}. {3}\";\r\n    msg.msgs.jsdoMSG034 = \"JSDO: In '{1}' function, JSON data is missing _id\";\r\n    msg.msgs.jsdoMSG035 = \"JSDO: In '{1}' function, before-image JSON data is missing prods:clientId\";\r\n    msg.msgs.jsdoMSG036 = \"JSDO: '{1}' can only be called for a dataset\";\r\n    msg.msgs.jsdoMSG037 = \"{1}: Event name must be provided for {2}.\";\r\n    msg.msgs.jsdoMSG038 = \"Too few arguments. There must be at least {1}.\";\r\n    msg.msgs.jsdoMSG039 = \"The name of the event is not a string.\";\r\n    msg.msgs.jsdoMSG040 = \"The event listener is not a function.\";\r\n    msg.msgs.jsdoMSG041 = \"The event listener scope is not an object.\";\r\n    msg.msgs.jsdoMSG042 = \"'{1}' is not a defined event for this object.\";\r\n    msg.msgs.jsdoMSG043 = \"{1}: A session object was requested to check the status of a Mobile \" +\r\n        \"Service named '{2}', but it has not loaded the definition of that service.\";\r\n    msg.msgs.jsdoMSG044 = \"JSDO: In '{1}' function, {2} is missing {3} property.\";\r\n    msg.msgs.jsdoMSG045 = \"JSDO: {1} function: {2} is missing {3} property.\";    \r\n    msg.msgs.jsdoMSG046 = \"JSDO: {1} operation is not defined.\";\r\n    msg.msgs.jsdoMSG047 = \"{1} timeout expired.\";\r\n    msg.msgs.jsdoMSG048 = \"{1}: {2} method has argument '{3}' that is missing property '{4}'.\";\r\n    msg.msgs.jsdoMSG049 = \"{1}: Unexpected error calling {2}: {3}\";\r\n    msg.msgs.jsdoMSG050 = \"No token returned from server\";\r\n    msg.msgs.jsdoMSG051 = \"{1} The login method was not executed because the AuthenticationProvider is already logged in.\";\r\n    msg.msgs.jsdoMSG052 = \"{1}: The login method was not executed because no credentials were supplied.\";\r\n    msg.msgs.jsdoMSG053 = \"{1}: {2} was not executed because the AuthenticationProvider is not logged in.\";\r\n    msg.msgs.jsdoMSG054 = \"{1}: Token refresh was not executed because the AuthenticationProvider does not have a refresh token.\";\r\n    msg.msgs.jsdoMSG055 = \"{1}: Token refresh was not executed  because the authentication model is not sso.\";\r\n    msg.msgs.jsdoMSG056 = \"{1}: Already logged in.\";\r\n    msg.msgs.jsdoMSG057 = \"{1}: Cannot call {2} when authenticationModel is SSO. Please use the AuthenticationProvider object instead.\";\r\n    msg.msgs.jsdoMSG058 = \"{1}: Cannot pass username and password to addCatalog when authenticationModel \" +\r\n        \"is sso. Pass an AuthenticationProvider instead.\";\r\n    msg.msgs.jsdoMSG059 = \"{1}: Error in constructor. The authenticationModels of the \" +\r\n        \"AuthenticationProvider ({2}) and the JSDOSession ({3}) were not compatible.\";\r\n    msg.msgs.jsdoMSG060 = \"AuthenticationProvider: AuthenticationProvider is no longer logged in. \" +\r\n        \"Tried to refresh SSO token but failed due to authentication error at token server.\";\r\n    msg.msgs.jsdoMSG061 = \"{1}: Attempted to set {2} property to an invalid value.\";\r\n    \r\n    //                    100 - 109 relate to network errors\r\n    msg.msgs.jsdoMSG100 = \"JSDO: Unexpected HTTP response. Too many records.\";\r\n    msg.msgs.jsdoMSG101 = \"Network error while executing HTTP request.\";\r\n\r\n    //                    110 - 499 are for miscellaneous errors\r\n    msg.msgs.jsdoMSG110 = \"Catalog error: idProperty not specified for resource '{1}'. \" +\r\n        \"idProperty is required {2}.\";\r\n    msg.msgs.jsdoMSG111 = \"Catalog error: Schema '{1}' was not found in catalog.\";\r\n    msg.msgs.jsdoMSG112 = \"Catalog error: Output parameter '{1}' was not found for operation '{2}'.\";\r\n    msg.msgs.jsdoMSG113 = \"Catalog error: Found xType '{1}' for output parameter '{2}' \" +\r\n        \"for operation '{3}' but xType DATASET, TABLE or ARRAY was expected.\";\r\n    msg.msgs.jsdoMSG114 = \"JSDO: idProperty '{1}' is missing from '{2}' record.\";\r\n    msg.msgs.jsdoMSG115 = \"JSDO: Invalid option specified in {1}() call.\";\r\n    msg.msgs.jsdoMSG116 = \"JSDO: {1} parameter must be a string in {2} call.\";\r\n    msg.msgs.jsdoMSG117 = \"JSDO: Schema from storage area '{1}' does not match JSDO schema\";\r\n\tmsg.msgs.jsdoMSG118 = \"JSDO: Plugin '{1}' was not found.\";\r\n\tmsg.msgs.jsdoMSG119 = \"JSDO: A mappingType is expected when 'capabilities' is set.\" +\r\n                                \" Please specify a plugin (ex: JFP).\";\r\n\tmsg.msgs.jsdoMSG120 = \"JSDO: Parameter '{2}' requires capability '{1}' in the catalog.\";\r\n    msg.msgs.jsdoMSG121 = \"{1}: Argument {2} must be of type {3} in {4} call.\";\r\n    msg.msgs.jsdoMSG122 = \"{1}: Incorrect number of arguments in {2} call. There should be {3}.\";\r\n    msg.msgs.jsdoMSG123 = \"{1}: A server response included an invalid '{2}' header.\";\r\n    msg.msgs.jsdoMSG124 = \"JSDO: autoApplyChanges is not supported for saveChanges(true) \" + \r\n                            \"with a temp-table. Use jsdo.autoApplyChanges = false.\";\r\n    msg.msgs.jsdoMSG125 = \"{1}: The AuthenticationProvider is not managing valid credentials.\";\r\n    msg.msgs.jsdoMSG126 = \"{1}: No support for {2}.\";\r\n    msg.msgs.jsdoMSG127 = \"JSDO: acceptRowChanges() cannot be called for record with _rejected === true.\";\r\n\r\n    //                    500 - 998 are for generic errors\r\n    msg.msgs.jsdoMSG500 = \"{1}: '{2}' objects must contain a '{3}' property.\";\r\n    msg.msgs.jsdoMSG501 = \"{1}: '{2}' in '{3}' function cannot be an empty string.\";\r\n    msg.msgs.jsdoMSG502 = \"{1}: The '{2}' parameter passed to the '{3}' function has an invalid value for \" +\r\n        \"its '{4}' property.\";\r\n    msg.msgs.jsdoMSG503 = \"{1}: '{2}' must be of type '{3}'.\";\r\n    msg.msgs.jsdoMSG504 = \"{1}: {2} has an invalid value for the '{3}' property.\";\r\n    msg.msgs.jsdoMSG505 = \"{1}: '{2}' objects must have a '{3}' method.\";\r\n                // use message below if invalid parameter value is an object    \r\n    msg.msgs.jsdoMSG506 = \"{1}: Invalid argument for the {2} parameter in {3} call.\";\r\n                // use message below if invalid parameter value is a primitive\r\n    msg.msgs.jsdoMSG507 = \"{1}: '{2}' is an invalid value for the {3} parameter in {4} call.\";\r\n    msg.msgs.jsdoMSG508 = \"JSDOSession: If a JSDOSession object is using the SSO authentication model, \" +\r\n        \"the options object passed to its constructor must include an authProvider property.\";\r\n    msg.msgs.jsdoMSG509 = \"progress.data.getSession: If the authenticationModel is AUTH_TYPE_SSO, \" +\r\n        \"authenticationURI and authProviderAuthenticationModel are required parameters.\";\r\n    msg.msgs.jsdoMSG510 = \"{1}: This session has been invalidated and cannot be used.\";\r\n    msg.msgs.jsdoMSG511 = \"JSDOSession: addCatalog() can only be called if an AuthenticationProvider was passed as an argument or \" +\r\n        \"connect() has been successfully called.\";\r\n    \r\n    msg.msgs.jsdoMSG998 = \"JSDO: JSON object in addRecords() must be DataSet or Temp-Table data.\";\r\n\r\n    msg.getMsgText = function (n, args) {\r\n        var text = msg.msgs[n],\r\n            i;\r\n        if (!text) {\r\n            throw new Error(\"Message text was not found by getMsgText()\");\r\n        }\r\n        for (i = 1; i < arguments.length; i += 1) {\r\n            text = text.replace(new RegExp('\\\\{' + i + '\\\\}', 'g'), arguments[i]);\r\n        }\r\n\r\n        return text;\r\n    };\r\n\r\n    progress.data._getMsgText = msg.getMsgText;\r\n\t\r\n\tprogress.data.PluginManager = {};\r\n\tprogress.data.PluginManager._plugins = {};\r\n\t\r\n\tprogress.data.PluginManager.addPlugin = function(name, plugin) {\r\n        if (progress.data.PluginManager._plugins[name] === undefined) {\r\n            progress.data.PluginManager._plugins[name] = plugin;\r\n\t\t}\r\n        else {\r\n            throw new Error(\"A plugin named '\" + name + \"' is already registered.\");\r\n\t\t}\r\n\t};\r\n\t\t\r\n    progress.data.PluginManager.getPlugin = function (name) {\r\n        return progress.data.PluginManager._plugins[name];\r\n    };\r\n\t\r\n    progress.data.JSIndexEntry = function JSIndexEntry(index) {\r\n        this.index = index;\r\n    };\r\n\r\n    progress.data.JSTableRef = function JSTableRef(jsdo, tableName) {\r\n        this._jsdo = jsdo;\r\n        this._name = tableName;\r\n        this._schema = null;\r\n        this._primaryKeys = null;\r\n        this._fields = null;\r\n        this._processed = {};\r\n        this._visited = false;\r\n\r\n        // record is used to represent the current record for a table reference\r\n        this.record = null;\r\n\r\n        // Data structure\r\n        this._data = [];\r\n        this._index = {};\r\n        this._hasEmptyBlocks = false;\r\n\r\n        // Arrays to keep track of changes\r\n        this._beforeImage = {};\r\n        this._added = [];\r\n        this._changed = {};\r\n        this._deleted = [];\r\n        this._lastErrors = [];\r\n        this._convertForServer;\r\n\r\n        this._createIndex = function () {\r\n            var i, block, id, idProperty;\r\n            this._index = {};\r\n            this._hasEmptyBlocks = false;\r\n            for (i = 0; i < this._data.length; i += 1) {\r\n                block = this._data[i];\r\n                if (!block) {\r\n                    this._hasEmptyBlocks = true;\r\n                    continue;\r\n                }\r\n                id = this._data[i]._id;\r\n                if (!id) {\r\n                    idProperty = this._jsdo._resource.idProperty;\r\n                    if (typeof(idProperty) == \"string\") {\r\n                        id = this._data[i][idProperty];\r\n                        if (!id) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG114\", idProperty, this._name));\r\n                        }\r\n                        id += \"\";\r\n                    }\r\n                    else {\r\n                        id = progress.data._getNextId();\r\n                    }\r\n                    this._data[i]._id = id;\r\n                }\r\n                this._index[id] = new progress.data.JSIndexEntry(i);\r\n            }\r\n            this._needCompaction = false;\r\n        };\r\n\r\n        this._compact = function () {\r\n            var newDataArray = [], i, block;\r\n            \r\n            for (i = 0; i < this._data.length; i += 1) {\r\n                block = this._data[i];\r\n                if (block) {\r\n                    newDataArray.push(block);\r\n                }\r\n            }\r\n            this._data = newDataArray;\r\n            this._createIndex();\r\n        };\r\n\r\n        this._loadBeforeImageData = function (jsonObject, beforeImageJsonIndex, keyFields) {\r\n            var prodsBeforeData = jsonObject[this._jsdo._dataSetName][\"prods:before\"],\r\n                tmpIndex = {},\r\n                record,\r\n                record2,                \r\n                recordId,\r\n                key,\r\n                tmpKeyIndex,\r\n                id,\r\n                jsrecord,\r\n                tmpDataIndex,\r\n                tmpDeletedIndex,\r\n                i;\r\n\r\n                if (prodsBeforeData && prodsBeforeData[this._name]) {\r\n\r\n                if ((Object.keys(this._beforeImage).length !== 0) && keyFields && (keyFields.length !== 0)) {\r\n                    tmpKeyIndex = {};\r\n                    for (id in this._beforeImage) {\r\n                        jsrecord = this._findById(id, false);\r\n\r\n                        if (jsrecord) {\r\n                            key = this._getKey(jsrecord.data, keyFields);\r\n                            tmpKeyIndex[key] = jsrecord.data;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < prodsBeforeData[this._name].length; i++) {\r\n                    record = prodsBeforeData[this._name][i];\r\n                    tmpIndex[record[\"prods:id\"]] = record;\r\n\r\n                    if (record[\"prods:rowState\"] == \"deleted\") {\r\n                        key = undefined;\r\n\r\n                        if (keyFields && (keyFields.length !== 0)) {\r\n                            key = this._getKey(record, keyFields);\r\n                        }\r\n\r\n                        if (tmpKeyIndex) {\r\n                            if (tmpKeyIndex[key] !== undefined) {\r\n                                throw new Error(msg.getMsgText(\"jsdoMSG032\"));\r\n                            }\r\n                        }\r\n\r\n                        if ((tmpDataIndex === undefined) && keyFields && (keyFields.length !== 0)) {\r\n                            tmpDataIndex = {};\r\n                            tmpDeletedIndex = {};\r\n\r\n                            for (var j = 0; j < this._data.length; j++) {\r\n                                record2 = this._data[j];\r\n                                if (!record2) continue;\r\n\r\n                                var key2 = this._getKey(record2, keyFields);\r\n                                tmpDataIndex[key2] = record2;\r\n                            }\r\n\r\n                            // We also want to check if _deleted record already exists\r\n                            for (var j = 0; j < this._deleted.length; j++) {\r\n                                record2 = this._deleted[j].data;\r\n                                if (!record2) continue;\r\n\r\n                                var key2 = this._getKey(record2, keyFields);\r\n                                tmpDeletedIndex[key2] = record2;\r\n                            }\r\n                        }\r\n\r\n                        // First check to see if this deleted record is already in _deleted array\r\n                        if (key !== undefined) {\r\n                            record2 = tmpDeletedIndex[key];\r\n                            if (record2 !== undefined) {\r\n                                // If record is already in _deleted array, then nothing more to do here\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        if (key !== undefined) {\r\n                            record2 = tmpDataIndex[key];\r\n                            if (record2 !== undefined) {\r\n                                var jsrecord = this._findById(record2._id, false);\r\n                                if (jsrecord) jsrecord._remove(false);\r\n                                record._id = record2._id;\r\n                            }\r\n                        }\r\n\r\n                        if (record._id === undefined)\r\n                            record._id = progress.data._getNextId();\r\n                        var copy = {};\r\n                        this._jsdo._copyRecord(\r\n                            this._tableRef, record, copy);\r\n                        this._jsdo._deleteProdsProperties(copy);\r\n                        this._beforeImage[record._id] = copy;\r\n                        var jsrecord = new progress.data.JSRecord(this, copy);\r\n                        this._deleted.push(jsrecord);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Process data using jsonObject instead of _data\r\n            // First check if there is after-data for table. Can be called with just before-image data\r\n            var tableObject = jsonObject[this._jsdo._dataSetName][this._name];\r\n            if (tableObject) {\r\n                for (var i = 0; i < jsonObject[this._jsdo._dataSetName][this._name].length; i++) {\r\n                    record = jsonObject[this._jsdo._dataSetName][this._name][i];\r\n                    recordId = undefined;\r\n                    if (beforeImageJsonIndex && record[\"prods:id\"]) {\r\n                        recordId = beforeImageJsonIndex[record[\"prods:id\"]];\r\n                    }\r\n                    switch (record[\"prods:rowState\"]) {\r\n                        case \"created\":\r\n                            if (recordId === undefined) {\r\n                                recordId = record._id;\r\n                            }\r\n\r\n                            // If recordId and record._id are undefined, the record was not processed\r\n                            if (recordId !== undefined) {\r\n                                this._beforeImage[recordId] = null;\r\n                                this._added.push(recordId);\r\n                            }\r\n                            break;\r\n                        case \"modified\":\r\n                            var beforeRecord = tmpIndex[record[\"prods:id\"]];\r\n                            if (beforeRecord === undefined) {\r\n                                beforeRecord = {};\r\n                            }\r\n\r\n                            if (recordId === undefined) {\r\n                                recordId = record._id;\r\n                            }\r\n                            // If recordId and record._id are undefined, the record was not processed\r\n                            if (recordId !== undefined) {\r\n                                beforeRecord._id = record._id;\r\n\r\n                                var copy = {};\r\n                                this._jsdo._copyRecord(\r\n                                    this._tableRef, beforeRecord, copy);\r\n                                this._jsdo._deleteProdsProperties(copy);\r\n\r\n                                this._beforeImage[recordId] = copy;\r\n                                this._changed[recordId] = record;\r\n\r\n                                this._beforeImage[beforeRecord._id] = copy;\r\n                                this._changed[beforeRecord._id] = record;\r\n                            }\r\n                            break;\r\n                        case undefined:\r\n                            break; // rowState is only specified for records that have changed\r\n                        default:\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG030\", \r\n                                \"rowState value in before-image data\", \"'created' or 'modified'\"));\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Process prods:errors\r\n            var prodsErrors = jsonObject[this._jsdo._dataSetName][\"prods:errors\"];\r\n            if (prodsErrors) {\r\n                for (var i = 0; i < prodsErrors[this._name].length; i++) {\r\n                    var item = prodsErrors[this._name][i];\r\n                    var recordId = beforeImageJsonIndex[item[\"prods:id\"]];\r\n                    var jsrecord = this._findById(recordId, false);\r\n                    if (jsrecord) {\r\n                        jsrecord.data._errorString = item[\"prods:error\"];\r\n                    }\r\n                }\r\n            }\r\n\r\n            tmpIndex = null;\r\n        };\r\n\r\n        /*\r\n         * Clears all data (including any pending changes) in buffer\r\n         */\r\n        this._clearData = function () {\r\n            this._setRecord(null);\r\n\r\n            // Data structure\r\n            this._data = [];\r\n            this._index = {};\r\n            this._createIndex();\r\n\r\n            // Arrays to keep track of changes\r\n            this._beforeImage = {};\r\n            this._added = [];\r\n            this._changed = {};\r\n            this._deleted = [];\r\n        };\r\n\r\n        this.hasData = function () {\r\n            var data;\r\n\r\n            // Check if we should return this table with its nested child table's data as nested\r\n            if (this._jsdo._nestChildren) {\r\n                data = this._getDataWithNestedChildren(this._data);\r\n            }\r\n            else {\r\n                data = this._getRelatedData();\r\n            }\r\n\r\n            if (this._hasEmptyBlocks) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    var block = data[i];\r\n                    if (!block) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return data.length !== 0;\r\n        };\r\n\r\n        this.getData = function (params) {\r\n            var i, \r\n                data,\r\n                numEmptyBlocks,\r\n                newDataArray,\r\n                block;\r\n                \r\n            if (this._needCompaction) {\r\n                this._compact();\r\n            }\r\n\r\n            if (params && params.filter) {\r\n                throw new Error(\"Not implemented in current version\");\r\n            }\r\n            // Check if we should return this table with its nested child table's data as nested\r\n            else if (this._jsdo._nestChildren) {\r\n                data = this._getDataWithNestedChildren(this._data);\r\n            }\r\n            else {\r\n                data = this._getRelatedData();\r\n            }\r\n\r\n            if (this._hasEmptyBlocks) {\r\n                numEmptyBlocks = 0;\r\n                newDataArray = [];   \r\n                for (i = 0; i < data.length; i += 1) {\r\n                    block = data[i];\r\n                    if (block) {\r\n                        newDataArray.push(block);\r\n                    }\r\n                    else {\r\n                        numEmptyBlocks++;\r\n                    }\r\n                }\r\n                if ((numEmptyBlocks * 100 / this._data.length) >= PROGRESS_JSDO_PCT_MAX_EMPTY_BLOCKS)\r\n                    this._needCompaction = true;\r\n\r\n                data = newDataArray;\r\n            }\r\n            else {\r\n                // Creates a copy of the data if sort and top are specified\r\n                // so that the sorting does not happen in the JSDO memory but\r\n                // in a copy of the records\r\n                if (params && (params.sort || params.top)) {\r\n                    newDataArray = [];\r\n                    for (i = 0; i < data.length; i += 1) {\r\n                        newDataArray.push(data[i]);\r\n                    }\r\n                    data = newDataArray;\r\n                }\r\n            }\r\n\r\n            if (params && (params.sort || params.top)) {\r\n                if (params.sort) {\r\n                    // Converts sort option from Kendo UI to sort option used by the JSDO\r\n                    sortFields = [];\r\n                    for (i = 0; i < params.sort.length; i += 1) {\r\n                        field = params.sort[i].field;\r\n                        if (params.sort[i].dir == \"desc\") {\r\n                            field += \":DESC\";\r\n                        }\r\n                        sortFields.push(field);\r\n                    }                                                                             \r\n                    \r\n                    // Obtain sortObject from sort options to get compare functions\r\n                    var sortObject = this._processSortFields(sortFields);\r\n                    if (sortObject.sortFields && sortObject.sortFields.length > 0) {\r\n                        sortObject.tableRef = this;\r\n                        data.sort(this._getCompareFn(sortObject));\r\n                    }                \r\n                }\r\n\r\n                if (params.top) {\r\n                    if (typeof(params.skip) == \"undefined\") {\r\n                        params.skip = 0;\r\n                    }\r\n                \r\n                    data = data.splice(params.skip, params.top);\r\n                }\r\n            }\r\n            \r\n            return data;\r\n        };\r\n\r\n        this._recToDataObject = function (record, includeChildren) {\r\n            var array = [record];\r\n            var dataObject = array;\r\n\r\n            if (typeof(includeChildren) == 'undefined') {\r\n                includeChildren = false;\r\n            }\r\n            if (this._jsdo._dataSetName) {\r\n                dataObject = {};\r\n                dataObject[this._jsdo._dataSetName] = {};\r\n                dataObject[this._jsdo._dataSetName][this._name] = array;\r\n                if (includeChildren && this._children.length > 0) {\r\n                    var jsrecord = this._findById(record._id, false);\r\n                    if (jsrecord) {\r\n                        for (var i = 0; i < this._children.length; i++) {\r\n                            var tableName = this._children[i];\r\n                            dataObject[this._jsdo._dataSetName][tableName] = \r\n                                this._jsdo._buffers[tableName]._getRelatedData(jsrecord);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this._jsdo._dataProperty) {\r\n                    dataObject = {};\r\n                    dataObject[this._jsdo._dataProperty] = array;\r\n                }\r\n            }\r\n            return dataObject;\r\n        };\r\n\r\n        this._recFromDataObject = function (dataObject) {\r\n            var data = {};\r\n            if (dataObject) {\r\n                if (this._jsdo._dataSetName) {\r\n                    if (dataObject[this._jsdo._dataSetName])\r\n                        data = dataObject[this._jsdo._dataSetName][this._name];\r\n                }\r\n                else {\r\n                    if (this._jsdo._dataProperty) {\r\n                        if (dataObject[this._jsdo._dataProperty])\r\n                            data = dataObject[this._jsdo._dataProperty];\r\n                    }\r\n                    else if (dataObject.data) {\r\n                        data = dataObject.data;\r\n                    }\r\n                    else {\r\n                        data = dataObject;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return data instanceof Array ? data[0] : data;\r\n        };\r\n\r\n        // Property: schema\r\n        this.getSchema = function () {\r\n            return this._schema;\r\n        };\r\n        this.setSchema = function (schema) {\r\n            this._schema = schema;\r\n        };\r\n        \r\n        // Private method that returns the ABL data type for the specified field\r\n        this._getABLType = function (fieldName) {\r\n            var i, schema;\r\n\t\t\r\n            schema = this.getSchema();\r\n\t\t\r\n            for (i = 0; i < schema.length; i++) {\r\n                if (schema[i].name == fieldName) {\r\n                    return  schema[i].ablType;\r\n                }\r\n            }\r\n\r\n            return undefined;\t\r\n        };  \r\n\r\n        // Private method that returns format property (from catalog) for the specified field\r\n        this._getFormat = function (fieldName) {\r\n            var i, schema;\r\n\t\t\r\n            schema = this.getSchema();\r\n\t\t\r\n            for (i = 0; i < schema.length; i++) {\r\n                if (schema[i].name == fieldName) {\r\n                    return  schema[i].format;\r\n                }\r\n            }\r\n\r\n            return undefined;\t\r\n        };  \r\n\r\n\r\n\r\n        this.add = function (values) {\r\n            return this._add(values, true, true);\r\n        };\r\n \r\n        // Alias for add() method\r\n        this.create = this.add;\r\n\r\n        this._add = function (values, trackChanges, setWorkingRecord) {\r\n            if (typeof(trackChanges) == 'undefined') {\r\n                trackChanges = true;\r\n            }\r\n            if (typeof(setWorkingRecord) == 'undefined') {\r\n                setWorkingRecord = true;\r\n            }\r\n            var record = {},\r\n                i,\r\n                j,\r\n                value,\r\n                prefixElement,\r\n                name;\r\n\r\n            if (typeof values === \"undefined\") {\r\n                values = {};\r\n            }\r\n            \r\n            // Assign values from the schema\r\n            var schema = this.getSchema();\r\n            for (i = 0; i < schema.length; i++) {\r\n                var fieldName = schema[i].name;\r\n                if (schema[i].type == \"array\") {\r\n                    record[fieldName] = [];\r\n                    if (schema[i].maxItems) {\r\n                        for (var j = 0; j < schema[i].maxItems; j++) {\r\n                            record[fieldName][j] = this._jsdo._getDefaultValue(schema[i]);\r\n                        }\r\n                    }\r\n                    \r\n                    // Assign array values from object parameter\r\n                    value = values[fieldName];\r\n                    if (typeof value != \"undefined\") {\r\n                        record[fieldName] = value;\r\n                        delete values[fieldName];\r\n                    }                    \r\n                    // Assign values from individual fields from flattened arrays\r\n                    prefixElement = this._jsdo._getArrayField(fieldName);\r\n                    if (!record[fieldName]) {\r\n                        record[fieldName] = [];\r\n                    }\r\n                    for (j = 0; j < schema[i].maxItems; j += 1) {\r\n                        name = prefixElement.name + (j+1);\r\n                        value = values[name];\r\n                        if (typeof value != \"undefined\") {\r\n                            if (!this._fields[name.toLowerCase()]) {\r\n                                // Skip element if a field with the same name exists                                \r\n                                // Remove property from object for element since it is not part of the actual schema\r\n                                delete values[prefixElement.name + (j+1)];                            \r\n                                if (typeof value == 'string' && schema[i].items.type != 'string') {\r\n                                    value = this._jsdo._convertType(value,\r\n                                                                              schema[i].items.type,\r\n                                                                              null);\r\n                                }                                \r\n                                record[fieldName][j] = value;                                \r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    record[fieldName] = this._jsdo._getDefaultValue(schema[i]);\r\n                }\r\n            }\r\n\r\n            // Assign values based on a relationship\r\n            if (this._jsdo.useRelationships && this._relationship && this._parent) {\r\n                if (this._jsdo._buffers[this._parent].record) {\r\n                    for (var j = 0; j < this._relationship.length; j++) {\r\n                        record[this._relationship[j].childFieldName] =\r\n                        this._jsdo._buffers[this._parent].record.data[this._relationship[j].parentFieldName];\r\n                    }\r\n                }\r\n                else\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG002\", this._parent));\r\n            }\r\n            // Assign values from object parameter\r\n            for (var v in values) {\r\n                record[v] = values[v];\r\n            }\r\n\r\n            // Specify _id field - do not use schema default        \r\n            var id;\r\n            var idProperty;\r\n            if ((idProperty = this._jsdo._resource.idProperty) !== undefined) {\r\n                id = record[idProperty];\r\n            }\r\n            if (!id) {\r\n                id = progress.data._getNextId();\r\n            }\r\n            else {\r\n                id += \"\";\r\n            }\r\n            record._id = id;\r\n\r\n            if (this.autoSort\r\n                && this._sortRecords\r\n                && (this._sortFn !== undefined || this._sortObject.sortFields !== undefined)) {\r\n                if (this._needsAutoSorting) {\r\n                    this._data.push(record);\r\n                    this._sort();\r\n                }\r\n                else {\r\n                    // Find position of new record in _data and use splice\r\n                    for (var i = 0; i < this._data.length; i++) {\r\n                        if (this._data[i] === null) continue; // Skip null elements\r\n                        var ret = this._sortFn ?\r\n                            this._sortFn(record, this._data[i]) :\r\n                            this._compareFields(record, this._data[i]);\r\n                        if (ret == -1) break;\r\n                    }\r\n                    this._data.splice(i, 0, record);\r\n                }\r\n                this._createIndex();\r\n            }\r\n            else {\r\n                this._data.push(record);\r\n                this._index[record._id] = new progress.data.JSIndexEntry(this._data.length - 1);\r\n            }\r\n\r\n            var jsrecord = new progress.data.JSRecord(this, record);\r\n\r\n            // Set record property ignoring relationships\r\n            if (setWorkingRecord)\r\n                this._setRecord(jsrecord, true);\r\n\r\n            if (trackChanges) {\r\n                // Save before image\r\n                this._beforeImage[record._id] = null;\r\n                // End - Save before image\r\n                this._added.push(record._id);\r\n            }\r\n            return jsrecord;\r\n        };\r\n\r\n        /*\r\n         * Returns records related to the specified jsrecord.\r\n         * If jsrecord is not specified the parent working record is used.\r\n         */\r\n        this._getRelatedData = function (jsrecord) {\r\n            var data = [];\r\n\r\n            if (this._data.length === 0) return data;\r\n\r\n            if (typeof(jsrecord) == 'undefined') {\r\n                if (this._jsdo.useRelationships && this._relationship && this._parent) {\r\n                    jsrecord = this._jsdo._buffers[this._parent].record;\r\n                    if (!jsrecord)\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG002\", this._parent));\r\n                }\r\n            }\r\n            if (jsrecord) {\r\n                // Filter records using relationship\r\n                for (var i = 0; i < this._data.length; i++) {\r\n                    var block = this._data[i];\r\n                    if (!block) continue;\r\n\r\n                    var match = false;\r\n                    for (var j = 0; j < this._relationship.length; j++) {\r\n                        match = (jsrecord.data[this._relationship[j].parentFieldName] == \r\n                            this._data[i][this._relationship[j].childFieldName]);\r\n                        if (!match) break;\r\n                    }\r\n                    if (match)\r\n                        data.push(this._data[i]);\r\n                }\r\n            }\r\n            else\r\n                data = this._data;\r\n\r\n            return data;\r\n        };\r\n\r\n\r\n        // This method is called on a parent table that has child tables \r\n        // where the relationship is specified as NESTED.\r\n        // It returns a json array that contains the parent rows. \r\n        // If a parent row is involved in nested relationship,\r\n        // then references to the child rows are added \r\n        // to the parent row in a child table array (providing the nested format)\r\n        // We are using the internal jsdo _data arrays,\r\n        // and adding a child table array to each parent row that has children.\r\n        // Once the caller is done with the nested data, they can call jsdo._unnestData() \r\n        // which removes these child table references\r\n        this._getDataWithNestedChildren = function (data) {\r\n\r\n            // Walk through all the rows and determine if any of its child tables\r\n            // should be associated (nested) with the current record\r\n            for (var i = 0; i < data.length; i++) {\r\n                var parentRecord = data[i];\r\n\r\n                // Now walk thru the parent's children to find any nested children\r\n                if (this._children && this._children.length > 0) {\r\n                    for (var j = 0; j < this._children.length; j++) {\r\n                        var childBuf = this._jsdo._buffers[this._children[j]];\r\n\r\n                        if (childBuf._isNested) {\r\n                            // If child is nested, then we should walk child records to find matches\r\n                            for (var k = 0; k < childBuf._data.length; k++) {\r\n                                var childRecord = childBuf._data[k];\r\n                                if (!childRecord) continue;\r\n\r\n                                var match = false;\r\n                                for (var m = 0; m < childBuf._relationship.length; m++) {\r\n                                    match = (parentRecord[childBuf._relationship[m].parentFieldName] ==\r\n                                    childRecord[childBuf._relationship[m].childFieldName]);\r\n                                    if (!match) break;\r\n                                }\r\n                                if (match) {\r\n                                    // Make sure that this parentRecord has an array for its child rows\r\n                                    if (!parentRecord[childBuf._name]) {\r\n                                        parentRecord[childBuf._name] = [];\r\n                                    }\r\n                                    parentRecord[childBuf._name].push(childRecord);\r\n                                }\r\n\r\n\r\n                            } // end for; finished adding all child rows for parentRecord\r\n\r\n                            // The child table may have its own nested children so call recursively\r\n                            // Use child row array in current parentRecord\r\n                            if (childBuf._hasNestedChild()) {\r\n                                childBuf._getDataWithNestedChildren(parentRecord[childBuf._name]);\r\n                            }\r\n\r\n\r\n                        } // end if (childBuf._isNested)\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            return data;\r\n\r\n        };\r\n\r\n        this._findFirst = function () {\r\n            if (this._jsdo.useRelationships && this._relationship && this._parent) {\r\n                if (this._jsdo._buffers[this._parent].record) {\r\n                    // Filter records using relationship\r\n                    for (var i = 0; i < this._data.length; i++) {\r\n                        var block = this._data[i];\r\n                        if (!block) continue;\r\n\r\n                        var match = false;\r\n                        var parentFieldName, childFieldName;\r\n                        for (var j = 0; j < this._relationship.length; j++) {\r\n                            parentFieldName = this._relationship[j].parentFieldName;\r\n                            childFieldName = this._relationship[j].childFieldName;\r\n                            match = (this._jsdo._buffers[this._parent].record.data[parentFieldName] == \r\n                                this._data[i][childFieldName]);\r\n                            if (!match) break;\r\n                        }\r\n                        if (match) {\r\n                            return new progress.data.JSRecord(this, this._data[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < this._data.length; i++) {\r\n                    var block = this._data[i];\r\n                    if (!block) continue;\r\n\r\n                    return new progress.data.JSRecord(this, this._data[i]);\r\n                }\r\n            }\r\n\r\n\r\n            return undefined;\r\n        };\r\n\r\n        this._setRecord = function (jsrecord, ignoreRelationships) {\r\n            if (jsrecord) {\r\n                this.record = jsrecord;\r\n            }\r\n            else {\r\n                this.record = undefined;\r\n            }\r\n\r\n            // Set child records only if useRelationships is true\r\n            if (this._jsdo.useRelationships) {\r\n                ignoreRelationships = ((typeof(ignoreRelationships) == 'boolean') && ignoreRelationships);\r\n\r\n                if (this._children && this._children.length > 0) {\r\n                    for (var i = 0; i < this._children.length; i++) {\r\n                        var childTable = this._jsdo._buffers[this._children[i]];\r\n                        if (!ignoreRelationships && this.record && childTable._relationship) {\r\n                            childTable._setRecord(childTable._findFirst());\r\n                        }\r\n                        else {\r\n                            childTable._setRecord(undefined, ignoreRelationships);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._jsdo._defaultTableRef) {\r\n                this._jsdo.record = this.record;\r\n            }\r\n        };\r\n\r\n        this.assign = function (values) {\r\n            if (this.record) {\r\n                return this.record.assign(values);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n        };\r\n\r\n        // Alias for assign() method\r\n        this.update = this.assign;\r\n\r\n        this.remove = function () {\r\n            if (this.record) {\r\n                return this.record._remove(true);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n        };\r\n\r\n        this._remove = function (bTrackChanges) {\r\n            if (this.record) {\r\n                return this.record._remove(bTrackChanges);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n        };\r\n\r\n        this.getId = function () {\r\n            if (this.record) {\r\n                return this.record.data._id;\r\n            }\r\n            else\r\n                return 0;\r\n        };\r\n\r\n\t\t// getErrors() - JSTableRef\r\n\t\tthis.getErrors = function () {\r\n\t\t\treturn this._lastErrors;\r\n\t\t};\r\n\r\n        this.getErrorString = function () {\r\n            if (this.record) {\r\n                return this.record.data._errorString;\r\n            }\r\n            else\r\n                return 0;\r\n        };\r\n\r\n        this.findById = function (id) {\r\n            return this._findById(id, true);\r\n        };\r\n\r\n        this._findById = function (id, setWorkingRecord) {\r\n            if (typeof(setWorkingRecord) == 'undefined') {\r\n                setWorkingRecord = true;\r\n            }\r\n            if (id && this._index[id]) {\r\n                var record = this._data[this._index[id].index];\r\n                this.record = record ? (new progress.data.JSRecord(this, record)) : null;\r\n                if (setWorkingRecord)\r\n                    this._setRecord(this.record);\r\n                return this.record;\r\n            }\r\n\r\n            if (setWorkingRecord)\r\n                this._setRecord(null);\r\n            return null;\r\n        };\r\n\r\n        /*\r\n         * Finds a record in the JSDO memory using the specified function to determine the record.\r\n         */\r\n        this.find = function (fn) {\r\n            if (typeof(fn) != 'function') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG003\", \"find()\"));\r\n            }\r\n            var data = this._getRelatedData();\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                var block = data[i];\r\n                if (!block) {\r\n                    continue;\r\n                }\r\n                this._setRecord(new progress.data.JSRecord(this, data[i]));\r\n                var result = fn(this.record);\r\n                if (typeof(result) != 'boolean') {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG007\", \"find()\"));\r\n                }\r\n                if (result) {\r\n                    return this.record;\r\n                }\r\n            }\r\n\r\n            this._setRecord(null);\r\n            return null;\r\n        };\r\n\r\n        /*\r\n         * Loops through the records  \r\n         */\r\n        this.foreach = function (fn) {\r\n            if (typeof(fn) != 'function') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG003\", \"foreach()\"));\r\n            }\r\n            var numEmptyBlocks = 0;\r\n            if (this._needCompaction)\r\n                this._compact();\r\n\r\n            var data = this._getRelatedData();\r\n\r\n            this._inforeach = true;\r\n            for (var i = 0; i < data.length; i++) {\r\n                var block = data[i];\r\n                if (!block) {\r\n                    numEmptyBlocks++;\r\n                    continue;\r\n                }\r\n\r\n                this._setRecord(new progress.data.JSRecord(this, data[i]));\r\n                var result = fn(this.record);\r\n                if ((typeof(result) != 'undefined') && !result)\r\n                    break;\r\n            }\r\n\r\n            this._inforeach = false;\r\n\r\n            if ((numEmptyBlocks * 100 / this._data.length) >= PROGRESS_JSDO_PCT_MAX_EMPTY_BLOCKS)\r\n                this._needCompaction = true;\r\n        };\r\n\r\n        this._equalRecord = function (rec1, rec2, keyFields) {\r\n            var field;\r\n            var match = true;\r\n            for (var i = 0; i < keyFields.length; i++) {\r\n                var fieldName = keyFields[i];\r\n                var value1 = rec1[fieldName];\r\n                var value2 = rec2[fieldName];\r\n\r\n                if (!jsdo[tableName].caseSensitive) {\r\n                    field = jsdo[tableName]._fields[fieldName.toLowerCase()];\r\n                    if (field && field.type == \"string\") {\r\n                        if (value1 !== undefined && value1 !== null)\r\n                            value1 = value1.toUpperCase();\r\n                        if (value2 !== undefined && value2 !== null)\r\n                            value2 = value2.toUpperCase();\r\n                    }\r\n                }\r\n\r\n                match = (value1 == value2);\r\n                if (!match) return false;\r\n            }\r\n            return true;\r\n        };\r\n\r\n        // Private method to merge changes using merge modes: APPEND, EMPTY, MERGE and REPLACE\r\n        this._getKey = function (record, keyFields) {\r\n            var keyObject = {};\r\n            for (var i = 0; i < keyFields.length; i++) {\r\n                var fieldName = keyFields[i];\r\n                var value = record[fieldName];\r\n\r\n                if (!jsdo[tableName].caseSensitive) {\r\n                    field = jsdo[tableName]._fields[fieldName.toLowerCase()];\r\n                    if (field && field.type == \"string\") {\r\n                        if (value !== undefined && value !== null)\r\n                            value = value.toUpperCase();\r\n                    }\r\n                }\r\n                keyObject[fieldName] = value;\r\n            }\r\n            return JSON.stringify(keyObject);\r\n        };\r\n\r\n        this._getCompareFn = function (sortObject) {\r\n            if (typeof sortObject == 'function') {\r\n                return function (rec1, rec2) {\r\n                    if (rec1 === null) return 1;\r\n                    if (rec2 === null) return -1;\r\n\r\n                    var jsrec1 = new progress.data.JSRecord(this, rec1);\r\n                    var jsrec2 = new progress.data.JSRecord(this, rec2);\r\n                    return sortObject(jsrec1, jsrec2);\r\n                };\r\n            }\r\n            else return function (rec1, rec2) {\r\n                var tableRef = sortObject.tableRef;\r\n                var sortFields = sortObject.sortFields;\r\n                if (!(sortFields instanceof Array)) return 0;\r\n                var sortAscending = sortObject.sortAscending;\r\n\r\n                if (rec1 === null) return 1;\r\n                if (rec2 === null) return -1;\r\n\r\n                var field;\r\n                for (var i = 0; i < sortFields.length; i++) {\r\n                    var fieldName = sortFields[i];\r\n                    var value1 = rec1[fieldName];\r\n                    var value2 = rec2[fieldName];\r\n\r\n                    if (!tableRef.caseSensitive) {\r\n                        field = tableRef._fields[fieldName.toLowerCase()];\r\n                        if (field && field.type == \"string\") {\r\n                            if (value1 !== undefined && value1 !== null)\r\n                                value1 = value1.toUpperCase();\r\n                            if (value2 !== undefined && value2 !== null)\r\n                                value2 = value2.toUpperCase();\r\n                        }\r\n                    }\r\n                    if (value1 > value2 || (value1 === undefined || value1 === null))\r\n                        return sortAscending[i] ? 1 : -1;\r\n                    else if (value1 < value2 || (value2 === undefined && value2 === null))\r\n                        return sortAscending[i] ? -1 : 1;\r\n                }\r\n                return 0;\r\n            };\r\n        };\r\n\r\n        this._sortObject = {};\r\n        this._sortObject.tableRef = this;\r\n        this._sortObject.sortFields = undefined;\r\n        this._sortObject.sortAscending = undefined;\r\n        this._compareFields = this._getCompareFn(this._sortObject);\r\n\r\n        // _sortRecords - Tells the table reference whether to sort on add, assign and addRecords\t\t\r\n        this._sortRecords = true;\r\n        // Tells the table reference whether an autoSort is required on an add or assign\r\n        this._needsAutoSorting = false;\r\n        this._sortFn = undefined;\r\n        if ((typeof Object.defineProperty) == 'function') {\r\n            this._autoSort = true;\r\n            Object.defineProperty(\r\n                this,\r\n                \"autoSort\",\r\n                {\r\n                    get: function () {\r\n                        return this._autoSort;\r\n                    },\r\n                    set: function (value) {\r\n                        if (value) {\r\n                            this._autoSort = true;\r\n                            if (this._sortFn || this._sortObject.sortFields) {\r\n                                this._sort();\r\n                                this._createIndex();\r\n                            }\r\n                        }\r\n                        else\r\n                            this._autoSort = false;\r\n                    },\r\n                    enumerable: true,\r\n                    writeable: true\r\n                });\r\n            this._caseSensitive = false;\r\n            Object.defineProperty(\r\n                this,\r\n                \"caseSensitive\",\r\n                {\r\n                    get: function () {\r\n                        return this._caseSensitive;\r\n                    },\r\n                    set: function (value) {\r\n                        if (value) {\r\n                            this._caseSensitive = true;\r\n                        }\r\n                        else\r\n                            this._caseSensitive = false;\r\n                        if (this.autoSort &&\r\n                            (this._sortObject.sortFields && !this._sortFn)) {\r\n                            this._sort();\r\n                            this._createIndex();\r\n                        }\r\n                    },\r\n                    enumerable: true,\r\n                    writeable: true\r\n                });\r\n        }\r\n        else {\r\n            this.autoSort = true;\r\n            this.caseSensitive = false; // caseSensitive is false by default\t\t\r\n        }\r\n\r\n        this._processSortFields = function (sortFields) {\r\n            var sortObject = {};\r\n            if (sortFields instanceof Array) {\r\n                sortObject.sortFields = sortFields;\r\n                sortObject.sortAscending = [];\r\n                sortObject.fields = {};\r\n                for (var i = 0; i < sortObject.sortFields.length; i++) {\r\n                    var idx;\r\n                    var fieldName;\r\n                    var field;\r\n\r\n                    if (typeof (sortObject.sortFields[i]) != 'string') {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG030\", \"sort field name\", \"string element\"));\r\n                    }\r\n                    if ((idx = sortObject.sortFields[i].indexOf(':')) != -1) {\r\n                        fieldName = sortObject.sortFields[i].substring(0, idx);\r\n                        var sortOrder = sortObject.sortFields[i].substring(idx + 1);\r\n                        switch (sortOrder.toUpperCase()) {\r\n                            case 'ASCENDING':\r\n                            case 'ASC':\r\n                                sortObject.sortAscending[i] = true;\r\n                                break;\r\n                            case 'DESCENDING':\r\n                            case 'DESC':\r\n                                sortObject.sortAscending[i] = false;\r\n                                break;\r\n                            default:\r\n                                throw new Error(msg.getMsgText(\"jsdoMSG030\", \r\n                                    \"sort order '\" + sortObject.sortFields[i].substring(idx + 1) + \"'\", \r\n                                    \"ASCENDING or DESCENDING\"));\r\n                        }\r\n                    }\r\n                    else {\r\n                        fieldName = sortObject.sortFields[i];\r\n                        sortObject.sortAscending[i] = true;\r\n                    }\r\n                    if (fieldName != \"_id\" && this._fields) {\r\n                        field = this._fields[fieldName.toLowerCase()];\r\n                        if (field) {\r\n                            if (field.type == \"array\")\r\n                                throw new Error(msg.getMsgText(\"jsdoMSG030\", \"data type found in sort\", \r\n                                    \"scalar field\"));\r\n                            fieldName = field.name;\r\n                        }\r\n                        else\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG031\", fieldName));\r\n                    }\r\n                    sortObject.sortFields[i] = fieldName;\r\n                    sortObject.fields[fieldName] = fieldName;\r\n                }\r\n            }\r\n            else {\r\n                sortObject.sortFields = undefined;\r\n                sortObject.sortAscending = undefined;\r\n                sortObject.fields = undefined;\r\n            }\r\n            return sortObject;\r\n        };\r\n\r\n        this.setSortFields = function (sortFields) {\r\n            if (sortFields === undefined || sortFields === null) {\r\n                this._sortObject.sortFields = undefined;\r\n                this._sortObject.sortAscending = undefined;\r\n            }\r\n            else if (sortFields instanceof Array) {\r\n                var sortObject = this._processSortFields(sortFields);\r\n                this._sortObject.sortFields = sortObject.sortFields;\r\n                this._sortObject.sortAscending = sortObject.sortAscending;\r\n                this._sortObject.fields = sortObject.fields;\r\n\r\n                if (this.autoSort) {\r\n                    this._sort();\r\n                    this._createIndex();\r\n                }\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", \"setSortFields()\"));\r\n        };\r\n\r\n        this.setSortFn = function (fn) {\r\n            // Check that fn parameter is a function\r\n            // Valid values are a function, undefined, or null\r\n            // Documentation mentions null as a way to clear the sort function\r\n            if (fn && typeof (fn) != 'function') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG030\", \"parameter in setSortFn()\", \r\n                    \"function parameter\"));\r\n            }\r\n            this._sortFn = fn ? this._getCompareFn(fn) : undefined;\r\n            if (this.autoSort) {\r\n                this._sort();\r\n                this._createIndex();\r\n            }\r\n        };\r\n\r\n        this.sort = function (arg1) {\r\n            if (arg1 === undefined || arg1 === null) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG025\", \"JSDO\", \"sort()\"));\r\n            }\r\n            if (arguments.length !== 1 ||\r\n                (!(arg1 instanceof Array) && typeof(arg1) != 'function')) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", \"sort()\"));\r\n            }\r\n            \r\n            if (arg1 instanceof Array) {\r\n                var sortObject = this._processSortFields(arg1);\r\n                if (sortObject.sortFields && sortObject.sortFields.length > 0)\r\n                    this._sort(sortObject);\r\n            }\r\n            else {\r\n                this._sort(arg1);\r\n            }\r\n            this._createIndex();\r\n        };\r\n\r\n        this._sort = function (arg1) {\r\n            if (arguments.length === 0 &&\r\n                (!this.autoSort || (this._sortFn === undefined && this._sortObject.sortFields === undefined)))\r\n                return;\r\n\r\n            if (arguments.length === 0) {\r\n                if (this._sortFn) {\r\n                    // Sort using function\r\n                    this._data.sort(this._sortFn);\r\n                }\r\n                else {\r\n                    // Sort using sort fields\r\n                    this._data.sort(this._compareFields);\r\n                }\r\n                this._needsAutoSorting = false;\r\n            }\r\n            else {\r\n                if (typeof(arg1) == 'function') {\r\n                    // Sort using function\r\n                    this._data.sort(this._getCompareFn(arg1));\r\n                }\r\n                else {\r\n                    // Sort using sort fields\r\n                    arg1.tableRef = this;\r\n                    this._data.sort(this._getCompareFn(arg1));\r\n                }\r\n                if (this.autoSort)\r\n                    this._needsAutoSorting = true;\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Reads a JSON object into the JSDO memory for the specified table reference.\r\n         */\r\n        this.addRecords = function (jsonObject, addMode, keyFields, trackChanges, isInvoke) {\r\n            this._jsdo._addRecords(this._name, jsonObject, addMode, keyFields, trackChanges, isInvoke);\r\n        };\r\n\r\n        /*\r\n         * Accepts changes for the specified table reference. \r\n         */\r\n        this.acceptChanges = function () {\r\n            var tableRef = this;\r\n\r\n            // First, let's remove any \"prods:\" properties from created and updated records.\r\n            // Don't have to worry about deleted records, since they're going away.\r\n            for (var id in tableRef._beforeImage) {\r\n                //  Create\r\n                if (tableRef._beforeImage[id] === null) {\r\n                    var jsrecord = tableRef._findById(id, false);\r\n                    if (jsrecord !== null) {\r\n                        tableRef._jsdo._deleteProdsProperties(jsrecord.data, true);\r\n                    }\r\n\r\n                }\r\n                // Update\r\n                else if (this._changed[id] !== undefined) {\r\n                    var jsrecord = this._findById(id, false);\r\n                    if (jsrecord !== null) {\r\n                        tableRef._jsdo._deleteProdsProperties(jsrecord.data, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            tableRef._processed = {};\r\n            tableRef._added = [];\r\n            tableRef._changed = {};\r\n            tableRef._deleted = [];\r\n            tableRef._beforeImage = {};\r\n        };\r\n\r\n        /*\r\n         * Rejects changes for the specified table reference.\r\n         */\r\n        this.rejectChanges = function () {\r\n            // Reject changes\r\n            for (var id in this._beforeImage) {\r\n                if (this._beforeImage[id] === null) {\r\n                    // Undo create\r\n                    this._jsdo._undoCreate(this, id);\r\n                }\r\n                else if (this._changed[id] !== undefined) {\r\n                    // Undo update\r\n                    this._jsdo._undoUpdate(this, id, true);\r\n                }\r\n                else {\r\n                    // Undo delete\r\n                    this._jsdo._undoDelete(this, id, true);\r\n                }\r\n            }\r\n\r\n            var tableRef = this;\r\n            tableRef._processed = {};\r\n            tableRef._added = [];\r\n            tableRef._changed = {};\r\n            tableRef._deleted = [];\r\n        };\r\n\r\n        this.hasChanges = function () {\r\n            return (Object.keys(this._beforeImage).length !== 0);\r\n        };\r\n\r\n        this.getChanges = function () {\r\n            var result = [];\r\n            for (var id in this._beforeImage) {\r\n                var item = {rowState: \"\", record: null};\r\n                // Create\r\n                if (this._beforeImage[id] === null) {\r\n                    item.rowState = PROGRESS_JSDO_ROW_STATE_STRING[progress.data.JSDO._OP_CREATE];\r\n                    item.record = this._findById(id, false);\r\n                }\r\n                // Update\r\n                else if (this._changed[id] !== undefined) {\r\n                    item.rowState = PROGRESS_JSDO_ROW_STATE_STRING[progress.data.JSDO._OP_UPDATE];\r\n                    item.record = this._findById(id, false);\r\n                }\r\n                // Delete\r\n                else {\r\n                    item.rowState = PROGRESS_JSDO_ROW_STATE_STRING[progress.data.JSDO._OP_DELETE];\r\n                    item.record = new progress.data.JSRecord(this, this._beforeImage[id]);\r\n                }\r\n                result.push(item);\r\n            }\r\n            return result;\r\n        };        \r\n\r\n        /*\r\n         * Private method to apply changes for the specified table reference.\r\n         * If _errorString has been set for a row, row change is rejected. \r\n         * If it has not been set, acceptRowChanges() is called.\r\n         */\r\n        this._applyChanges = function () {\r\n            for (var id in this._beforeImage) {\r\n                //  Create\r\n                if (this._beforeImage[id] === null) {\r\n                    var jsrecord = this._findById(id, false);\r\n                    if (jsrecord !== null) {\r\n                        if (jsrecord.data._rejected\r\n                            || (jsrecord.data._errorString !== undefined)) {\r\n                            this._jsdo._undoCreate(this, id);\r\n                        }\r\n                        else {\r\n                            jsrecord.acceptRowChanges();\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Record not present in JSDO memory\r\n                        // Delete after Create\r\n                        var found = false;\r\n                        for (var i = 0; i < this._deleted.length; i++) {\r\n                            found = (this._deleted[i].data._id == id);\r\n                            if (found) break;\r\n                        }\r\n                        if (!found) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG000\", \r\n                                \"Created record appears to be deleted without a delete operation.\"));\r\n                        }\r\n                    }\r\n                }\r\n                // Update\r\n                else if (this._changed[id] !== undefined) {\r\n                    var jsrecord = this._findById(id, false);\r\n                    if (jsrecord !== null) {\r\n                        // Record found in JSDO memory\r\n                        if (jsrecord.data._rejected\r\n                            || (jsrecord.data._errorString !== undefined)) {\r\n                            this._jsdo._undoUpdate(this, id);\r\n                        }\r\n                        else {\r\n                            jsrecord.acceptRowChanges();\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Record not present in JSDO memory\r\n                        // Delete after Update\r\n                        if (this._beforeImage[id]._rejected\r\n                            || (this._beforeImage[id]._errorString !== undefined)) {\r\n                            this._jsdo._undoDelete(this, id);\r\n                        }\r\n                        else {\r\n                            var found = false;\r\n                            for (var i = 0; i < this._deleted.length; i++) {\r\n                                found = (this._deleted[i].data._id == id);\r\n                                if (found) break;\r\n                            }\r\n                            if (!found) {\r\n                                throw new Error(msg.getMsgText(\"jsdoMSG000\", \r\n                                    \"Updated record appears to be deleted without a delete operation.\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // Delete\r\n                else {\r\n                    if (this._beforeImage[id]._rejected\r\n                        || (this._beforeImage[id]._errorString !== undefined)) {\r\n                        this._jsdo._undoDelete(this, id);\r\n                    }\r\n                }\r\n            }\r\n\r\n            var tableRef = this;\r\n            tableRef._processed = {};\r\n            tableRef._added = [];\r\n            tableRef._changed = {};\r\n            tableRef._deleted = [];\r\n            tableRef._beforeImage = {};\r\n        };\r\n\r\n\r\n        /*\r\n         * Accepts row changes for the working record at the table reference level.\r\n         */\r\n        this.acceptRowChanges = function () {\r\n            if (this.record)\r\n                return this.record.acceptRowChanges();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n        };\r\n\r\n        /*\r\n         * Rejects row changes for the working record at the table reference level.\r\n         */\r\n        this.rejectRowChanges = function () {\r\n            if (this.record)\r\n                return this.record.rejectRowChanges();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n        };\r\n\r\n\r\n        /* This method returns true \r\n         * if this table has any child tables and at least one of those tables is nested.\r\n         * Else if returns false.\r\n         */\r\n        this._hasNestedChild = function () {\r\n            var hasNestedChild = false;\r\n            var childBufObj;\r\n\r\n            // If table has children, see if any relationship is NESTED\t\r\n            if (this._children.length > 0) {\r\n                for (var i = 0; i < this._children.length; i++) {\r\n                    childBufObj = this._jsdo._buffers[this._children[i]];\r\n\r\n                    if (childBufObj._isNested) {\r\n                        hasNestedChild = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return hasNestedChild;\r\n        };\r\n    };\r\n\r\n    /*\r\n     * Returns a JSRecord for the specified JSDO.\r\n     * @param jsdo the JSDO\r\n     * @param record the values of the record\r\n     */\r\n    progress.data.JSRecord = function JSRecord(tableRef, record) {\r\n        this._tableRef = tableRef;\r\n        this.data = record;\r\n\r\n        this.getId = function () {\r\n            return this.data._id ? this.data._id : null;\r\n        };\r\n\r\n        this.getErrorString = function () {\r\n            return this.data._errorString;\r\n        };\r\n\r\n        /*\r\n         * Saves a copy of the current record to the before image.\r\n         */\r\n        this._saveBeforeImageUpdate = function () {\r\n            // Save before image \r\n            if (this._tableRef._beforeImage[this.data._id] === undefined) {\r\n                // this.data._index = index;\r\n                var copy = {};\r\n                this._tableRef._jsdo._copyRecord(\r\n                    this._tableRef, this.data, copy);\r\n                this._tableRef._beforeImage[this.data._id] = copy;\r\n            }\r\n\r\n            if (this._tableRef._changed[this.data._id] === undefined) {\r\n                this._tableRef._changed[this.data._id] = this.data;\r\n            }\r\n            // End - Save before image\t\t\t\r\n        };\r\n\r\n        /*\r\n         * \r\n         */\r\n        this._sortRecord = function (fields) {\r\n            var index = this._tableRef._index[this.data._id].index;\r\n            var record = this._tableRef._data[index];\r\n\r\n            if (this._tableRef.autoSort \r\n                && this._tableRef._sortRecords \r\n                && (this._tableRef._sortFn !== undefined \r\n                    || this._tableRef._sortObject.sortFields !== undefined)) {\r\n\r\n                if (this._tableRef._sortObject.fields) {\r\n                    if (typeof fields == 'string') {\r\n                        if (this._tableRef._sortObject.fields[fields] === undefined)\r\n                            return; // Only sort records if the the specified field is in the sort fields\r\n                    }\r\n                    else if (fields instanceof Array) {\r\n                        var found = false;\r\n                        for (var i = 0; i < fields.length; i++) {\r\n                            if (this._tableRef._sortObject.fields[fields[i]] !== undefined) {\r\n                                found = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!found)\r\n                            return; // Only sort records if the the specified fields are in the sort fields\r\n                    }\r\n                }\r\n\r\n                if (this._tableRef._needsAutoSorting) {\r\n                    this._tableRef._sort();\r\n                    this._tableRef._createIndex();\r\n                }\r\n                else {\r\n                    // Find position of new record in _data and use splice\r\n                    for (var i = 0; i < this._tableRef._data.length; i++) {\r\n                        if (this._tableRef._data[i] === null) continue; // Skip null elements\r\n                        if (i == index) continue; // Skip changed record\r\n                        var ret = this._tableRef._sortFn ?\r\n                            this._tableRef._sortFn(record, this._tableRef._data[i]) :\r\n                            this._tableRef._compareFields(record, this._tableRef._data[i]);\r\n                        if (ret == -1) break;\r\n                    }\r\n\r\n                    if (i > index) {\r\n                        i--;\r\n                    }\r\n                    if (i != index) {\r\n                        this._tableRef._data.splice(index, 1);\r\n                        this._tableRef._data.splice(i, 0, record);\r\n                        this._tableRef._createIndex();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Assigns the specified values.\r\n         * @param record parameter with the record values\r\n         */\r\n        this.assign = function (record) {\r\n            if (record === undefined)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", \"assign() or update()\"));\r\n\r\n            this._saveBeforeImageUpdate();\r\n\r\n            var fieldName,\r\n                i,\r\n                j,\r\n                value,\r\n                schema = this._tableRef.getSchema(),\r\n                prefixElement,\r\n                name;\r\n            \r\n            if (record) {\r\n                for (i = 0; i < schema.length; i += 1) {\r\n                    fieldName = schema[i].name;\r\n                    value = record[fieldName];\r\n                    if (typeof value != \"undefined\") {\r\n                        if (typeof value == 'string' && schema[i].type != 'string') {\r\n                            value = this._tableRef._jsdo._convertType(value,\r\n                                schema[i].type,\r\n                                schema[i].items ? schema[i].items.type : null);\r\n                        }\r\n                        this.data[fieldName] = value;\r\n                    }\r\n                    if (schema[i].type === \"array\") {\r\n                        // Assign values from individual fields from flattened arrays                      \r\n                        prefixElement = this._tableRef._jsdo._getArrayField(fieldName);\r\n                        if (!this.data[fieldName]) {\r\n                            this.data[fieldName] = [];\r\n                        }\r\n                        for (j = 0; j < schema[i].maxItems; j += 1) {\r\n                            name = prefixElement.name + (j+1);\r\n                            value = record[name];\r\n                            if (typeof value != \"undefined\") {\r\n                                // Skip element if a field with the same name exists\r\n                                if (!this._tableRef._fields[name.toLowerCase()]) {                                \r\n                                    if (typeof value == 'string' && schema[i].items.type != 'string') {\r\n                                        value = this._tableRef._jsdo._convertType(value,\r\n                                                                                  schema[i].items.type,\r\n                                                                                  null);\r\n                                    }                                \r\n                                    this.data[fieldName][j] = value;\r\n                                }\r\n                            }\r\n                        }\r\n                    }                    \r\n                }\r\n\r\n                this._sortRecord();\r\n            }\r\n            return true;\r\n        };\r\n\r\n        // Alias for assign() method\r\n        this.update = this.assign;\r\n\r\n        /*\r\n         * Removes the JSRecord.\r\n         */\r\n        this.remove = function () {\r\n            return this._remove(true);\r\n        };\r\n\r\n        this._remove = function (bTrackChanges) {\r\n            if (typeof(bTrackChanges) == 'undefined') {\r\n                bTrackChanges = true;\r\n            }\r\n\r\n            var index = this._tableRef._index[this.data._id].index;\r\n            var jsrecord = this._tableRef._findById(this.data._id, false);\r\n\r\n            if (bTrackChanges) {\r\n                // Save before image\r\n                var record = this._tableRef._beforeImage[this.data._id];\r\n                if (record === undefined) {\r\n                    // Record does not exist in the before image\r\n                    this.data._index = index;\r\n                    this._tableRef._beforeImage[this.data._id] = this.data;\r\n                }\r\n                else {\r\n                    // Record exists in the before image\r\n                    if (record) {\r\n                        // Record is not null - a null entry in the before image indicates \r\n                        // corresponds to an add\r\n                        // Save the index of the record\r\n                        // so that an undo would restore the record in the same position in _data\r\n                        record._index = index;\r\n                    }\r\n                }\r\n                // End - Save before image\r\n                this._tableRef._deleted.push(jsrecord);\r\n            }\r\n\r\n            // Set entry to null instead of removing entry - index requires positions to be persistent\r\n            this._tableRef._data[index] = null;\r\n            this._tableRef._hasEmptyBlocks = true;\r\n            delete this._tableRef._index[this.data._id];\r\n\r\n            // Set record property\r\n            this._tableRef._setRecord(null);\r\n\r\n            return true;\r\n        };\r\n\r\n        /*\r\n         * Accepts row changes for the specified record.\r\n         */\r\n        this.acceptRowChanges = function () {\r\n            var id = this.data._id;\r\n            if (this._tableRef._beforeImage[id] !== undefined) {\r\n                if (this.data._rejected) {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG127\"));\r\n                }\r\n                if (this._tableRef._beforeImage[id] === null) {\r\n                    // Accept create\t\t\t\t\r\n                    // Remove element from _added\r\n                    for (var i = 0; i < this._tableRef._added.length; i++) {\r\n                        if (this._tableRef._added[i] == id) {\r\n                            this._tableRef._added.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                    this._tableRef._jsdo._deleteProdsProperties(this.data, true);\r\n                }\r\n                else if (this._tableRef._changed[id] !== undefined) {\r\n                    // Accept update\r\n                    delete this._tableRef._changed[id];\r\n                    this._tableRef._jsdo._deleteProdsProperties(this.data, true);\r\n                }\r\n                else {\r\n                    // Accept delete\r\n                    // Remove element from _deleted\r\n                    for (var i = 0; i < this._tableRef._deleted.length; i++) {\r\n                        if (this._tableRef._deleted[i].data._id == id) {\r\n                            this._tableRef._deleted.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                delete tableRef._beforeImage[id];\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Rejects row changes for the specified record.\r\n         */\r\n        this.rejectRowChanges = function () {\r\n            var id = this.data._id;\r\n            if (this._tableRef._beforeImage[id] !== undefined) {\r\n                if (this._tableRef._beforeImage[id] === null) {\r\n                    // Undo create\t\t\t\t\r\n                    this._tableRef._jsdo._undoCreate(this._tableRef, id);\r\n                    // Remove element from _added\r\n                    for (var i = 0; i < this._tableRef._added.length; i++) {\r\n                        if (this._tableRef._added[i] == id) {\r\n                            this._tableRef._added.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this._tableRef._changed[id] !== undefined) {\r\n                    // Undo update\r\n                    this._tableRef._jsdo._undoUpdate(this._tableRef, id, true);\r\n                    delete this._tableRef._changed[id];\r\n                }\r\n                else {\r\n                    // Undo delete\r\n                    this._tableRef._jsdo._undoDelete(this._tableRef, id, true);\r\n                    // Remove element from _deleted\r\n                    for (var i = 0; i < this._tableRef._deleted.length; i++) {\r\n                        if (this._tableRef._deleted[i].data._id == id) {\r\n                            this._tableRef._deleted.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                delete tableRef._beforeImage[id];\r\n            }\r\n        };\r\n\r\n    };\r\n\r\n    /*\r\n     * Returns a JSDO for the specified resource.\r\n     * @param resNameOrParmObj: the resource name or an object that contains the initial values for the JSDO\r\n     *                     (if this is an object, it should include the name property with the resource name\r\n     * @param serviceName : name of service (ignored if 1st param is an object containing the initial values)\r\n     */\r\n    progress.data.JSDO = function JSDO(resNameOrParmObj, serviceName) {\r\n        var _super = {};\r\n        \r\n        if (typeof progress.data.Session == 'undefined') {\r\n            throw new Error('ERROR: You must include progress.session.js');\r\n        }\r\n        \r\n        _super.subscribe = this.subscribe;\r\n        \r\n        // Override for Observable.subscribe\r\n        this.subscribe = function(evt) {\r\n            var args = Array.prototype.slice.call(arguments);\r\n            if (typeof evt === \"string\") {\r\n                // Aliases for events\r\n                switch(evt.toLowerCase()) {\r\n                case \"beforeread\":\r\n                    args[0] = \"beforefill\";\r\n                    break;\r\n                case \"afterread\":\r\n                    args[0] = \"afterfill\";                \r\n                    break;\r\n                }\r\n            }\r\n            _super.subscribe.apply(this, args);\r\n        };\r\n        \r\n        this._defineProperty = function (tableName, fieldName) {\r\n            Object.defineProperty(\r\n                this._buffers[tableName],\r\n                fieldName,\r\n                {\r\n                    get: function fnGet() {\r\n                        var name,\r\n                            index,\r\n                            element,\r\n                            fieldInfo;\r\n                        if (this.record) {\r\n                            index = fieldName.indexOf(progress.data.JSDO.ARRAY_INDEX_SEPARATOR);\r\n                            if (index > 0 && !this._fields[fieldName.toLowerCase()]) {\r\n                                // Skip element if a field with the same name exists                                \r\n                                // Check if field is a flattened array field by quickly checking for the separator\r\n                                // Extract name and index element\r\n                                name = fieldName.substring(0, index);\r\n                                element = fieldName.substring(index + progress.data.JSDO.ARRAY_INDEX_SEPARATOR.length);\r\n                                fieldInfo = this._fields[name.toLowerCase()];\r\n                                if (!isNaN(element) && fieldInfo && (fieldInfo.type === \"array\")) {\r\n                                    return this.record.data[name][element - 1];\r\n                                }\r\n                            }\r\n                            return this.record.data[fieldName];                            \r\n                        }\r\n                        else\r\n                            return null;\r\n                    },\r\n                    set: function (value) {\r\n                        var name = fieldName,\r\n                            index,\r\n                            element,\r\n                            fieldInfo;\r\n                        if (this.record) {\r\n                            this.record._saveBeforeImageUpdate();\r\n\r\n                            try {\r\n                                index = fieldName.indexOf(progress.data.JSDO.ARRAY_INDEX_SEPARATOR);\r\n                                if (index > 0 && !this._fields[fieldName.toLowerCase()]) {\r\n                                    // Skip element if a field with the same name exists                                    \r\n                                    name = fieldName.substring(0, index);\r\n                                    element = fieldName.substring(index + progress.data.JSDO.ARRAY_INDEX_SEPARATOR.length);\r\n                                    fieldInfo = this._fields[name.toLowerCase()];\r\n                                    if (!isNaN(element) && fieldInfo && (fieldInfo.type === \"array\")) {\r\n                                        this.record.data[name][element - 1] = value;\r\n                                        return;\r\n                                    }\r\n                                }                            \r\n                                this.record.data[fieldName] = value;\r\n                            }\r\n                            finally {\r\n                                this.record._sortRecord(name);\r\n                            }\r\n                        }\r\n                    },\r\n                    enumerable: true,\r\n                    writeable: true\r\n                });\r\n        };\r\n\r\n        // Initial values\r\n        this._buffers = {};         // Object of table references\r\n        this._numBuffers = 0;\r\n        this._defaultTableRef = null;\r\n\r\n        this._async = true;\r\n        this._dataProperty = null;\r\n        this._dataSetName = null;\r\n        this.operations = [];\r\n        this.useRelationships = true;\r\n\r\n        this._session = null;\r\n        this._needCompaction = false;\r\n\r\n        this._hasCUDOperations = false;\r\n        this._hasSubmitOperation = false;\r\n        this._useSubmit = false; // For saving saveChanges(useSubmit) param\r\n\r\n        this.autoApplyChanges = true; // default should be true to support 11.2 behavior\r\n        this._lastErrors = [];\r\n        this._localStorage = null;\r\n        this._convertForServer;\r\n        var autoFill = false;\r\n\r\n        // Initialize JSDO using init values\r\n        if (!arguments[0]) {\r\n            throw new Error(\"JSDO: Parameters are required in constructor.\");\r\n        }\r\n\r\n        if (typeof(arguments[0]) == \"string\") {\r\n            this.name = arguments[0];\r\n//\t\tif ( arguments[1] && (typeof(arguments[1]) ==  \"string\") )\r\n//\t\t\tlocalServiceName = serviceName;\r\n        }\r\n        else if (typeof(arguments[0]) == \"object\") {\r\n            var args = arguments[0];\r\n            for (var v in args) {\r\n                switch (v) {\r\n                    case 'autoFill':\r\n                        autoFill = args[v];\r\n                        break;\r\n                    case 'events':\r\n                        this._events = {};\r\n                        for (var eventName in args[v]) {\r\n                            this._events[eventName.toLowerCase()] = args[v][eventName];\r\n                        }\r\n                        break;\r\n                    case 'dataProperty':\r\n                        this._dataProperty = args[v];\r\n                        break;\r\n                    default:\r\n                        this[v] = args[v];\r\n                }\r\n            }\r\n        }\r\n        /* error out if caller didn't pass the resource name */\r\n        if ((!this.name) /*|| !(this._session)*/) {\r\n            // make this error message more specific?\r\n            throw new Error(\"JSDO: JSDO constructor is missing the value for 'name'\");\r\n        }\r\n\r\n        /* perform some basic validation on the event object for the proper structure if provided */\r\n        if (this._events) {\r\n            if ((typeof this._events) !== 'object') {\r\n                throw new Error(\"JSDO: JSDO constructor event object is not defined as an object\");\r\n            }\r\n\r\n            /* make sure all the event handlers are sane */\r\n            for (var prop in this._events) {\r\n                var evt = this._events[prop];\r\n                if (!(evt instanceof Array)) {\r\n                    throw new Error('JSDO: JSDO constructor event object for ' + prop + ' must be an array');\r\n                }\r\n                evt.forEach(function (el) {\r\n                    if ((typeof el) !== 'object') {\r\n                        throw new Error(\"JSDO: JSDO constuctor event object for \" + \r\n                            prop + \" is not defined as an object\");\r\n                    }\r\n                    /* listener must have at least fn property defined as a function */\r\n                    if ((typeof el.fn) !== 'function') {\r\n                        throw new Error(\"JSDO: JSDO event listener for \" + prop + \" is not a function.\");\r\n                    }\r\n                    /* scope is optional, but must be an object if provided */\r\n                    if (el.scope && (typeof el.scope) !== 'object') {\r\n                        throw new Error(\"JSDO: JSDO event listener scope for \" + prop + \" is not an object.\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.name) {\r\n            // Read resource definition from the Catalog - save reference to JSDO\r\n            // Enhance this to deal with multiple services loaded and the same resource\r\n            // name is used by more than one service (use the local serviceName var)\r\n            this._resource = progress.data.ServicesManager.getResource(this.name);\r\n            if (this._resource) {\r\n                if (!this.url)\r\n                    this.url = this._resource.url;\r\n                if (!this._dataSetName && this._resource._dataSetName) {\r\n                    // Catalog defines a DataSet\r\n                    this._dataSetName = this._resource._dataSetName;\r\n\r\n                    // Define TableRef property in the JSDO\r\n                    if (this._resource.dataProperty) {\r\n                        var buffer = this[this._resource.dataProperty] \r\n                            = new progress.data.JSTableRef(this, this._resource.dataProperty);\r\n                        this._buffers[this._resource.dataProperty] = buffer;\r\n                    }\r\n                    else {\r\n                        for (var tableName in this._resource.fields) {\r\n                            var buffer = this[tableName] \r\n                                = new progress.data.JSTableRef(this, tableName);\r\n                            this._buffers[tableName] = buffer;\r\n                        }\r\n                    }\r\n                }\r\n                if (!this._dataProperty && this._resource.dataProperty)\r\n                    this._dataProperty = this._resource.dataProperty;\r\n\r\n                if (!this._dataSetName) {\r\n                    var tableName = this._dataProperty ? this._dataProperty : \"\";\r\n                    this._buffers[tableName] = new progress.data.JSTableRef(this, tableName);\r\n                    if (tableName)\r\n                        this[tableName] = this._buffers[tableName];\r\n                }\r\n\r\n                // Add functions for operations to JSDO object\r\n                for (var fnName in this._resource.fn) {\r\n                    this[fnName] = this._resource.fn[fnName][\"function\"];\r\n                }\r\n                // Check if CUD operations have been defined\r\n                this._hasCUDOperations =\r\n                    this._resource.generic[\"create\"] !== undefined\r\n                    || this._resource.generic[\"update\"] !== undefined\r\n                    || this._resource.generic[\"delete\"] !== undefined;\r\n                this._hasSubmitOperation = this._resource.generic[\"submit\"] !== undefined;\r\n\r\n                /* get a session object, using name of the service to look it up in the list of\r\n                 * sessions maintained by the ServicesManager\r\n                 */\r\n                if (!this._session) {\r\n                    var myservice = progress.data.ServicesManager.getService(this._resource.service.name);\r\n                    this._session = myservice._session;\r\n                    this._session._pushJSDOs(this);\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG004\", this.name));\r\n            }\r\n        }\r\n        else {\r\n            this._buffers[\"\"] = new progress.data.JSTableRef(this, \"\");\r\n        }\r\n\r\n        if (!this._session) {\r\n            throw new Error(\"JSDO: Unable to get user session for resource '\" + this.name + \"'\");\r\n        }\r\n\r\n        // Calculate _numBuffers and _defaultTableRef\r\n        for (var buf in this._buffers) {\r\n            this._buffers[buf]._parent = null;\r\n            this._buffers[buf]._children = [];\r\n            // The _relationship object is only specified for the child buffer.\r\n            // Currently it is limited to only a single relationship. ie. It does not support the\r\n            // where the child buffer is involved in more than one data-relation\r\n            this._buffers[buf]._relationship = null;\r\n            this._buffers[buf]._isNested = false;\r\n            if (!this._defaultTableRef)\r\n                this._defaultTableRef = this._buffers[buf];\r\n            this._numBuffers++;\r\n        }\r\n        if (this._numBuffers != 1)\r\n            this._defaultTableRef = null;\r\n        else {\r\n            // record is used to represent the current record for a table reference\r\n            // data corresponds to the values (JSON object) of the data\r\n            this.record = null;\r\n        }\r\n\r\n        // Define caseSensitive property at the JSDO level\r\n        if ((typeof Object.defineProperty) == 'function') {\r\n            this._caseSensitive = false;\t// caseSensitive is false by default\r\n            Object.defineProperty(\r\n                this,\r\n                \"caseSensitive\",\r\n                {\r\n                    get: function () {\r\n                        return this._caseSensitive;\r\n                    },\r\n                    set: function (value) {\r\n                        this._caseSensitive = value ? true : false;\r\n\r\n                        for (var buf in this._buffers) {\r\n                            this._buffers[buf].caseSensitive = this._caseSensitive;\r\n                        }\r\n                    },\r\n                    enumerable: true,\r\n                    writeable: true\r\n                });\r\n            this._autoSort = true;\t// autoSort is true by default\r\n            Object.defineProperty(\r\n                this,\r\n                \"autoSort\",\r\n                {\r\n                    get: function () {\r\n                        return this._autoSort;\r\n                    },\r\n                    set: function (value) {\r\n                        this._autoSort = value ? true : false;\r\n\r\n                        for (var buf in this._buffers) {\r\n                            this._buffers[buf].autoSort = this._autoSort;\r\n                        }\r\n                    },\r\n                    enumerable: true,\r\n                    writeable: true\r\n                });\r\n        }\r\n        \r\n        // Define _properties property at the JSDO level\r\n        this._properties = {};\r\n        if ((typeof Object.defineProperty) == 'function') {\r\n            Object.defineProperty( this, \r\n                                   \"this._properties\",\r\n                                   {  \r\n                                       get: function () {\r\n                                            return this._properties;\r\n                                       },\r\n                                       enumerable: false\r\n                                   }\r\n                                 );\r\n            \r\n        }\r\n\r\n\r\n        // Set schema for TableRef\r\n        if (this._resource && this._resource.fields) {\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._schema = this._resource.fields[buf];\r\n                this._buffers[buf]._primaryKeys = this._resource.primaryKeys[buf];\r\n\r\n                // Create _fields object used to validate fields as case-insensitive.\r\n                this._buffers[buf]._fields = {};\r\n                var fields = this._buffers[buf]._schema;\r\n                for (var i = 0; i < fields.length; i++) {\r\n                    this._buffers[buf]._fields[fields[i].name.toLowerCase()] = fields[i]; \r\n                    if (typeof(fields[i].origName) !== \"undefined\") {\r\n                        if ((typeof(fields[i].origName) !== \"string\")\r\n                            || (fields[i].origName.trim() === \"\")) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG504\", \r\n                                \"JSDO\", \"Field '\" + fields[i].name + \"' in resource '\" + this._resource.name + \"'\", \"origName\"));\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (this._buffers[buf]._schema && (typeof Object.defineProperty) == 'function') {\r\n                    // Add fields as properties of the TableRef object\r\n                    for (var i = 0; i < this._buffers[buf]._schema.length; i++) {\r\n                        var fieldName = this._buffers[buf]._schema[i].name,\r\n                            fieldInfo = this._buffers[buf]._schema[i];                        \r\n                        if (typeof(this._buffers[buf][fieldName]) == 'undefined') {\r\n                            this._defineProperty(buf, fieldName);\r\n                        }\r\n\t\t\t\t\t\tif (fieldInfo.type === \"array\") {\r\n\t\t\t\t\t\t\tfor (var j = 0; j < fieldInfo.maxItems; j += 1) {\r\n                                var name = fieldName + progress.data.JSDO.ARRAY_INDEX_SEPARATOR + (j + 1);\r\n                                // Skip element if a field with the same name exists                                \r\n                                // Only create property if the name is not being used\r\n                                if (!this._buffers[buf]._fields[name.toLowerCase()]) {\r\n                                    this._defineProperty(buf, name);\r\n                                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}                        \r\n                    }\r\n                }\r\n            }\r\n            // Set schema for when dataProperty is used but not specified via the catalog\r\n            if (this._defaultTableRef\r\n                && !this._defaultTableRef._schema\r\n                && this._resource.fields[\"\"]) {\r\n                this._defaultTableRef._schema = this._resource.fields[\"\"];\r\n            }\r\n        }\r\n        else {\r\n            if (this._defaultTableRef)\r\n                this._defaultTableRef._schema = [];\r\n        }\r\n\r\n        // Set isNested property\r\n        if (this._numBuffers > 1) {\r\n            for (var buf in this._buffers) {\r\n                var fields = [];\r\n                var found = false;\r\n                for (var i = 0; i < this._buffers[buf]._schema.length; i++) {\r\n                    var field = this._buffers[buf]._schema[i];\r\n\r\n                    if (field.items\r\n                        && field.type == \"array\" && field.items.$ref) {\r\n                        if (this._buffers[field.name]) {\r\n                            found = true;\r\n                            this._buffers[field.name]._isNested = true;\r\n                        }\r\n                    }\r\n                    else\r\n                        fields.push(field);\r\n                }\r\n                // Replace list of fields - removing nested datasets from schema\r\n                if (found)\r\n                    this._buffers[buf]._schema = fields;\r\n            }\r\n        }\r\n\r\n        // Process relationships\r\n        if (this._resource && this._resource.relations) {\r\n            for (var i = 0; i < this._resource.relations.length; i++) {\r\n                var relationship = this._resource.relations[i];\r\n\r\n                // Set relationship information ignoring self-referencing (recursive) relationships\r\n                if (relationship.childName\r\n                    && relationship.parentName\r\n                    && (relationship.childName !== relationship.parentName)) {\r\n                    // Set casing of fields in relationFields to be the same as in the schema\r\n                    if (relationship.relationFields instanceof Array) {\r\n                        for (var j = 0; j < relationship.relationFields.length; j++) {\r\n                            var fieldName;\r\n                            var field;\r\n                            if (this._buffers[relationship.parentName]._fields) {\r\n                                fieldName = relationship.relationFields[j].parentFieldName;\r\n                                field=this._buffers[relationship.parentName]._fields[fieldName.toLowerCase()];\r\n                                if (field) {\r\n                                    relationship.relationFields[j].parentFieldName = field.name;\r\n                                }\r\n                                else\r\n                                    throw new Error(msg.getMsgText(\"jsdoMSG010\", fieldName));\r\n                            }\r\n                            if (this._buffers[relationship.childName]._fields) {\r\n                                fieldName = relationship.relationFields[j].childFieldName;\r\n                                field=this._buffers[relationship.childName]._fields[fieldName.toLowerCase()];\r\n                                if (field) {\r\n                                    relationship.relationFields[j].childFieldName = field.name;\r\n                                }\r\n                                else\r\n                                    throw new Error(msg.getMsgText(\"jsdoMSG010\", fieldName));\r\n                            }\r\n                        }\r\n                    }\r\n                    this._buffers[relationship.childName]._parent = relationship.parentName;\r\n                    this._buffers[relationship.childName]._relationship = relationship.relationFields;\r\n                    this._buffers[relationship.parentName]._children.push(relationship.childName);\r\n                }\r\n            }\r\n        }      \r\n        \r\n        this._getDefaultValue = function (field) {\r\n            var defaultValue,\r\n                t, m, d,\r\n                isDate = false;\r\n\r\n            if ((field.type === \"string\")\r\n                && field.format\r\n                && (field.format.indexOf(\"date\") !== -1)\r\n                && (field[\"default\"])) {\r\n                isDate = true;\r\n            } else if ((field.type === \"array\")\r\n                       && field.ablType\r\n                       && (field.ablType.indexOf(\"DATE\") != -1)\r\n                       && (field[\"default\"])) {\r\n                isDate = true;\r\n            } else {\r\n                defaultValue = field[\"default\"];\r\n            }\r\n            \r\n            if (isDate) {\r\n                switch (field[\"default\"].toUpperCase()) {\r\n                    case \"NOW\":\r\n                        defaultValue = new Date().toISOString();\r\n                        break;\r\n                    case \"TODAY\":\r\n                        t = new Date();\r\n                        m = String((t.getMonth() + 1));\r\n                        if (m.length === 1) {\r\n                            m = '0' + m;\r\n                        }\r\n                        d = String((t.getDate()));\r\n                        if (d.length === 1) {\r\n                            d = '0' + d;\r\n                        }\r\n                        defaultValue = t.getFullYear() + '-' + m + '-' + d;\r\n                        break;\r\n                    default:\r\n                        defaultValue = field[\"default\"];\r\n                }\r\n            }\r\n            \r\n            return defaultValue;\r\n        };\r\n        \r\n        // Method to calculate the element information of an array given the name, index, and value\r\n        // Parameters:\r\n        // arrayFieldName The name o the field\r\n        // index Optional parameter - if index is null/undefined the name of the element is the prefix\r\n        // value Optional parameter\r\n        this._getArrayField = function (arrayFieldName, index, value) {\r\n            var element = {};\r\n            // ABL arrays are 1-based\r\n            element.name = arrayFieldName + progress.data.JSDO.ARRAY_INDEX_SEPARATOR + ((index >= 0) ? (index + 1) : \"\");\r\n            element.value = value ? value[index] : undefined;\r\n            return element;\r\n        };\r\n\r\n        this.isDataSet = function () {\r\n            return this._dataSetName ? true : false;\r\n        };\r\n\r\n        /* handler for invoke operation complete */\r\n        this._invokeComplete = function (jsdo, success, request) {\r\n            // only fire on async requests\r\n            if (request.async && request.fnName) {\r\n                jsdo.trigger('afterInvoke', request.fnName, jsdo, success, request);\r\n            }\r\n            \r\n            if (request.deferred) {\r\n                if (success) {\r\n                    request.deferred.resolve(jsdo, success, request);\r\n                }\r\n                else {\r\n                    request.deferred.reject(jsdo, success, request);\r\n                }\r\n            }            \r\n        };\r\n\r\n        /* handler for invoke operation success */\r\n        this._invokeSuccess = function (/* jsdo, success, request */) {\r\n            // do nothing\r\n        };\r\n\r\n        /* handler for invoke operation error */\r\n        this._invokeError = function (/* jsdo, success, request */) {\r\n            // do nothing\r\n        };\r\n\r\n        /*\r\n         * Performs an HTTP request using the specified parameters.  This is \r\n         * used to perform remote calls for the JSDO for operations defined.\r\n         * \r\n         */\r\n        this._httpRequest = function (xhr, method, url, reqBody, request) {\r\n            \r\n            function afterOpenRequest() {\r\n                var input = null;\r\n                if (reqBody) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n                    input = JSON.stringify(reqBody);\r\n                }\r\n\r\n                try {\r\n                    xhr.send(input);\r\n                } catch (e) {\r\n                    request.success = false;\r\n                    request.exception = e;\r\n                    // let Session check for online/offline\r\n                    xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n                }\r\n            }\r\n\r\n            // if xhr wasn't passed we'll create our own since this is an invoke operation\r\n            // if xhr is passed, then it is probably a CRUD operation which is setup with XHR\r\n            // in call to session\r\n            if (!xhr) {\r\n                xhr = new XMLHttpRequest();\r\n\r\n                // only setup the callback handlers if we're responsible for creating the \r\n                // xhr call which happens on invoke operations...which is the normal case\r\n                // the CRUD operations setup their own callbacks and they have their own\r\n                // event handlers so we don't use them here.\r\n                xhr.onCompleteFn = this._invokeComplete;\r\n                xhr.onSuccessFn = this._invokeSuccess;\r\n                xhr.onErrorFn = this._invokeError;\r\n                xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n\r\n                // for invokes we always fire the invoke when doing async\r\n                if (request.async && request.fnName) {\r\n                    this.trigger('beforeInvoke', request.fnName, this, request);\r\n                }\r\n\r\n                // For Invoke operations, wrap reqBody in a request object\r\n                // This is not required for CRUD operations since the whole\r\n                // reqBody is mapped to the parameter\r\n                if (reqBody) {\r\n                    if (this._resource && this._resource.service) {\r\n                        var useRequest = this._resource.service.useRequest;\r\n                        if (this._resource.service.settings \r\n                            && this._resource.service.settings.useRequest !== undefined) {\r\n                            useRequest = this._resource.service.settings.useRequest;\r\n                        }\r\n                        if (useRequest) {\r\n                            reqBody = {request: reqBody};\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            xhr.request = request;\r\n            xhr.jsdo = this;\r\n            request.jsdo = this;\r\n            request.xhr = xhr;\r\n\r\n            this._session._openRequest(xhr, method, url, request.async, afterOpenRequest);\r\n\r\n            return request;  // Note: for the async case, this does not give us exactly the same behavior\r\n                             // as when afterOpenRequest is called synchronously, because this returns\r\n                             // request before its xhr has had its open() called\r\n        };\r\n\r\n\r\n        // This method currently is just used by the JSDOReadService.\r\n        // It returns data in its non-nested (default) format\r\n        this._getDataObject = function () {\r\n            var dataObject = {};\r\n            if (this._dataSetName) {\r\n                dataObject[this._dataSetName] = {};\r\n\r\n                var oldUseRelationships = this.useRelationships;\r\n                // Turn off useRelationships so that getData() returns all the records\r\n                try {\r\n                    this.useRelationships = false;\r\n                    for (var buf in this._buffers) {\r\n                        dataObject[this._dataSetName][buf] = this._buffers[buf].getData();\r\n                    }\r\n                }\r\n                finally {\r\n                    // Restore useRelationships\r\n                    this.useRelationships = oldUseRelationships;\r\n                }\r\n            }\r\n            else {\r\n                if (this._dataProperty) {\r\n                    dataObject[this._dataProperty] = this.getData();\r\n                }\r\n                else\r\n                    return this.getData(); // Array\r\n            }\r\n            return dataObject;\r\n        };\r\n\r\n\r\n        // This method currently is just used by the JSDOReadService.\r\n        // Now that the JSDO Services support nested data, we want to return data nested for those \r\n        // relationships that are marked nested. \r\n        //\r\n        // This method returns a data object containing the nested data.  \r\n        // If a parent row is involved in nested relationship, \r\n        // then references to its child rows are added to the parent row in a child table array \r\n        // (providing the nested format).\r\n        // We are using the internal jsdo _data arrays, \r\n        // and adding a child table array to each parent row that has children.\r\n        // Once the caller is done with the nested data, \r\n        // they can call jsdo._unnestData() which removes these child table references\r\n        // \r\n        this._getDataObjectAsNested = function () {\r\n            var dataObject = {};\r\n            if (this._dataSetName) {\r\n                dataObject[this._dataSetName] = {};\r\n\r\n                try {\r\n                    // First walk thru all buffers. We need to determine if any of the buffers are\r\n                    // involved in a nested relationship. If so, we want to return the child's \r\n                    // data in nested format.\r\n                    for (var buf in this._buffers) {\r\n                        var bufObj = this._buffers[buf];\r\n\r\n\r\n                        // If this is a child table, and its involved in a nested relationship,\r\n                        // then just skip.\r\n                        // This table's data will be nested within each parent row when we \r\n                        // process the parent table.\r\n                        if (bufObj._isNested) continue;\r\n\r\n                        this._nestChildren = false;  // default to false\r\n\r\n                        // If table has children, see if any relationship is NESTED\t\r\n                        if (bufObj._children.length > 0) {\r\n                            for (var i = 0; i < bufObj._children.length; i++) {\r\n                                var childBufObj = this._buffers[bufObj._children[i]];\r\n\r\n                                if (childBufObj._isNested) {\r\n                                    this._nestChildren = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        dataObject[this._dataSetName][buf] = this._buffers[buf].getData();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG000\", e.message));\r\n                }\r\n                finally {\r\n                    // Set back to default avlue\r\n                    this._nestChildren = false;\r\n                }\r\n            }\r\n            else {\r\n                if (this._dataProperty) {\r\n                    dataObject[this._dataProperty] = this.getData();\r\n                }\r\n                else\r\n                    return this.getData(); // Array\r\n            }\r\n            return dataObject;\r\n        };\r\n\r\n\r\n        // This method is used in conjunction with _getDataObjectAsNested() in the JSDOReadService.\r\n        // _getDataObjectAsNested() adds arrays of child row references to their parent rows.\r\n        // Once the JSDOReadService has done its data mapping, we need to remove the references since\r\n        // internally the JSDO stores its data in unnested format.\r\n        this._unnestData = function () {\r\n\r\n            if (this._dataSetName) {\r\n                var parentRecord;\r\n                var bufObj;\r\n                var childBufObj;\r\n\r\n                // First walk thru all buffers. We need to determine if any of the buffers are parent\r\n                // buffers involved in a nested relationship. If so, then we'll look for any child row arrays\r\n                // to delete\r\n                for (var buf in this._buffers) {\r\n                    bufObj = this._buffers[buf];\r\n\r\n                    // If we know this table has at least one nested child table, we'll walk thru\r\n                    // all its rows to determine if the rows have any child row arrays.\r\n                    // It's more efficient to just walk thru the parent row list once, so we'll\r\n                    // check for all child row arrays here\r\n\r\n                    if (bufObj._hasNestedChild()) {\r\n                        // Now must walk thru the parent rows and delete any child row arrays\r\n                        for (var i = 0; i < bufObj._data.length; i++) {\r\n                            parentRecord = bufObj._data[i];\r\n\r\n                            for (var j = 0; j < bufObj._children.length; j++) {\r\n                                childBufObj = this._buffers[bufObj._children[j]];\r\n\r\n                                if (parentRecord[childBufObj._name]) {\r\n                                    delete parentRecord[childBufObj._name];\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                } // end for\r\n            }\r\n        };\r\n\r\n\r\n        this._recToDataObject = function (record, includeChildren) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef._recToDataObject(record, includeChildren);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"_recToDataObject()\"));\r\n        };\r\n\r\n        this._recFromDataObject = function (dataObject) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef._recFromDataObject(dataObject);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"_recFromDataObject()\"));\r\n        };\r\n\r\n        this.add = function (obj) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.add(obj);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"add() or create()\"));\r\n        };\r\n        \r\n        // Alias for add() method\r\n        this.create = this.add;\r\n        \r\n        this.hasData = function () {\r\n            for (var buf in this._buffers) {\r\n                if (this._buffers[this._buffers[buf]._name].hasData())\r\n                    return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        this.getData = function (params) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.getData(params);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"getData()\"));\r\n        };\r\n\r\n        this.getSchema = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.getSchema();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"getSchema()\"));\r\n        };\r\n\r\n        this.findById = function (id) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.findById(id);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"findById()\"));\r\n        };\r\n\r\n        this._convertType = function (value, type, itemType) {\r\n            if ((typeof value != 'string') || (type === null)) return value;\r\n            var result = value;\r\n            try {\r\n                if (type == 'array') {\r\n                    var result = [];\r\n                    \r\n                    value = value.slice(1, value.length - 1);\r\n                    var elements = value.split(',');\r\n                    var convertItem = (itemType && (itemType != 'string'));\r\n                    for (var i = 0; i < elements.length; i++) {\r\n                       result[i] = convertItem ? this._convertType(elements[i], itemType, null) : elements[i];\r\n                    }\r\n                }\r\n                else if (type == 'integer') {\r\n                    result = parseInt(value);\r\n                }\r\n                else if (type == 'number') {\r\n                    result = parseFloat(value);\r\n                }\r\n                else {\r\n                    result = value;\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG000\", \r\n                    \"Error converting string to native type: \" + e.message));\r\n            }\r\n            return result;\r\n        };\r\n\r\n        this.assign = function (values) {\r\n            if (this._defaultTableRef) {\r\n                return this._defaultTableRef.assign(values);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG001\", \"assign() or update()\"));\r\n        };\r\n\r\n        // Alias for assign() method\r\n        this.update = this.assign;\r\n\r\n        this.remove = function () {\r\n            if (this._defaultTableRef) {\r\n                return this._defaultTableRef.remove();\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG001\", \"remove()\"));\r\n        };\r\n\r\n        this.getId = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.getId();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"getId()\"));\r\n        };\r\n\r\n\t\t// getErrors() - JSDO\r\n\t\tthis.getErrors = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.getErrors();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"getErrors()\"));\r\n\t\t};\r\n\r\n        this.getErrorString = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.getErrorString();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"getErrorString()\"));\r\n        };\r\n\r\n        /*\r\n         * Finds a record in the JSDO memory using the specified function to determine the record.\r\n         */\r\n        this.find = function (fn) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.find(fn);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"find()\"));\r\n        };\r\n\r\n        this.foreach = function (fn) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.foreach(fn);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"foreach()\"));\r\n        };\r\n\r\n        this.setSortFields = function (sortFields) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.setSortFields(sortFields);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"setSortFields()\"));\r\n        };\r\n\r\n        this.setSortFn = function (fn) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.setSortFn(fn);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"setSortFn()\"));\r\n        };\r\n\r\n        this.sort = function (arg1) {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.sort(arg1);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"sort()\"));\r\n        };\r\n\r\n\t\tthis._clearErrors = function () {\r\n\t\t\tthis._lastErrors = [];\r\n            for (var buf in this._buffers) {\r\n\t\t\t\tthis._buffers[buf]._lastErrors = [];\r\n\t\t\t}\r\n\t\t};\r\n\r\n        /**\r\n         * setAllRecordsRejected\r\n         * \r\n         * Sets _allRecordsRejected flag to indicate whether all records have been rejected\r\n         * in a saveChanges() call.\r\n         * If changes are specified as an array, the changes are used to calculate the flag.\r\n         * \r\n         * @param {*} param - Array with changes or boolean with value\r\n         */\r\n\t\tthis._setAllRecordsRejected = function (param) {\r\n            var changes,\r\n                hasErrors,\r\n                hasRejected,\r\n                hasCommittedRecords,\r\n                i;\r\n\r\n            // Note: This function is a single one-stop convenient function to set             \r\n            // _allRecordsRejected and _someRecordsRejected.\r\n            // This logic can be optimized by setting the flags while processing the response.\r\n            if (param instanceof Object) {\r\n                if (param instanceof Array) {\r\n                    changes = param;\r\n                    hasErrors = false;\r\n\r\n                    this._allRecordsRejected = false;\r\n                    this._someRecordsRejected = false;\r\n\r\n                    for (var buf in this._buffers) {\r\n                        if (this._buffers[buf]._lastErrors.length > 0) {\r\n                            hasErrors = true;\r\n                        }\r\n                    }\r\n                    if (hasErrors) {\r\n                        this._allRecordsRejected = true;\r\n                        this._someRecordsRejected = true;\r\n\r\n                        for (i = 0; i < changes.length; i += 1) {\r\n                            if (changes[i].record && !changes[i].record.data._rejected) {\r\n                                this._allRecordsRejected = false;\r\n                                return;\r\n                            }\r\n                        }\r\n                    } else if (changes.length > 0) {\r\n                        this._allRecordsRejected = true;\r\n                        this._someRecordsRejected = false;\r\n                        hasCommittedRecords = false;\r\n\r\n                        for (i = 0; i < changes.length; i += 1) {\r\n                            if (changes[i].record) {\r\n                                if (changes[i].record.data._rejected) {\r\n                                    this._someRecordsRejected = true;\r\n                                } else {\r\n                                    hasCommittedRecords = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (hasCommittedRecords && !this._someRecordsRejected) {\r\n                            this._allRecordsRejected = false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (param.operations instanceof Array) {\r\n                        if (param.operations.length > 0\r\n                            && !param.operations[0].success) {\r\n                            // First operation failed\r\n                            this._allRecordsRejected = true;\r\n                            this._someRecordsRejected = true;\r\n\r\n                            for (i = 0; i < param.operations.length; i += 1) {\r\n                                if (param.operations[i].success) {\r\n                                    this._allRecordsRejected = false;\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // Not all operations were rejected\r\n                            this._allRecordsRejected = false;\r\n                            this._someRecordsRejected = false;                            \r\n\r\n                            for (i = 0; i < param.operations.length; i += 1) {\r\n                                if (!param.operations[i].success) {\r\n                                    this._someRecordsRejected = true;\r\n                                    return;\r\n                                }\r\n                            }                            \r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Possible values: true, false, undefined\r\n                this._allRecordsRejected = param;\r\n                this._someRecordsRejected = param;\r\n            }\r\n\t\t};\r\n\r\n        /*\r\n         * Loads data from the HTTP resource.\r\n         */\r\n        this.fill = function () {\r\n            var objParam,\r\n                promise,\r\n\t\t\t\tproperties,\r\n\t\t\t\tmapping;\r\n\r\n            // Clear errors before sending request                \r\n\t\t\tthis._clearErrors();\r\n\r\n            // Reset _allRecordsRejected\r\n            this._setAllRecordsRejected(undefined);\r\n\r\n            // Process parameters\r\n            if (arguments.length !== 0) {\r\n                // Call to fill() has parameters\r\n                if (typeof(arguments[0]) == 'function') {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", \"fill() or read()\"));                \r\n                }\r\n\r\n                properties = this.getMethodProperties(\"read\");\r\n                \r\n                // Get plugin if mappingType is not undefined, null, or \"\"\r\n                if (properties && properties.mappingType) {\r\n                    mapping = progress.data.PluginManager.getPlugin(properties.mappingType);\r\n                    if (!mapping) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG118\", properties.mappingType));\t\t\r\n                    }\r\n                }\r\n\r\n                // fill( string);\r\n                var filter;\r\n                if (arguments[0] === null || arguments[0] === undefined) {\r\n                    filter = \"\";\r\n                }\r\n                else if (typeof(arguments[0]) == \"string\") {\r\n                    filter = arguments[0];\r\n\t\t\t\t\tobjParam = {filter: filter};     \r\n\t\t\t\t}\r\n                else if (typeof(arguments[0]) == \"object\") {\r\n                    // options \r\n                    // ablFilter, id, top, skip, sort\r\n\t\t\t\t\t\r\n                    // Use plugin if mappingType is not undefined, null, or \"\"\r\n\t\t\t\t\tif (mapping) {\r\n\t\t\t\t\t\tif (typeof(mapping.requestMapping) === \"function\") {\r\n\t\t\t\t\t\t\tobjParam = mapping.requestMapping(this, arguments[0], { operation: \"read\" });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tobjParam = arguments[0];\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n                        if (properties.capabilities) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG119\"));\r\n                        }\r\n\t\t\t\t\t\tobjParam = arguments[0];\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n                }\r\n                else {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG025\", \"JSDO\", \"fill() or read()\"));\r\n                }                  \r\n            }\r\n            else {\r\n                // fill();\t\t\t\r\n                objParam = null;\r\n            }\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            var request = {\r\n                xhr: xhr,\r\n                jsdo: this,\r\n                objParam: objParam\r\n            };\r\n\r\n            xhr.request = request;\r\n            xhr.jsdo = this;\r\n\r\n            xhr.onSuccessFn = this._fillSuccess;\r\n            xhr.onErrorFn = this._fillError;\r\n            xhr.onCompleteFn = this._fillComplete;\r\n            xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n\r\n            this.trigger(\"beforeFill\", this, request);\r\n\r\n            if (this._resource) {\r\n                if (typeof(this._resource.generic.read) == \"function\") {\r\n                    xhr.objParam = objParam;\r\n                    this._resource.generic.read.call(this, xhr, this._async);\r\n                    if (xhr.request.deferred) {\r\n                        promise = xhr.request.deferred.promise();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error(\"JSDO: READ operation is not defined.\");\r\n                }\r\n            }\r\n            else {                \r\n                // Old approach to call READ\r\n                this._session._openRequest(xhr, 'GET', this.url, this._async);\r\n                try {\r\n                    xhr.send(null);\r\n                }\r\n                catch (e) {\r\n                    request.exception = e;\r\n                    // get the Client Context ID (AppServer ID)\r\n                    xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n                }\r\n            }\r\n\t\t\t\r\n\t\t\t// This is the scenario where the read.call did not reach server. i.e.,\r\n            // some problem in between making successful call to server and we are \r\n            // completing the fill() operation with necessary cleanup operations\r\n            if (request.success == false && request.exception) {\r\n                if ((typeof xhr.onErrorFn) == 'function') {\r\n                    xhr.onErrorFn(xhr.jsdo, request.success, request);\r\n                }\r\n\r\n                // get the Client Context ID (AppServer ID)\r\n                xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n\r\n                if ((typeof xhr.onCompleteFn) == 'function') {\r\n                    xhr.onCompleteFn(xhr.jsdo, request.success, request);\r\n                }\r\n            }\r\n\r\n            return promise;\r\n        };\r\n\r\n        // Alias for fill() method\r\n        this.read = this.fill;\r\n\r\n        /*\r\n         * Clears all data (including any pending changes) for each buffer in JSDO\r\n         */\r\n        this._clearData = function () {\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._clearData();\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Executes a CRUD operation using the built-in API.\r\n         */\r\n        this._execGenericOperation = function (operation, objParam, request, \r\n                                               onCompleteFn, onSuccessFn, onErrorFn) {\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            request.xhr = xhr;\r\n            request.jsdo = this;\r\n            request.objParam = objParam;\r\n            request.operation = operation;\r\n            xhr.jsdo = this;\r\n            xhr.onCompleteFn = onCompleteFn;\r\n            xhr.onSuccessFn = onSuccessFn;\r\n            xhr.onErrorFn = onErrorFn;\r\n            xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n            xhr.request = request;\r\n            \r\n            this._convertRequestData(objParam);\r\n\r\n            var operationStr;\r\n            switch (operation) {\r\n                case progress.data.JSDO._OP_READ:\r\n                case progress.data.JSDO._OP_CREATE:\r\n                case progress.data.JSDO._OP_UPDATE:\r\n                case progress.data.JSDO._OP_DELETE:\r\n                case progress.data.JSDO._OP_SUBMIT:\r\n                    operationStr = PROGRESS_JSDO_OP_STRING[operation];\r\n                    break;\r\n                default:\r\n                    throw new Error(\"JSDO: Unexpected operation \" + operation + \" in HTTP request.\");\r\n            }\r\n\r\n            if (this._resource) {\r\n                if (typeof(this._resource.generic[operationStr]) == \"function\") {\r\n                    xhr.objParam = objParam;\r\n                    this._resource.generic[operationStr](xhr, this._async);\r\n                }\r\n                else {\r\n                    // \"JSDO: {1} operation is not defined.\"\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG046\", operationStr.toUpperCase() ));\r\n                }\r\n            }\r\n        };\r\n        \r\n        // Determines if any fields need a conversion when data sent to backend\r\n        this._initConvertForServer = function () {\r\n            var i, buf, schema;\r\n            \r\n            // If set, we're good. Field lists for conversion have already been created\r\n            if (this._convertForServer !== undefined) {\r\n                return;\r\n            }\r\n            \r\n            this._convertForServer = false;      \r\n            for (buf in this._buffers) {    \r\n                schema = this._buffers[buf].getSchema();\r\n                this._buffers[buf]._convertFieldsForServer = [];\r\n                this._buffers[buf]._convertForServer = false;\r\n                \r\n                // Check if any fields need conversion\r\n                for (i = 0; i < schema.length; i++) {\r\n                    if (schema[i].ablType && this._ablTypeNeedsConversion(schema[i].ablType)) {\r\n                        this._buffers[buf]._convertFieldsForServer.push({name: schema[i].name, \r\n                                                                         ablType: schema[i].ablType});\r\n                    }\r\n                }\r\n                if (this._buffers[buf]._convertFieldsForServer.length > 0) {\r\n                    this._convertForServer = true;\r\n                    this._buffers[buf]._convertForServer = true;\r\n                }\r\n            } \r\n        };\r\n        \r\n        this._convertRequestData = function (objParam) {\r\n            var buf,\r\n                beforeData; \r\n                \r\n            if (this._convertForServer === false) {\r\n                return;\r\n            }\r\n            \r\n            // We know at least one table has a field to convert \r\n            for (buf in this._buffers) { \r\n                if (this._buffers[buf]._convertForServer) {\r\n                    if (objParam[this._dataSetName]) {\r\n                        // First convert after-table\r\n                        if (objParam[this._dataSetName][buf]) {\r\n                            this._convertTableData(this._buffers[buf], objParam[this._dataSetName][buf]);\r\n                        }\r\n                        \r\n                        // Now let's convert before-image data \r\n                        beforeData = objParam[this._dataSetName][\"prods:before\"];\r\n                        if (beforeData && beforeData[buf]) {\r\n                            this._convertTableData(this._buffers[buf], beforeData[buf]); \r\n                        }   \r\n                    }\r\n                    // This is for case where saveChanges(false) is called with no before-image data\r\n                    else if (objParam[buf]) { \r\n                        this._convertTableData(this._buffers[buf], objParam[buf]);\r\n                    }\r\n                }\r\n            }                                                                        \r\n        };\r\n        \r\n        this._convertTableData = function (tableRef, tableData) {\r\n            var i;\r\n            \r\n            for (i = 0; i < tableData.length; i++) {\r\n                this._convertRowData(tableRef, tableData[i]);\r\n            }\r\n        };\r\n         \r\n        this._convertRowData = function (tableRef, record) {    \r\n            var i,\r\n                field;\r\n            \r\n            for (i = 0; i < tableRef._convertFieldsForServer.length; i += 1) {\r\n                field = tableRef._convertFieldsForServer[i];\r\n                record[field.name] = this._convertField(record[field.name], field.ablType);\r\n            }\r\n        };\r\n        \r\n        this._convertField = function (value, ablType) {\r\n            var result;\r\n            \r\n            if (value === undefined || value === null) {\r\n                return value;\r\n            }\r\n            \r\n            if (value instanceof Array) {\r\n                var resultArray = [];\r\n                for (var i = 0; i < value.length; i++) {\r\n                    resultArray[i] = this._convertField(value[i], ablType);     \r\n                }\r\n                return resultArray;\r\n            }\r\n            \r\n            try {\r\n                switch (ablType.toUpperCase()) {\r\n                    case \"DATE\":\r\n                    case \"DATETIME\":\r\n                        if (typeof value === 'string') {\r\n                            result = value;\r\n                        }\r\n                        else if (value instanceof Date) {\r\n                            result = this._convertDate(value, ablType.toUpperCase());\r\n                        }\r\n                        else {\r\n                            throw new Error(\"Unexpected value for  \" + ablType.toUpperCase() + \".\");\r\n                        }\r\n                        break;\r\n                    default:\r\n                        result = value;\r\n                        break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG000\", \r\n                    \"Error in _convertField for value: \" + value + \". \" + e.message));\r\n            }\r\n            \r\n            return result;\r\n        };\r\n        \r\n        // Convert Date object to string for DATE and DATETIME ablTypes\r\n        // Not necessary to do for DATETIME-TZ since JSON.stringify() will do correct conversion \r\n        this._convertDate = function (value, ablType) {\r\n            var result = value;\r\n            \r\n            // DATE format should be in ISO 8601 format yyyy-mm-dd\r\n            // DATETIME format should be in ISO 8601 format yyyy-mm-ddThh:mm:ss.sss\r\n            if (ablType === \"DATE\" || ablType === \"DATETIME\") { \r\n                result =  progress.util._pad(value.getFullYear(), 4) + '-' + \r\n                          progress.util._pad(value.getMonth() + 1) + '-' + \r\n                          progress.util._pad(value.getDate());\r\n                    \r\n                if (ablType === \"DATETIME\") {\r\n                    result =  result + \"T\" + \r\n                         progress.util._pad(value.getHours()) + \":\" + \r\n                         progress.util._pad(value.getMinutes()) + \":\" + \r\n                         progress.util._pad(value.getSeconds()) + \".\" + \r\n                         progress.util._pad(value.getMilliseconds(), 3);\r\n                }              \r\n            }\r\n            \r\n             return result;\r\n        };\r\n        \r\n        \r\n        this._ablTypeNeedsConversion = function (ablType) {\r\n            \r\n            var needsConversion = false;\r\n            \r\n            switch (ablType.toUpperCase()) {\r\n                case \"DATE\":\r\n                case \"DATETIME\":\r\n                    needsConversion =  true;\r\n                    break;\r\n            }\r\n            \r\n            return needsConversion;     \r\n        };\r\n\r\n           \r\n\r\n        this._undefWorkingRecord = function () {\r\n            // Set record property\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._setRecord(null);\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Saves changes in the JSDO. Save any outstanding changes for CREATES, UPDATE, and DELETEs\r\n         */\r\n        this.saveChanges = function (useSubmit) {\r\n            var promise,\r\n                request;\r\n\r\n            if (useSubmit === undefined) {\r\n                useSubmit = false;\r\n            }\r\n            else if (typeof(useSubmit) != 'boolean') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG025\", \"JSDO\", \"saveChanges()\"));\r\n            }\r\n            \r\n            // _fireCUDTriggersForSubmit() needs to know how saveChanges() was called\r\n            this._useSubmit = useSubmit; \r\n\r\n            // confirm the availability of the operations required for executing this saveChanges call\r\n            // (_checkThatJSDOHasRequiredOperations() throws an error if there's a missing operation,\r\n            // which this method deliberately allows to bubble up to the caller)\r\n            this._checkThatJSDOHasRequiredOperations(); \r\n            \r\n            // Don't allow Submit with just a temp-table if autoApplyChanges is true\r\n            if ( !this._dataSetName && this._useSubmit && this.autoApplyChanges) {\r\n                  /* error message: \"autoApplyChanges is not supported for submit with a temp-table */\r\n                  /* Use jsdo.autoApplyChanges = false.\" */\r\n                  throw new Error(msg.getMsgText(\"jsdoMSG124\")); \r\n            }\r\n            \r\n            // Check if any data being sent to server needs to first be converted\r\n            this._initConvertForServer();\r\n            \r\n            // Clear errors before sending request\r\n\t\t\tthis._clearErrors();\r\n\r\n            // Reset _allRecordsRejected\r\n            this._setAllRecordsRejected(undefined);\r\n\r\n            request = {\r\n                jsdo: this\r\n            };\r\n\r\n            this.trigger(\"beforeSaveChanges\", this, request);\r\n\r\n            if (useSubmit) {\r\n                /* Pass in request object. \r\n                 * Need to use same request object so before and after saveChanges events \r\n                 * are in sync in JSDO Submit Service. */\r\n                promise = this._syncDataSetForSubmit(request);\r\n            }\r\n            else if (this._dataSetName) {\r\n                promise = this._syncDataSetForCUD();\r\n            }\r\n            else {\r\n                promise = this._syncSingleTable();\r\n            }\r\n            \r\n            return promise;\r\n        };\r\n\r\n        /* \r\n         * _checkThatJSDOHasRequiredOperations\r\n            \r\n           This method is intended to be used by the saveChanges() method to determine whether \r\n           the JSDO's resource definition includes the operations necessary for executing the\r\n           types of changes that are pending in the JSDO. It checks for Submit if saveChanges\r\n           was called with useSubmit set to true, otherwise it checks whatever CUD operations are\r\n           pending. \r\n           The JSDO's internal _useSubmit property must be set correctly before this method \r\n           is called\r\n         */\r\n        this._checkThatJSDOHasRequiredOperations = function( ) {\r\n            var checkedDelete = false,\r\n                checkedCreate = false,\r\n                checkedUpdate = false,\r\n                buf,\r\n                tableRef;\r\n\r\n            if (!this._hasCUDOperations && !this._hasSubmitOperation) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG026\"));\r\n            }\r\n\r\n            // Validate the use of Submit\r\n            if (this._useSubmit) {\r\n                if (!this._hasSubmitOperation) {\r\n                    // \"JSDO: {1} operation is not defined.\";  \r\n                    throw new Error(msg.getMsgText(\"jsdoMSG046\", \"SUBMIT\"));\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            if (!this._resource) {\r\n                // Need the _resource property to do the validation. If not present, just return \r\n                // and let execution run as normal (presumably there will be an error)\r\n                return;\r\n            }\r\n           \r\n            // Find the pending operations and make sure they are defined\r\n            for (buf in this._buffers) {\r\n\r\n                tableRef = this._buffers[buf];\r\n\r\n                if (!checkedDelete && tableRef._deleted.length > 0) {\r\n                    this._confirmOperationExists( progress.data.JSDO._OP_DELETE );\r\n                    checkedDelete = true;\r\n                }\r\n                \r\n                if (!checkedCreate && tableRef._added.length > 0) {\r\n                    this._confirmOperationExists( progress.data.JSDO._OP_CREATE );\r\n                    checkedCreate = true;\r\n                }\r\n\r\n                if (!checkedUpdate && Object.keys(tableRef._changed).length > 0) {\r\n                    this._confirmOperationExists( progress.data.JSDO._OP_UPDATE );  \r\n                    checkedUpdate = true;\r\n                }\r\n                \r\n                if ( checkedDelete && checkedCreate && checkedUpdate ) {\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        };\r\n\r\n        // Determines whether a given operation is defined by the JSDO's resource\r\n        // throws an error if it's not defined\r\n        this._confirmOperationExists = function(operation) {\r\n            var operationStr = PROGRESS_JSDO_OP_STRING[operation];\r\n            if (typeof(this._resource.generic[operationStr]) !== \"function\") {\r\n                // \"JSDO: {1} operation is not defined.\"\r\n                throw new Error(msg.getMsgText(\"jsdoMSG046\", operationStr.toUpperCase() ));\r\n            }\r\n        };\r\n        \r\n        this.invoke = function (name, object) {\r\n            var request = this[name](object);\r\n            if (request.deferred) {\r\n                return request.deferred.promise();\r\n            }\r\n            \r\n            return undefined;\r\n        };\r\n\r\n        /*\r\n         * Synchronizes changes for a TableRef\r\n         *\r\n         * @param operation\t\tHTTP operation to be performed\r\n         * @param tableRef\t\tHandle to the TableRef\r\n         * @param batch         Optional. batch information associated with the sync operation. \r\n         *                      If not specified a new one will be created.  Used for saving datasets.\r\n         */\r\n        this._syncTableRef = function (operation, tableRef, batch) {\r\n            var rowData,\r\n                requestData,\r\n                jsonObject;\r\n            \r\n            if (tableRef._visited) return;\r\n            tableRef._visited = true;\r\n\r\n            //ensure batch object is sane \r\n            if (!batch) {\r\n                batch = {\r\n                    operations: []\r\n                };\r\n            } else if (!batch.operations) {\r\n                batch.operations = [];\r\n            }\r\n\r\n            // Before children\r\n            // Create parent records before children\r\n            switch (operation) {\r\n                case progress.data.JSDO._OP_CREATE:\r\n                    for (var i = 0; i < tableRef._added.length; i++) {\r\n                        var id = tableRef._added[i];\r\n                        var jsrecord = tableRef._findById(id, false);\r\n\r\n                        if (!jsrecord) continue;\r\n                        if (tableRef._processed[id]) continue;\r\n                        tableRef._processed[id] = jsrecord.data;\r\n                        \r\n                        rowData = {};\r\n                        jsonObject = {};\r\n                        \r\n                        // Make copy of row data, in case we need to convert data for backend..\r\n                        tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n\r\n                        if (this.isDataSet()) {\r\n                            if (this._useBeforeImage(\"create\")) {\r\n                                jsonObject[this._dataSetName] = {};\r\n                                var dataSetObject = jsonObject[this._dataSetName];\r\n                                dataSetObject[\"prods:hasChanges\"] = true;\r\n\r\n                                dataSetObject[tableRef._name] = [];\r\n                                \r\n                                // Dont need to send prods:id for create, \r\n                                // no before table or error table to match\r\n                                // Dont need to send prods:clientId - since only sending one record\r\n                                rowData[\"prods:rowState\"] = \"created\";\r\n                                rowData[\"prods:clientId\"] = jsrecord.data._id;\r\n\r\n                                delete rowData[\"_id\"];\r\n\r\n                                dataSetObject[tableRef._name].push(rowData);\r\n                            }\r\n                            else {\r\n                                jsonObject[tableRef._name] = [];\r\n                                jsonObject[tableRef._name].push(rowData);\r\n                            }\r\n                        }\r\n                        else {\r\n                            jsonObject = rowData;\r\n                        }\r\n                            \r\n\r\n                        var request = {\r\n                            operation: operation,\r\n                            batch: batch,\r\n                            jsrecord: jsrecord,\r\n                            jsdo: this\r\n                        };\r\n                        batch.operations.push(request);\r\n\r\n                        jsrecord._tableRef.trigger(\"beforeCreate\", this, jsrecord, request);\r\n                        this.trigger(\"beforeCreate\", this, jsrecord, request);\r\n\r\n                        this._execGenericOperation(\r\n                            progress.data.JSDO._OP_CREATE, jsonObject, request, this._createComplete, \r\n                                this._createSuccess, this._createError);\r\n                    }\r\n                    break;\r\n                case progress.data.JSDO._OP_UPDATE:\r\n                    for (var id in tableRef._changed) {\r\n                        var jsrecord = tableRef._findById(id, false);\r\n\r\n                        if (!jsrecord) continue;\r\n                        if (tableRef._processed[id]) continue;\r\n                        tableRef._processed[id] = jsrecord.data;\r\n                        \r\n                        rowData = {};\r\n                        jsonObject = {};\r\n                        requestData = {};\r\n                        \r\n                        // Make copy of row data, in case we need to convert data for backend..\r\n                        tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n                        \r\n                        var useBeforeImageFormat = false;\r\n                        if (this.isDataSet()) {\r\n                            if (this._useBeforeImage(\"update\")) {\r\n                                useBeforeImageFormat = true;\r\n                                jsonObject[this._dataSetName] = {};\r\n                                var dataSetObject = jsonObject[this._dataSetName];\r\n                                dataSetObject[\"prods:hasChanges\"] = true;\r\n                                dataSetObject[tableRef._name] = [];\r\n\r\n                                // Dont need to send prods:clientId - since only sending one record\r\n                                rowData[\"prods:id\"] = jsrecord.data._id;\r\n                                rowData[\"prods:rowState\"] = \"modified\";\r\n                                rowData[\"prods:clientId\"] = jsrecord.data._id;\r\n                                delete rowData[\"_id\"];\r\n\r\n                                dataSetObject[tableRef._name].push(rowData);\r\n\r\n                                // Now create before-table data\r\n                                dataSetObject[\"prods:before\"] = {};\r\n                                var beforeObject = dataSetObject[\"prods:before\"];\r\n                                beforeObject[tableRef._name] = [];\r\n\r\n                                var beforeRowData = {};\r\n                                // Dont need to send prods:clientId - since only sending one record\r\n                                beforeRowData[\"prods:id\"] = jsrecord.data._id;\r\n\r\n                                tableRef._jsdo._copyRecord(tableRef, \r\n                                    tableRef._beforeImage[jsrecord.data._id], beforeRowData);\r\n                                delete beforeRowData[\"_id\"];\r\n\r\n                                beforeObject[tableRef._name].push(beforeRowData);\r\n                            }\r\n                        }\r\n\r\n                        if (!useBeforeImageFormat) {\r\n                            if (this._resource.service\r\n                                && this._resource.service.settings\r\n                                && this._resource.service.settings.sendOnlyChanges) {\r\n                                tableRef._jsdo._copyRecord(tableRef, jsrecord.data, requestData, \r\n                                    tableRef._beforeImage[jsrecord.data._id]);\r\n\r\n                                if (this._resource.idProperty) {\r\n                                    requestData[this._resource.idProperty] = \r\n                                        jsrecord.data[this._resource.idProperty];\r\n                                }\r\n                                else {\r\n                                    throw new Error(msg.getMsgText(\"jsdoMSG110\", this._resource.name, \r\n                                        \" for sendOnlyChanges property\"));\r\n                                }\r\n                            }\r\n                            else\r\n                                requestData = rowData;\r\n\r\n                            if (this.isDataSet()) {\r\n                                jsonObject[tableRef._name] = [];\r\n                                jsonObject[tableRef._name].push(requestData);\r\n                            }\r\n                            else {\r\n                                jsonObject = rowData;\r\n                            }\r\n                        }\r\n\r\n                        var request = {\r\n                            jsrecord: jsrecord,\r\n                            operation: operation,\r\n                            batch: batch,\r\n                            jsdo: this\r\n                        };\r\n                        batch.operations.push(request);\r\n\r\n                        jsrecord._tableRef.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n                        this.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n\r\n                        this._execGenericOperation(\r\n                            progress.data.JSDO._OP_UPDATE, jsonObject, request, this._updateComplete,\r\n                            this._updateSuccess, this._updateError);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            // Call _syncTableRef on child tables\r\n            for (var i = 0; i < tableRef._children.length; i++) {\r\n                var childTableName = tableRef._children[i];\r\n                this._syncTableRef(\r\n                    operation, this._buffers[childTableName], batch);\r\n            }\r\n\r\n            // After children\r\n            // Delete parent records after children\r\n\r\n            if (operation == progress.data.JSDO._OP_DELETE) {\r\n                for (var i = 0; i < tableRef._deleted.length; i++) {\r\n                    var id = tableRef._deleted[i]._id;\r\n                    var jsrecord = tableRef._deleted[i];\r\n\r\n                    if (!jsrecord) continue;\r\n                    tableRef._processed[id] = jsrecord.data;\r\n                    \r\n                    rowData = {};\r\n                    jsonObject = {};\r\n                    requestData = {};\r\n                        \r\n                    // Make copy of row data, in case we need to convert data for backend..\r\n                    tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n                        \r\n                    var useBeforeImageFormat = false;\r\n                    if (this.isDataSet()) {\r\n                        if (this._useBeforeImage(\"delete\")) {\r\n                            useBeforeImageFormat = true;\r\n                            jsonObject[this._dataSetName] = {};\r\n                            var dataSetObject = jsonObject[this._dataSetName];\r\n                            dataSetObject[\"prods:hasChanges\"] = true;\r\n\r\n                            // There is no after tables for deletes, so just create before-table data\r\n                            dataSetObject[\"prods:before\"] = {};\r\n                            var beforeObject = dataSetObject[\"prods:before\"];\r\n                            beforeObject[tableRef._name] = [];\r\n                            \r\n                            var beforeRowData = {};\r\n\r\n                            // Dont need to send prods:id for delete, no after table or error table to match\r\n                            // Dont need to send prods:clientId - since only sending one record\r\n                            beforeRowData[\"prods:rowState\"] = \"deleted\";\r\n                            beforeRowData[\"prods:clientId\"] = jsrecord.data._id;\r\n\r\n                            tableRef._jsdo._copyRecord(tableRef, \r\n                                tableRef._beforeImage[rowData._id], beforeRowData);\r\n                            beforeObject[tableRef._name].push(beforeRowData);\r\n                        }\r\n                    }\r\n\r\n                    if (!useBeforeImageFormat) {\r\n                        if (this._resource.service\r\n                            && this._resource.service.settings\r\n                            && this._resource.service.settings.sendOnlyChanges) {\r\n                            if (this._resource.idProperty) {\r\n                                requestData[this._resource.idProperty] = \r\n                                    jsrecord.data[this._resource.idProperty];\r\n                            }\r\n                            else {\r\n                                throw new Error(msg.getMsgText(\"jsdoMSG110\", this._resource.name, \r\n                                    \" for sendOnlyChanges property\"));\r\n                            }\r\n                        }\r\n                        else {\r\n                            requestData = rowData;\r\n                        }\r\n\r\n                        if (this.isDataSet()) {\r\n                            jsonObject[tableRef._name] = [];\r\n                            jsonObject[tableRef._name].push(requestData);\r\n                        }\r\n                        else {\r\n                            jsonObject = rowData;\r\n                        }\r\n                    }\r\n\r\n                    var request = {\r\n                        batch: batch,\r\n                        jsrecord: jsrecord,\r\n                        operation: operation,\r\n                        jsdo: this\r\n                    };\r\n\r\n                    batch.operations.push(request);\r\n\r\n                    jsrecord._tableRef.trigger(\"beforeDelete\", this, jsrecord, request);\r\n                    this.trigger(\"beforeDelete\", this, jsrecord, request);\r\n\r\n                    this._execGenericOperation(\r\n                        progress.data.JSDO._OP_DELETE, jsonObject, request, this._deleteComplete, \r\n                        this._deleteSuccess, this._deleteError);\r\n                }\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Returns true if the specified operation type was specified in the catalog as useBeforeImage,\r\n         * else it returns false.\r\n         */\r\n        this._useBeforeImage = function (opType) {\r\n\r\n            for (var idx = 0; idx < this._resource.operations.length; idx++) {\r\n                if (this._resource.operations[idx].type == opType) {\r\n                    return this._resource.operations[idx].useBeforeImage;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n\r\n        /*\r\n         * Synchronizes changes for a DataSet. This is called when we send over one row at at time\r\n         * to Create, Update and Delete methods.\r\n         * It handles row with or without before-image data.\r\n         */\r\n        this._syncDataSetForCUD = function () {\r\n            var batch = {\r\n                    operations: []\r\n                },\r\n                deferred,\r\n                promise;\r\n            \r\n            if (typeof($) == 'function' && typeof($.Deferred) == 'function') {\r\n                deferred = $.Deferred();\r\n                promise = deferred.promise();\r\n                batch.deferred = deferred;\r\n            }            \r\n            \r\n            // Process buffers\r\n            // Synchronize deletes\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._visited = false;\r\n            }\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n                this._syncTableRef(\r\n                    progress.data.JSDO._OP_DELETE, tableRef, batch);\r\n            }\r\n\r\n            // Synchronize adds\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._visited = false;\r\n            }\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n                this._syncTableRef(\r\n                    progress.data.JSDO._OP_CREATE, tableRef, batch);\r\n            }\r\n\r\n            // Synchronize updates\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._visited = false;\r\n            }\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n                this._syncTableRef(\r\n                    progress.data.JSDO._OP_UPDATE, tableRef, batch);\r\n            }\r\n\r\n            if (this.autoApplyChanges) {\r\n                for (var buf in this._buffers) {\r\n                    var tableRef = this._buffers[buf];\r\n                    tableRef._processed = {};\r\n                    tableRef._added = [];\r\n                    tableRef._changed = {};\r\n                    tableRef._deleted = [];\r\n                }\r\n            }\r\n\r\n            // OE00229270 If _async is false, this ensures that afterSaveChanges() is called just once \r\n            // We now do this after all operations have been processed\r\n            if (!this._async) {\r\n                if (this._isBatchComplete(batch)) {\r\n                    var success = this._isBatchSuccess(batch);\r\n                    var request = {\r\n                        batch: batch,\r\n                        success: success\r\n                    };\r\n                    this._undefWorkingRecord();\r\n                    \r\n                    // Save error messages\r\n                    this._lastErrors = [];\r\n                    if (!success && batch.operations) {\r\n                        this._updateLastErrors(this, batch, null);\r\n                    }\r\n                    this._setAllRecordsRejected(batch);\r\n                        \r\n                    this._fireAfterSaveChanges(success, request);\r\n                }\r\n            }\r\n            // end OE00229270\r\n\r\n            return promise;\r\n        };\r\n\r\n\r\n        /*\r\n         * Synchronizes changes for a single table\r\n         */\r\n        this._syncSingleTable = function () {\r\n            var deferred, promise;\r\n            if (!this._defaultTableRef) return;\r\n            var tableRef = this._defaultTableRef;\r\n\r\n            var batch = {\r\n                operations: []\r\n            };\r\n            \r\n            if (typeof($) == 'function' && typeof($.Deferred) == 'function') {\r\n                deferred = $.Deferred();\r\n                promise = deferred.promise();\r\n                batch.deferred = deferred;\r\n            }                \r\n\r\n            var fireAfterSaveChanges = false;\r\n\r\n            // Skip delete for records that were added\r\n            // mark them as processed\r\n            var addedRecords = {};\r\n            for (var i = 0; i < tableRef._added.length; i++) {\r\n                var id = tableRef._added[i];\r\n                addedRecords[id] = id;\r\n            }\r\n            for (var i = 0; i < tableRef._deleted.length; i++) {\r\n                var jsrecord = tableRef._deleted[i];\r\n                if (!jsrecord) continue;\r\n\r\n                var id = jsrecord.data._id;\r\n                if (addedRecords[id]) {\r\n                    // Set request object\r\n                    // Properties async, fnName, objParam, and response \r\n                    // are not set when the HTTP request is suppressed \r\n                    var request = {\r\n                        success: true,\r\n                        xhr: undefined,\r\n                        operation: progress.data.JSDO._OP_DELETE,\r\n                        batch: batch,\r\n                        jsrecord: jsrecord,\r\n                        jsdo: this\r\n                    };\r\n                    batch.operations.push(request);\r\n                    tableRef._processed[id] = jsrecord.data;\r\n\r\n                    var jsdo = request.jsdo;\r\n                    try {\r\n                        request.jsrecord._tableRef.trigger(\"afterDelete\", jsdo, request.jsrecord, \r\n                            request.success, request);\r\n                        jsdo.trigger(\"afterDelete\", jsdo, request.jsrecord, request.success, request);\r\n                    } finally {\r\n                        request.complete = true;\r\n                    }\r\n\r\n                    fireAfterSaveChanges = true;\r\n                }\r\n            }\r\n            addedRecords = null;\r\n\r\n            // Synchronize deletes\r\n            for (var i = 0; i < tableRef._deleted.length; i++) {\r\n                var jsrecord = tableRef._deleted[i];\r\n                if (!jsrecord) continue;\r\n\r\n                var id = jsrecord.data._id;\r\n                if (tableRef._processed[id]) continue;\r\n\r\n                tableRef._processed[id] = jsrecord.data;\r\n                fireAfterSaveChanges = false;\r\n\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.jsdo = this;\r\n\r\n                var request = {\r\n                    xhr: xhr,\r\n                    operation: progress.data.JSDO._OP_DELETE,\r\n                    batch: batch,\r\n                    jsrecord: jsrecord,\r\n                    jsdo: this\r\n                };\r\n                batch.operations.push(request);\r\n                xhr.onCompleteFn = this._deleteComplete;\r\n                xhr.onSuccessFn = this._deleteSuccess;\r\n                xhr.onErrorFn = this._deleteError;\r\n                xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n                xhr.request = request;\r\n\r\n                jsrecord._tableRef.trigger(\"beforeDelete\", this, jsrecord, request);\r\n                this.trigger(\"beforeDelete\", this, jsrecord, request);\r\n\r\n                var requestData = {};\r\n                if (this._resource.service\r\n                    && this._resource.service.settings\r\n                    && this._resource.service.settings.sendOnlyChanges) {\r\n                    if (this._resource.idProperty) {\r\n                        requestData[this._resource.idProperty] = jsrecord.data[this._resource.idProperty];\r\n                    }\r\n                    else {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG110\", this._resource.name, \r\n                            \" for sendOnlyChanges property\"));\r\n                    }\r\n                }\r\n                else {\r\n                    // We must copy record in case _convertRowData() needs to make conversion\r\n                    tableRef._jsdo._copyRecord(tableRef, jsrecord.data, requestData);\r\n                }\r\n                \r\n                if (tableRef._convertForServer) {\r\n                    this._convertRowData(tableRef, requestData);\r\n                } \r\n\r\n                if (this._resource) {\r\n                    if (typeof(this._resource.generic[\"delete\"]) == \"function\") {\r\n                        xhr.objParam = requestData;\r\n                        this._resource.generic[\"delete\"].call(this, xhr, this._async);\r\n                    }\r\n                    else {\r\n                        throw new Error(\"JSDO: DELETE operation is not defined.\");\r\n                    }\r\n                }\r\n                else {\r\n                    this._session._openRequest(xhr, 'DELETE', this.url + '/' + id, true);\r\n                    try {\r\n                        xhr.send(null);\r\n                    } catch (e) {\r\n                        request.success = false;\r\n                        request.exception = e;\r\n                        // let Session check for online/offline\r\n                        xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            // Synchronize adds\r\n            for (var i = 0; i < tableRef._added.length; i++) {\r\n                var id = tableRef._added[i];\r\n                var jsrecord = tableRef._findById(id, false);\r\n                var requestData = {};\r\n\r\n                if (!jsrecord) continue;\r\n                if (tableRef._processed[id]) continue;\r\n                tableRef._processed[id] = jsrecord.data;\r\n                fireAfterSaveChanges = false;\r\n\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.jsdo = this;\r\n                var request = {\r\n                    xhr: xhr,\r\n                    jsrecord: jsrecord,\r\n                    batch: batch,\r\n                    operation: progress.data.JSDO._OP_CREATE,\r\n                    jsdo: this\r\n                };\r\n                batch.operations.push(request);\r\n                xhr.onCompleteFn = this._createComplete;\r\n                xhr.onSuccessFn = this._createSuccess;\r\n                xhr.onErrorFn = this._createError;\r\n                xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n                xhr.request = request;\r\n\r\n                jsrecord._tableRef.trigger(\"beforeCreate\", this, jsrecord, request);\r\n                this.trigger(\"beforeCreate\", this, jsrecord, request);\r\n\r\n                if (this._resource) {\r\n                    if (typeof(this._resource.generic.create) == \"function\") {\r\n                        this._copyRecord(tableRef, jsrecord.data, requestData);\r\n                        if (this._resource.idProperty !== undefined && jsrecord.data._id !== undefined) {\r\n                            // Remove _id when idProperty is set\r\n                            delete requestData._id;\r\n                        }\r\n                        \r\n                        if (tableRef._convertForServer) {\r\n                            this._convertRowData(tableRef, requestData);\r\n                        }  \r\n                        \r\n                        xhr.objParam = requestData;\r\n                        \r\n                        this._resource.generic.create.call(this, xhr, this._async);\r\n                    }\r\n                    else {\r\n                        throw new Error(\"JSDO: CREATE operation is not defined.\");\r\n                    }\r\n                    \r\n                }\r\n                else {\r\n                    this._session._openRequest(xhr, 'POST', this.url, true);\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n                    this._copyRecord(tableRef, jsrecord.data, requestData);\r\n                    \r\n                    if (tableRef._convertForServer) {\r\n                        this._convertRowData(tableRef, requestData);\r\n                    } \r\n                    var input = JSON.stringify(requestData);\r\n                    \r\n                    try {\r\n                        xhr.send(input);\r\n                    } catch (e) {\r\n                        request.success = false;\r\n                        request.exception = e;\r\n                        // let Session check for online/offline\r\n                        xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            // Synchronize updates\r\n            for (var id in tableRef._changed) {\r\n                var jsrecord = tableRef._findById(id, false);\r\n\r\n                if (!jsrecord) continue;\r\n                if (tableRef._processed[id]) continue;\r\n                tableRef._processed[id] = jsrecord.data;\r\n                fireAfterSaveChanges = false;\r\n\r\n                var xhr = new XMLHttpRequest();\r\n                var request = {\r\n                    xhr: xhr,\r\n                    jsrecord: jsrecord,\r\n                    operation: progress.data.JSDO._OP_UPDATE,\r\n                    batch: batch,\r\n                    jsdo: this\r\n                };\r\n                xhr.request = request;\r\n                xhr.jsdo = this;\r\n                batch.operations.push(request);\r\n                xhr.onCompleteFn = this._updateComplete;\r\n                xhr.onSuccessFn = this._updateSuccess;\r\n                xhr.onErrorFn = this._updateError;\r\n                xhr.onreadystatechange = this.onReadyStateChangeGeneric;\r\n\r\n                jsrecord._tableRef.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n                this.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n\r\n                var requestData = {};\r\n                if (this._resource.service\r\n                    && this._resource.service.settings\r\n                    && this._resource.service.settings.sendOnlyChanges) {\r\n                        \r\n                    tableRef._jsdo._copyRecord(tableRef, jsrecord.data, requestData, \r\n                        tableRef._beforeImage[jsrecord.data._id]);\r\n\r\n                    if (this._resource.idProperty) {\r\n                        requestData[this._resource.idProperty] = jsrecord.data[this._resource.idProperty];\r\n                    }\r\n                    else {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG110\", this._resource.name, \r\n                            \" for sendOnlyChanges property\"));\r\n                    }\r\n                }\r\n                else {\r\n                    // We must copy record in case _convertRowData() needs to make conversion\r\n                    tableRef._jsdo._copyRecord(tableRef, jsrecord.data, requestData);\r\n                }\r\n                \r\n                if (tableRef._convertForServer) {\r\n                    this._convertRowData(tableRef, requestData);\r\n                }\r\n\r\n                if (this._resource) {\r\n                    if (typeof(this._resource.generic.update) == \"function\") {\r\n                        xhr.objParam = requestData;\r\n                        this._resource.generic.update.call(this, xhr, this._async);\r\n                    }\r\n                    else {\r\n                        throw new Error(\"JSDO: UPDATE operation is not defined.\");\r\n                    }\r\n                }\r\n                else {\r\n                    this._session._openRequest(xhr, 'PUT', this.url + '/' + id, this._async);\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n                    \r\n                    var input = JSON.stringify(requestData);\r\n                    \r\n                    try {\r\n                        xhr.send(input);\r\n                    } catch (e) {\r\n                        request.success = false;\r\n                        request.exception = e;\r\n                        // let Session check for online/offline\r\n                        xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.autoApplyChanges) {\r\n                // Arrays to keep track of changes\r\n                tableRef._added = [];\r\n                tableRef._changed = {};\r\n                tableRef._deleted = [];\r\n                tableRef._processed = {};\r\n            }\r\n\r\n            // OE00229270 If _async is false, fire afterSaveChanges() after all operations are processed \r\n            if (!this._async)\r\n                fireAfterSaveChanges = true;\r\n\r\n            if (fireAfterSaveChanges) {\r\n                var jsdo = this;\r\n                var request = {\r\n                    batch: batch,\r\n                    success: true\r\n                };\r\n                \r\n                // Save error messages\r\n                jsdo._lastErrors = [];\r\n                if (batch.operations) {\r\n                    jsdo._updateLastErrors(jsdo, batch, null);\r\n                }\r\n                    \r\n                jsdo._undefWorkingRecord();\r\n                jsdo._fireAfterSaveChanges(request.success, request);\r\n            }\r\n\r\n            return promise;\r\n        };\r\n\r\n        /************************************************************************\r\n         *\r\n         * Synchronizes changes for a DataSet or a temp-table, sending over the entire change-set\r\n         * to saveChanges() on server\r\n         * If sync'ing a DataSet, sends over before-image and after-image data.\r\n         */\r\n        this._syncDataSetForSubmit = function (request) {\r\n            var deferred,\r\n                promise,\r\n                jsonObject,\r\n                completeFn = this._saveChangesComplete,\r\n                successFn = this._saveChangesSuccess,\r\n                errorFn =  this._saveChangesError;                \r\n            \r\n            if (typeof($) == 'function' && typeof($.Deferred) == 'function') {\r\n                deferred = $.Deferred();\r\n                promise = deferred.promise();\r\n                request.deferred = deferred;\r\n            }                        \r\n            \r\n            request.jsrecords = [];            \r\n\r\n            // First thing to do is to create jsonObject with before and after image data for all \r\n            // records in change-set (creates, updates and deletes)\r\n            if ( this._dataSetName ) {\r\n                jsonObject = this._createChangeSet(this._dataSetName, false, request);\r\n            }\r\n            else {\r\n                // just a temp-table. Need to create it somewhat differently from DS \r\n                // (no before and after image data)\r\n                jsonObject = this._createTTChangeSet(this._defaultTableRef, request);                \r\n                successFn = this._saveChangesSuccessTT;  // will process success response differently from DS\r\n            }\r\n            \r\n            this._execGenericOperation(progress.data.JSDO._OP_SUBMIT, jsonObject, request, \r\n                completeFn, successFn, errorFn);\r\n                \r\n            return promise;\r\n        };\r\n\r\n        /************************************************************************\r\n         *\r\n         * Private method that creates a jsonObject with before and after image data for all\r\n         * records in change-set (creates, updates and deletes)\r\n         *\r\n         * Params: dataSetName is required.\r\n         *         alwaysCreateTable is required. If true, always create table array (even if no data/changes)\r\n         *         request is optional\r\n         */\r\n        this._createChangeSet = function (dataSetName, alwaysCreateTable, request) {\r\n            var changeSetJsonObject = {};\r\n\r\n            changeSetJsonObject[dataSetName] = {};\r\n            var dataSetJsonObject = changeSetJsonObject[dataSetName];\r\n\r\n            var hasChanges = dataSetJsonObject[\"prods:hasChanges\"] = this._hasChanges();\r\n            if (hasChanges) {\r\n                if ((alwaysCreateTable === true)) {\r\n                    for (var buf in this._buffers) {\r\n                        dataSetJsonObject[this._buffers[buf]._name] = [];\r\n                    }\r\n                }\r\n\r\n                // First do deletes\r\n                //for (var buf in this._buffers) { this._buffers[buf]._visited = false; }\r\n                for (var buf in this._buffers) {\r\n                    var tableRef = this._buffers[buf];\r\n                    this._addDeletesToChangeSet(tableRef, dataSetJsonObject, request);\r\n                }\r\n\r\n                //  Adds\r\n                //for (var buf in this._buffers) { this._buffers[buf]._visited = false; }\r\n                for (var buf in this._buffers) {\r\n                    var tableRef = this._buffers[buf];\r\n                    this._addCreatesToChangeSet(tableRef, dataSetJsonObject, request);\r\n                }\r\n\r\n                // Updates\r\n                //for (var buf in this._buffers) { this._buffers[buf]._visited = false; }\r\n                for (var buf in this._buffers) {\r\n                    var tableRef = this._buffers[buf];\r\n                    this._addChangesToChangeSet(tableRef, dataSetJsonObject, request);\r\n                }\r\n\r\n                // Clear _processed map\r\n                for (var buf in this._buffers) {\r\n                    this._buffers[buf]._processed = {};\r\n                }\r\n            }\r\n\r\n            // Check if change set is empty\r\n            // A saveChanges() with a delete of new record would result in an empty change set        \r\n            // An empty DataSet is sent to the server to ensure that AfterSaveChanges fires\r\n            var keys = Object.keys(changeSetJsonObject[dataSetName]);\r\n            if (keys.length == 1 && keys[0] == \"prods:hasChanges\") {\r\n                for (var buf in this._buffers) {\r\n                    dataSetJsonObject[this._buffers[buf]._name] = [];\r\n                }\r\n                dataSetJsonObject[\"prods:hasChanges\"] = false;\r\n            }\r\n\r\n            return changeSetJsonObject;\r\n        };\r\n\r\n        /************************************************************************\r\n         *\r\n         * Private method that creates a jsonObject for the created and changed records\r\n         * in a temp-table. There is no before-image information. This is used in the\r\n         * case of a Submit operation when the JSDO is just for a temp-table \r\n         *\r\n         * Params: dataSetName is required.\r\n         *         alwaysCreateTable is required. If true, always create table array (even if no data/changes)\r\n         *         request is optional\r\n         */\r\n        this._createTTChangeSet = function (tableRef, request) {\r\n            var changeSetJsonObject = {},\r\n                hasChanges,\r\n                tempTableJsonObject,\r\n                i,\r\n                id,\r\n                jsrecord;\r\n\r\n            changeSetJsonObject[tableRef._name] = [];\r\n            tempTableJsonObject = changeSetJsonObject[tableRef._name];\r\n\r\n            hasChanges = this._hasChanges();\r\n            if (hasChanges) {\r\n                \r\n                // (note that we do not send deleted rows on submit for a temp-table)\r\n                \r\n                //  Adds\r\n                for (i = 0; i < tableRef._added.length; i++) {\r\n                    id = tableRef._added[i];\r\n                    jsrecord = tableRef._findById(id, false);\r\n                    if (jsrecord) {\r\n                        if ( !tableRef._processed[jsrecord.data._id] ) {\r\n                            this._addRowToTTChangeSet(tableRef, jsrecord, tempTableJsonObject,\r\n                                                       request, \"beforeCreate\");\r\n                        }\r\n                    }\r\n                }              \r\n\r\n                // changed rows\r\n                for (id in tableRef._changed) {\r\n                    if (tableRef._changed.hasOwnProperty(id)) {\r\n                        jsrecord = tableRef._findById(id, false);\r\n                        if (jsrecord) {\r\n                            if ( !tableRef._processed[jsrecord.data._id] ) {\r\n                                this._addRowToTTChangeSet(tableRef, jsrecord, tempTableJsonObject, \r\n                                                          request, \"beforeUpdate\");\r\n                            }\r\n                        }\r\n                    }\r\n                }              \r\n                \r\n                // Clear _processed map\r\n                tableRef._processed = {};\r\n            }\r\n\r\n            return changeSetJsonObject;\r\n        };\r\n\r\n        this._addRowToTTChangeSet = function (tableRef, jsrecord, tempTableJsonObject, request, event) {\r\n            var rowData = {};\r\n            \r\n            tableRef._processed[jsrecord.data._id] = jsrecord.data;\r\n            \r\n            // Store jsrecord in request object so we can access it when saveChanges completes, \r\n            // in order to run afterCreate events\r\n            if (typeof(request) != 'undefined') {\r\n                request.jsrecords.push(jsrecord);\r\n\r\n                // Need to call beforeCreate trigger when saveChanges(true) is called\r\n                jsrecord._tableRef.trigger(event, this, jsrecord, request);\r\n                this.trigger(event, this, jsrecord, request);\r\n            }\r\n            \r\n            tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n            delete rowData[\"_id\"];\r\n\r\n            tempTableJsonObject.push(rowData);\r\n        };\r\n\r\n        /************************************************************************\r\n         *\r\n         * Private method that creates a jsonObject with data and also before image data\r\n         *  for all records in change-set (creates, updates and deletes)\r\n         *\r\n         * Params: dataSetName is required.\r\n         * It returns jsonObject that can be used as input to addRecords()\r\n         */\r\n        this._createDataAndChangeSet = function (dataSetName) {\r\n            var jsonObject = {};\r\n\r\n            jsonObject[dataSetName] = {};\r\n            var dataSetJsonObject = jsonObject[dataSetName];\r\n\r\n            /* We always want to create tables (even if there's no data) so we can compare schemas\r\n             * of data in local storage to JSDO's schema */\r\n            for (var buf in this._buffers)\r\n                dataSetJsonObject[this._buffers[buf]._name] = [];\r\n\r\n            if (this._hasChanges()) {\r\n                dataSetJsonObject[\"prods:hasChanges\"] = true;\r\n            }\r\n\r\n            // Add data from each table. This will also add bi data for any created or updated rows\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n                this._addRecordsToObject(tableRef, dataSetJsonObject);\r\n            }\r\n\r\n            // Now do deletes\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n                this._addDeletesToChangeSet(tableRef, dataSetJsonObject);\r\n            }\r\n\r\n            // Clear _processed map\r\n            for (var buf in this._buffers) {\r\n                this._buffers[buf]._processed = {};\r\n            }\r\n            return jsonObject;\r\n        };\r\n\r\n        // This method adds all record for specified table into dataSetJsonObject.\r\n        // If record has bi data, it adds that as well\r\n        this._addRecordsToObject = function (tableRef, dataSetJsonObject) {\r\n\r\n            if (tableRef._data.length > 0 && !dataSetJsonObject[tableRef._name])\r\n                dataSetJsonObject[tableRef._name] = [];\r\n\r\n            for (var i = 0; i < tableRef._data.length; i++) {\r\n                var record = tableRef._data[i];\r\n                if (!record) continue;\r\n\r\n                // Check if record has bi data, can only determine if it's created or changed since\r\n                // deleted rows are not in after data\r\n                if (this._doesRecordHaveCreateBIData(tableRef, record._id) === true) {\r\n                    var jsrecord = tableRef._findById(record._id, false);\r\n                    if (!jsrecord) continue;\r\n                    if (tableRef._processed[jsrecord.data._id]) continue;\r\n                    this._addCreatedRowToChangeSet(tableRef, jsrecord, dataSetJsonObject);\r\n                }\r\n                if (this._doesRecordHaveUpdateBIData(tableRef, record._id) === true) {\r\n                    var jsrecord = tableRef._findById(record._id, false);\r\n                    if (!jsrecord) continue;\r\n                    if (tableRef._processed[jsrecord.data._id]) continue;\r\n                    this._addChangedRowToChangeSet(tableRef, jsrecord, dataSetJsonObject);\r\n                }\r\n                else {\r\n                    if (tableRef._processed[record._id]) continue;\r\n                    tableRef._processed[record._id] = record;\r\n\r\n                    var rowData = {};\r\n\r\n                    tableRef._jsdo._copyRecord(tableRef, record, rowData);\r\n                    delete rowData[\"_id\"];\r\n\r\n                    dataSetJsonObject[tableRef._name].push(rowData);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // Check if specified after record has bi data for newly created record.\r\n        // Returns True if after record has corresponding bi data, else false\r\n        this._doesRecordHaveCreateBIData = function (tableRef, id) {\r\n            for (var i = 0; i < tableRef._added.length; i++) {\r\n                if (tableRef._added[i] === id)\r\n                    return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        // Check if specified after record has bi data for updated record.\r\n        // Returns True if after record has corresponding bi data, else false\r\n        this._doesRecordHaveUpdateBIData = function (tableRef, id) {\r\n            for (var changedId in tableRef._changed) {\r\n                if (changedId === id)\r\n                    return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n\r\n        // If a create, remove or update exists, method returns true, else returns false\r\n        this._hasChanges = function () {\r\n            var hasChanges = false;\r\n\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n\r\n                var hasUpdates = false;\r\n                for (var id in tableRef._changed) {\r\n                    hasUpdates = true;\r\n                    break;\r\n                }\r\n\r\n                if (tableRef._deleted.length > 0 || tableRef._added.length > 0 || hasUpdates) {\r\n                    hasChanges = true;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return hasChanges;\r\n        };\r\n\r\n        // This method is used when saveChanges() is called, and also when storing data to local storage.\r\n        // The request param should be defined for saveChanges(),\r\n        // but not needed when storing data to local storage\r\n        this._addDeletesToChangeSet = function (tableRef, dataSetJsonObject, request) {\r\n            // There is no after table for deletes, so just create before-table data\r\n            for (var i = 0; i < tableRef._deleted.length; i++) {\r\n                var jsrecord = tableRef._deleted[i];\r\n\r\n                if (!jsrecord) continue;\r\n\r\n                if (jsrecord.data\r\n                    && jsrecord.data._id !== undefined\r\n                    && tableRef._beforeImage[jsrecord.data._id] === null) {\r\n                    // Deleted record is for a new record - do not send deleted record to server\r\n                    continue;\r\n                }\r\n\r\n                this._addDeletedRowToChangeSet(tableRef, jsrecord, dataSetJsonObject, request);\r\n            }\r\n        };\r\n\r\n        this._addDeletedRowToChangeSet = function (tableRef, jsrecord, dataSetJsonObject, request) {\r\n            tableRef._processed[jsrecord.data._id] = jsrecord.data;\r\n\r\n            // Store jsrecord in request object so we can access it when saveChanges completes, \r\n            // in order to run afterDelete events\r\n            jsrecord.data[\"prods:rowState\"] = \"deleted\";\r\n\r\n            if (typeof(request) != 'undefined') {\r\n                request.jsrecords.push(jsrecord);\r\n\r\n                // Need to call beforeDelete trigger if saveChanges(true) is called\r\n                jsrecord._tableRef.trigger(\"beforeDelete\", this, jsrecord, request);\r\n                this.trigger(\"beforeDelete\", this, jsrecord, request);\r\n            }\r\n\r\n            var beforeRowData = {};\r\n            // AppServer will roundtrip this back to jsdo client\r\n            beforeRowData[\"prods:clientId\"] = jsrecord.data._id;\r\n            beforeRowData[\"prods:rowState\"] = \"deleted\";\r\n\r\n            var beforeTableJsonObject = this._getTableInBeforeJsonObject(dataSetJsonObject, tableRef._name);\r\n            tableRef._jsdo._copyRecord(tableRef, tableRef._beforeImage[jsrecord.data._id], beforeRowData);\r\n            delete beforeRowData[\"_id\"];\r\n\r\n            beforeTableJsonObject.push(beforeRowData);\r\n        };\r\n\r\n        // This method is used when saveChanges() is called, and also when storing data to local storage.\r\n        // The request param should be defined for saveChanges(), \r\n        // but not needed when storing data to local storage\r\n        this._addCreatesToChangeSet = function (tableRef, dataSetJsonObject, request) {\r\n            // There is no before table for creates, so just create after-table data\r\n            for (var i = 0; i < tableRef._added.length; i++) {\r\n                var id = tableRef._added[i];\r\n                var jsrecord = tableRef._findById(id, false);\r\n                if (!jsrecord) continue;\r\n                if (tableRef._processed[jsrecord.data._id]) continue;\r\n\r\n                this._addCreatedRowToChangeSet(tableRef, jsrecord, dataSetJsonObject, request);\r\n            }\r\n        };\r\n\r\n        this._addCreatedRowToChangeSet = function (tableRef, jsrecord, dataSetJsonObject, request) {\r\n            tableRef._processed[jsrecord.data._id] = jsrecord.data;\r\n\r\n            if (!dataSetJsonObject[tableRef._name]) {\r\n                dataSetJsonObject[tableRef._name] = [];\r\n            }\r\n\r\n            // Store jsrecord in request object so we can access it when saveChanges completes, \r\n            // in order to run afterCreate events\r\n            jsrecord.data[\"prods:rowState\"] = \"created\";\r\n\r\n            if (typeof(request) != 'undefined') {\r\n                request.jsrecords.push(jsrecord);\r\n\r\n                // Need to call beforeCreate trigger when saveChanges(true) is called\r\n                jsrecord._tableRef.trigger(\"beforeCreate\", this, jsrecord, request);\r\n                this.trigger(\"beforeCreate\", this, jsrecord, request);\r\n            }\r\n\r\n            var rowData = {};\r\n            // AppServer will roundtrip this back to jsdo client\r\n            rowData[\"prods:clientId\"] = jsrecord.data._id;\r\n            rowData[\"prods:rowState\"] = \"created\";\r\n\r\n            tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n            delete rowData[\"_id\"];\r\n\r\n            dataSetJsonObject[tableRef._name].push(rowData);\r\n        };\r\n\r\n        // This method is used when saveChanges() is called, and also when storing data to local storage.\r\n        // The request param should be defined for saveChanges(),\r\n        // but not needed when storing data to local storage\r\n        this._addChangesToChangeSet = function (tableRef, dataSetJsonObject, request) {\r\n            // For Changes, there is both before and after table data\r\n            for (var id in tableRef._changed) {\r\n                var jsrecord = tableRef._findById(id, false);\r\n                if (!jsrecord) continue;\r\n                if (tableRef._processed[jsrecord.data._id]) continue;\r\n\r\n                this._addChangedRowToChangeSet(tableRef, jsrecord, dataSetJsonObject, request);\r\n            }\r\n        };\r\n\r\n        this._addChangedRowToChangeSet = function (tableRef, jsrecord, dataSetJsonObject, request) {\r\n            tableRef._processed[jsrecord.data._id] = jsrecord.data;\r\n\r\n            if (!dataSetJsonObject[tableRef._name]) {\r\n                dataSetJsonObject[tableRef._name] = [];\r\n            }\r\n\r\n            // Store jsrecord in request object so we can access it when saveChanges completes, in order\r\n            // to run afterUpdate events\r\n            jsrecord.data[\"prods:rowState\"] = \"modified\";\r\n\r\n            if (typeof(request) != 'undefined') {\r\n                request.jsrecords.push(jsrecord);\r\n\r\n                // Need to call beforeUpdate trigger when saveChanges(true) is called\r\n                jsrecord._tableRef.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n                this.trigger(\"beforeUpdate\", this, jsrecord, request);\r\n            }\r\n\r\n            var rowData = {};\r\n            // Required by AppServer in before-image data. Matches before row\r\n            rowData[\"prods:id\"] = jsrecord.data._id;\r\n            // AppServer will roundtrip this back to jsdo client\r\n            rowData[\"prods:clientId\"] = jsrecord.data._id;\r\n            rowData[\"prods:rowState\"] = \"modified\";\r\n\r\n            tableRef._jsdo._copyRecord(tableRef, jsrecord.data, rowData);\r\n            delete rowData[\"_id\"];\r\n\r\n            dataSetJsonObject[tableRef._name].push(rowData);\r\n\r\n            // Now add before-image data\r\n            var beforeTableJsonObject = this._getTableInBeforeJsonObject(dataSetJsonObject, tableRef._name);\r\n            var beforeRowData = {};\r\n            // Required by AppServer in before-image data. Matches after row\r\n            beforeRowData[\"prods:id\"] = jsrecord.data._id;\r\n\r\n            tableRef._jsdo._copyRecord(tableRef, tableRef._beforeImage[jsrecord.data._id], beforeRowData);\r\n            //delete beforeRowData[\"_id\"]; \r\n\r\n            beforeTableJsonObject.push(beforeRowData);\r\n        };\r\n\r\n\r\n        // Private method to get table's json object from the specified dataset json object.\r\n        // If it hasn't been created yet, this method creates it.\r\n        this._getTableInBeforeJsonObject = function (dataSetJsonObject, tableName) {\r\n            if (!dataSetJsonObject[\"prods:before\"]) {\r\n                dataSetJsonObject[\"prods:before\"] = {};\r\n            }\r\n            var beforeObject = dataSetJsonObject[\"prods:before\"];\r\n\r\n            if (!beforeObject[tableName]) {\r\n                beforeObject[tableName] = [];\r\n            }\r\n\r\n            return beforeObject[tableName];\r\n        };\r\n        \r\n\r\n        /*********************************************************************\r\n         *\r\n         * Reads a JSON object into the JSDO memory.\r\n         */\r\n        this.addRecords = function (jsonObject, addMode, keyFields, trackChanges, isInvoke) {\r\n            if (this.isDataSet()) {\r\n                if (jsonObject instanceof Array) {\r\n                    if (!this._defaultTableRef) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG998\"));\r\n                    }\r\n                }\r\n                else {\r\n                    if (jsonObject === undefined || jsonObject === null) {\r\n                        jsonObject = {};\r\n                    }\r\n\r\n                    if (jsonObject[this._dataSetName]) {\r\n                        jsonObject = jsonObject[this._dataSetName];\r\n                    }\r\n                }\r\n\r\n                // Allow empty object in addRecords with MODE_EMPTY\r\n                if (addMode != progress.data.JSDO.MODE_EMPTY) {\r\n                    if (Object.keys(jsonObject).length === 0)\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG006\"));\r\n                }\r\n\r\n                var oldUseRelationships = this.useRelationships;\r\n                // Turn off useRelationships since addRecords() does not use the working record\t\t\t\r\n                this.useRelationships = false;\r\n                try {\r\n                    for (var buf in this._buffers) {\r\n                        // Read data for tables in JSON object\r\n                        if (jsonObject[this._buffers[buf]._name])\r\n                            this._addRecords(this._buffers[buf]._name, jsonObject, addMode, \r\n                                keyFields, trackChanges, isInvoke);\r\n                        else if (addMode == progress.data.JSDO.MODE_EMPTY) {\r\n                            this._buffers[this._buffers[buf]._name]._clearData();\r\n                        }\r\n                    }\r\n                } finally {\r\n                    // Restore useRelationships\r\n                    this.useRelationships = oldUseRelationships;\r\n                }\r\n            }\r\n            else if (this._defaultTableRef) {\r\n                this._addRecords(this._defaultTableRef._name, jsonObject, addMode, keyFields, \r\n                    trackChanges, isInvoke);\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Copies the fields of the source record to the target record.\r\n         * Preserves the _id of the target record.\r\n         */\r\n        this._copyRecord = function (tableRef, source, target, onlyChangesRecord) {\r\n            for (var field in source) {\r\n\r\n                if (onlyChangesRecord !== undefined) {\r\n                    if (source[field] == onlyChangesRecord[field])\r\n                        continue;\r\n                }\r\n\r\n                // Fix for PSC00277769\r\n                if (source[field] === undefined || source[field] === null) {\r\n                    target[field] = source[field];\r\n                }\r\n                else if (source[field] instanceof Date) {\r\n                    target[field] = source[field];\r\n                }                    \r\n                else if (typeof source[field] === 'object') {\r\n                    var newObject = source[field] instanceof Array ? [] : {};\r\n                    this._copyRecord(tableRef, source[field], newObject);\r\n                    target[field] = newObject;\r\n                }\r\n                else\r\n                    target[field] = source[field];\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Deletes the \"prods:\" properties when no longer needed, \r\n         * typically when doing acceptChanges, rejectChanges, or _applyChanges.\r\n         * These properties are used to transfer before-image info between client JSDO and AppServer.\r\n         *\r\n         * Also, it optionally clears out the errorString field depending upon value of clearErrorString. \r\n         * To be consistent with the handling of \r\n         * the ABL's Buffer ERROR-STRING attribute, \r\n         * the errorString field should be cleared out when doing acceptChanges() or rejectChanges().\r\n         */\r\n        this._deleteProdsProperties = function (record, clearErrorString, deleteRowState) {\r\n\r\n            /* Default to false */\r\n            if (typeof(clearErrorString) == 'undefined') {\r\n                clearErrorString = false;\r\n            }\r\n\r\n            /* Default to true */\r\n            if (typeof(deleteRowState) == 'undefined') {\r\n                deleteRowState = true;\r\n            }\r\n\r\n            if (record) {\r\n                delete record[\"prods:id\"];\r\n                delete record[\"prods:hasErrors\"];\r\n                delete record[\"prods:clientId\"];\r\n                delete record[\"prods:rejected\"];\r\n                delete record._rejected;               \r\n\r\n                if (deleteRowState) {\r\n                    delete record[\"prods:rowState\"];\r\n                }\r\n\r\n                if (clearErrorString) {\r\n                    delete record._errorString;\r\n                }\r\n            }\r\n        };\r\n\r\n        this._addRecords = function (tableName, jsonObject, addMode, keyFields, trackChanges, isInvoke) {\r\n            var beforeImageJsonObject = null;\r\n            var beforeImageJsonIndex = null;\r\n\r\n            if (jsonObject && (this._dataSetName !== undefined)) {\r\n                if (jsonObject[this._dataSetName] &&\r\n                    jsonObject[this._dataSetName][\"prods:hasChanges\"]) {\r\n                    beforeImageJsonObject = jsonObject;\r\n                    beforeImageJsonIndex = {};\r\n                }\r\n                else if (jsonObject[\"prods:hasChanges\"]) {\r\n                    beforeImageJsonObject = {};\r\n                    beforeImageJsonObject[this._dataSetName] = jsonObject;\r\n                    beforeImageJsonIndex = {};\r\n                }\r\n            }\r\n\r\n            if (typeof(tableName) != 'string')\r\n                throw new Error(msg.getMsgText(\"jsdoMSG020\"));\r\n            if (!addMode)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG021\"));\r\n\r\n            switch (addMode) {\r\n                case progress.data.JSDO.MODE_APPEND:\r\n                case progress.data.JSDO.MODE_EMPTY:\r\n                case progress.data.JSDO.MODE_MERGE:\r\n                case progress.data.JSDO.MODE_REPLACE:\r\n                    break;\r\n                default:\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG022\"));\r\n            }\r\n\r\n            if (!keyFields)\r\n                keyFields = [];\r\n            else {\r\n                if (!(keyFields instanceof Array) && (typeof(keyFields) == 'object')) {\r\n                    if (keyFields[tableName]) {\r\n                        keyFields = keyFields[tableName];\r\n                    }\r\n                    else {\r\n                        keyFields = [];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!(keyFields instanceof Array)) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG008\"));\r\n            }\r\n\r\n            // Check that the specified field names are in the schema\r\n            if (this._buffers[tableName]._fields) {\r\n                for (var i = 0; i < keyFields.length; i++) {\r\n                    var field = this._buffers[tableName]._fields[keyFields[i].toLowerCase()];\r\n                    if (field === undefined) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG009\", keyFields[i]));\r\n                    }\r\n                    else {\r\n                        keyFields[i] = field.name;\r\n                    }\r\n                }\r\n            }\r\n\r\n            trackChanges = trackChanges ? true : false;\r\n\r\n            if (tableName) {\r\n                if (!(jsonObject instanceof Array)) {\r\n                    var data = null;\r\n\r\n                    if (jsonObject === undefined || jsonObject === null) {\r\n                        jsonObject = {};\r\n                    }\r\n\r\n                    if (this.isDataSet()) {\r\n                        if (jsonObject[this._dataSetName])\r\n                            data = jsonObject[this._dataSetName][tableName];\r\n                        else if (jsonObject[tableName])\r\n                            data = jsonObject[tableName];\r\n                    } else {\r\n                        if (this._dataProperty)\r\n                            data = jsonObject[this._dataProperty];\r\n                        else if (jsonObject.data)\r\n                            data = jsonObject.data;\r\n                    }\r\n\r\n\r\n                    if (data instanceof Array) {\r\n                        saveJsonObject = jsonObject;\r\n                        jsonObject = data;\r\n                    }\r\n                    else if ((addMode == progress.data.JSDO.MODE_EMPTY)\r\n                        && (typeof  (jsonObject) == 'object')\r\n                        && (Object.keys(jsonObject).length === 0)) {\r\n                        jsonObject = []; // Allow empty object in addRecords with\r\n                        // MODE_EMPTY\r\n                    }\r\n                    // Allow empty object when called by restoreChangesOnlyForTable()\r\n                    // where there are only deletes - in bi data\r\n                    else if ((addMode == progress.data.JSDO.MODE_REPLACE)\r\n                        && (typeof  (jsonObject) == 'object')\r\n                        && (beforeImageJsonObject)) {\r\n                        jsonObject = [];\r\n                    }\r\n                }\r\n\r\n                if (!(jsonObject instanceof Array)) {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG005\", tableName));\r\n                }\r\n\r\n                var dataHasBeenProcessed = false;\r\n                try {\r\n                    this._buffers[tableName]._sortRecords = false;\r\n                    if (keyFields.length === 0 || addMode == progress.data.JSDO.MODE_EMPTY) {\r\n                        // Quick merge\r\n                        if (addMode == progress.data.JSDO.MODE_EMPTY) {\r\n                            this._buffers[tableName]._clearData();\r\n                        }\r\n                        // APPEND, MERGE, REPLACE\r\n                        for (var i = 0; i < jsonObject.length; i++) {\r\n                            var jsrecord = this._buffers[tableName]._add(jsonObject[i], trackChanges, false);\r\n                            jsonObject[i]._id = jsrecord.data._id;\r\n                            if (beforeImageJsonIndex && jsonObject[i][\"prods:id\"]) {\r\n                                beforeImageJsonIndex[jsonObject[i][\"prods:id\"]] = jsrecord.data._id;\r\n                            }\r\n                            if (beforeImageJsonObject) {\r\n                                this._deleteProdsProperties(jsrecord.data);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Build temporary index\r\n                        var tmpIndex;\r\n\r\n                        if (this._buffers[tableName]._data.length * jsonObject.length >= 10) {\r\n                            tmpIndex = {};\r\n\r\n                            for (var i = 0; i < this._buffers[tableName]._data.length; i++) {\r\n                                var record = this._buffers[tableName]._data[i];\r\n                                if (!record) continue;\r\n\r\n                                var key = this._buffers[tableName]._getKey(record, keyFields);\r\n                                tmpIndex[key] = record;\r\n                            }\r\n\r\n                        }\r\n                        else\r\n                            tmpIndex = null; // Do not use an index\r\n                        var checkBeforeImage = \r\n                            (Object.keys(this._buffers[tableName]._beforeImage).length !== 0);\r\n                        for (var i = 0; i < jsonObject.length; i++) {\r\n                            var match = false;\r\n                            var record = null;\r\n\r\n                            // Check for duplicates\r\n                            if (tmpIndex) {\r\n                                var key = this._buffers[tableName]._getKey(jsonObject[i], keyFields);\r\n                                record = tmpIndex[key];\r\n                                match = (record !== undefined);\r\n                            }\r\n                            else {\r\n                                for (var j = 0; j < this._buffers[tableName]._data.length; j++) {\r\n                                    record = this._buffers[tableName]._data[j];\r\n                                    if (!record) continue;\r\n                                    match = \r\n                                    (this._buffers[tableName]._equalRecord(jsonObject[i], record, keyFields));\r\n                                    if (match) {\r\n                                        // Duplicate found\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (match) {\r\n                                if (isInvoke \r\n                                    && (this._resource.idProperty !== undefined) \r\n                                    && (jsonObject[i]._id === undefined)) {\r\n                                    // Add _id to jsonObject\r\n                                    jsonObject[i]._id = record._id;\r\n                                }\r\n\r\n                                // If beforeRecord is null, there is entry in _beforeImage for a create.\r\n                                // If beforeRecord is undefined, there is no entry\r\n                                var beforeRecord = this._buffers[tableName]._beforeImage[record._id];\r\n                                if (checkBeforeImage \r\n                                    && (jsonObject[i][\"prods:id\"] !== undefined) \r\n                                    && (typeof beforeRecord !== 'undefined')) {\r\n                                    // Only throw exception if the existing bi data \r\n                                    // is not the same as the new bi data\r\n                                    var isAfterSame = this._sameData(jsonObject[i], record);\r\n                                    var isBeforeSame = true;\r\n\r\n                                    // For creates, beforeRecord will be null\r\n                                    if (beforeRecord) {\r\n                                        var beforeObject = this._getBeforeRecordFromObject(jsonObject[i], \r\n                                            beforeImageJsonObject, tableName);\r\n                                        if (beforeObject)\r\n                                            isBeforeSame = this._sameData(beforeObject, beforeRecord);\r\n                                    }\r\n\r\n                                    if (!isAfterSame || !isBeforeSame)\r\n                                        throw new Error(msg.getMsgText(\"jsdoMSG032\"));\r\n                                }\r\n\r\n                                switch (addMode) {\r\n                                    case progress.data.JSDO.MODE_APPEND:\r\n                                        throw new Error(msg.getMsgText(\"jsdoMSG023\"));\r\n                                    case progress.data.JSDO.MODE_MERGE:\r\n                                        /* Ignore duplicate */\r\n                                        if (beforeImageJsonIndex && jsonObject[i][\"prods:id\"]) {\r\n                                            beforeImageJsonIndex[jsonObject[i][\"prods:id\"]] = record._id;\r\n                                        }\r\n                                        break;\r\n                                    case progress.data.JSDO.MODE_REPLACE:\r\n                                        if (beforeImageJsonIndex && jsonObject[i][\"prods:id\"]) {\r\n                                            beforeImageJsonIndex[jsonObject[i][\"prods:id\"]] = record._id;\r\n                                        }\r\n\r\n                                        if (jsonObject[i]._id === undefined)\r\n                                            jsonObject[i]._id = record._id;\r\n                                        this._copyRecord(\r\n                                            this._buffers[tableName],\r\n                                            jsonObject[i], record);\r\n                                        this._deleteProdsProperties(record);\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Add record\r\n                                var jsrecord = \r\n                                    this._buffers[tableName]._add(jsonObject[i], trackChanges, false);\r\n                                jsonObject[i]._id = jsrecord.data._id;\r\n                                if (beforeImageJsonIndex && jsonObject[i][\"prods:id\"]) {\r\n                                    beforeImageJsonIndex[jsonObject[i][\"prods:id\"]] = jsrecord.data._id;\r\n                                }\r\n                                if (beforeImageJsonObject) {\r\n                                    this._deleteProdsProperties(jsrecord.data);\r\n                                }\r\n                                if (tmpIndex) {\r\n                                    var key = this._buffers[tableName]._getKey(jsrecord.data, keyFields);\r\n                                    tmpIndex[key] = jsrecord.data;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        tmpIndex = null;\r\n                    }\r\n                    dataHasBeenProcessed = true;\r\n                }\r\n                finally {\r\n                    this._buffers[tableName]._sortRecords = true;\r\n                    this._buffers[tableName]._sort();\r\n                    this._buffers[tableName]._createIndex();\r\n\r\n                    if (dataHasBeenProcessed && beforeImageJsonObject) {\r\n                        this._buffers[tableName]._loadBeforeImageData(beforeImageJsonObject, \r\n                            beforeImageJsonIndex, keyFields);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // This method returns corresponding bi record of the afterRecord from specified jsonObject\r\n        this._getBeforeRecordFromObject = function (afterRecord, jsonObject, tablename) {\r\n            var beforeData = jsonObject[this._dataSetName][\"prods:before\"];\r\n            var id = afterRecord[\"prods:id\"];\r\n            var beforeRecord;\r\n\r\n            if (!beforeData) return beforeRecord;\r\n\r\n            // First check to see if the before data is the same\r\n            for (var i = 0; i < beforeData[tablename].length; i++) {\r\n                var record = beforeData[tablename][i];\r\n                if (record[\"prods:id\"] && id == record[\"prods:id\"]) {\r\n                    beforeRecord = record;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return beforeRecord;\r\n        };\r\n\r\n        this._sameData = function (record1, record2) {\r\n            var value1, value2;\r\n            for (var fieldName in record1) {\r\n                if (fieldName.substring(0, 5) != \"prods\" && fieldName != \"_id\") {\r\n                    value1 = record1[fieldName];\r\n                    value2 = record2[fieldName];\r\n\r\n                    if (value1 > value2 || value1 === null)\r\n                        return false;\r\n                    else if (value1 < value2 || value2 === null)\r\n                        return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n\r\n        // private method to merge changes after a read operation    \r\n        this._mergeRead = function (jsonObject, xhr) {\r\n            if (this.isDataSet()) {\r\n                if (this._dataProperty) {\r\n                    var datasetBuffer = this._buffers[this._dataProperty];\r\n                    datasetBuffer._data = jsonObject[this._dataSetName][this._dataProperty];\r\n                    if (datasetBuffer.autoSort) {\r\n                        datasetBuffer._sort();\r\n                    }\r\n                    datasetBuffer._createIndex();\r\n                }\r\n                else {\r\n                    // Load data from JSON object into _data\r\n                    for (var buf in this._buffers) {\r\n                        var data;\r\n                        if (jsonObject[this._dataSetName])\r\n                            data = jsonObject[this._dataSetName][buf];\r\n                        else\r\n                            data = null;\r\n                        data = data ? data : [];\r\n                        this._buffers[buf]._data = data;\r\n                        if (this._buffers[buf].autoSort) {\r\n                            this._buffers[buf]._sort();\r\n                        }\r\n                        this._buffers[buf]._createIndex();\r\n                        if (jsonObject[this._dataSetName] \r\n                            && jsonObject[this._dataSetName][\"prods:hasChanges\"]) {\r\n                            this._buffers[buf]._loadBeforeImageData(jsonObject);\r\n                        }\r\n                    }\r\n                    // Load nested data into _data\r\n                    if (this._numBuffers > 1) {\r\n                        for (var buf in this._buffers) {\r\n                            if (this._buffers[buf]._isNested\r\n                                && this._buffers[buf]._parent\r\n                                && this._buffers[this._buffers[buf]._parent]) {\r\n                                var srcData = this._buffers[this._buffers[buf]._parent]._data;\r\n                                var data = [];\r\n                                for (var i = 0; i < srcData.length; i++) {\r\n                                    if (srcData[i][buf] !== undefined) {\r\n                                        for (var j = 0; j < srcData[i][buf].length; j++) {\r\n                                            data.push(srcData[i][buf][j]);\r\n                                        }\r\n                                        delete srcData[i][buf];\r\n                                    }\r\n                                }\r\n                                this._buffers[buf]._data = data;\r\n                                if (this._buffers[buf].autoSort) {\r\n                                    this._buffers[buf]._sort();\r\n                                }\r\n                                this._buffers[buf]._createIndex();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (jsonObject instanceof Array) {\r\n                    this._defaultTableRef._data = jsonObject;\r\n                }\r\n                else {\r\n                    if (this._dataProperty)\r\n                        this._defaultTableRef._data = jsonObject[this._dataProperty];\r\n                    else if (jsonObject.data)\r\n                        this._defaultTableRef._data = jsonObject.data;\r\n                    else {\r\n                        this._defaultTableRef._data = [];\r\n                        this._defaultTableRef._data[0] = jsonObject;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var buf in this._buffers) {\r\n                if (this._buffers[buf].autoSort) {\r\n                    this._buffers[buf]._sort();\r\n                }\r\n                this._buffers[buf]._createIndex();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Replace existing record data and index entry with new record data.\r\n         */\r\n        this._mergeUpdateRecord = function (tableRef, recordId, record) {\r\n            var index = tableRef._index[recordId].index;\r\n            record._id = recordId;\r\n            \r\n            if (!tableRef._data[index]) {\r\n                tableRef._data[index] = {};\r\n            }\r\n            this._copyRecord(this._tableRef, record, tableRef._data[index]);\r\n            record = tableRef._data[index];\r\n\r\n            if (tableRef._jsdo._resource.idProperty !== undefined) {\r\n                var id = tableRef._data[index][tableRef._jsdo._resource.idProperty];\r\n                if (id !== undefined) {\r\n                    delete tableRef._index[recordId];\r\n                    id += \"\";\r\n                    tableRef._index[id] = new progress.data.JSIndexEntry(index);\r\n                    record._id = id;\r\n                }\r\n            }\r\n\r\n            return record;\r\n        };\r\n\r\n\r\n        /**\r\n         *update existing record data with specified error string\r\n         */\r\n        this._setErrorString = function (tableRef, recordId, errorString, setInBeforeTable) {\r\n\r\n            if (setInBeforeTable) {\r\n                // Ensure that object exists, it's null for deleted rows\r\n                if (tableRef._beforeImage[recordId]) {\r\n                    tableRef._beforeImage[recordId]._errorString = errorString;\r\n                }\r\n            }\r\n            else {\r\n                var index = tableRef._index[recordId].index;\r\n                tableRef._data[index]._errorString = errorString;\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Returns the array with the data from the specified dataObject. \r\n         */\r\n        this._arrayFromDataObject = function (dataObject, tableRef) {\r\n            var data;\r\n\r\n            if (dataObject === undefined) return undefined;\r\n            if (this._dataSetName) {\r\n                if (dataObject[this._dataSetName])\r\n                    data = dataObject[this._dataSetName][tableRef._name];\r\n            }\r\n            else {\r\n                // check if data returned as array\r\n                if (dataObject instanceof Array) {\r\n                    data = dataObject;\r\n                } else {\r\n                    // or if data property is set\r\n                    if (this._dataProperty) {\r\n                        data = dataObject[this._dataProperty];\r\n                    } else if (dataObject.data) {\r\n                        // or just try with 'data' as the data property name\r\n                        data = dataObject.data;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return data;\r\n        };\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////\r\n        //\r\n        // Private method to merge changes after a create or update operation.\r\n        // This method is called to merge changes when server's Create or Update methods were called. \r\n        //\r\n        // It returns true if it found error for row in before-image data (prods:hasErrors = true)\r\n        // It returns false if there is no before-image data or prods:hasErrors property is absent\r\n        this._mergeUpdateForCUD = function (jsonObject, xhr) {\r\n            var hasError = false,\r\n                errorString;\r\n\r\n            // Update dataset with changes from server\r\n            if (this._dataSetName) {\r\n                var dataSetJsonObject = jsonObject[this._dataSetName];\r\n\r\n                // only updates the specified record\r\n                var tableRef = xhr.request.jsrecord._tableRef;\r\n                var tableJsonObject = this._arrayFromDataObject(jsonObject, tableRef);\r\n\r\n                if (tableJsonObject instanceof Array) {\r\n                    if (tableJsonObject.length > 1) {\r\n                        xhr.request.success = false;\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG100\"));\r\n                    }\r\n\r\n                    for (var i = 0; i < tableJsonObject.length; i++) {\r\n                        var recordId = xhr.request.jsrecord.getId();\r\n\r\n                        if (!recordId) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG034\", \"_mergeUpdateForCUD()\"));\r\n                        }\r\n\r\n                        // Determine if error string (get prods_id before _mergeUpdateRecord() is called, \r\n                        // since it removes all prods properties)\r\n                        errorString = undefined;\r\n\r\n                        if (tableJsonObject[i][\"prods:hasErrors\"]) {\r\n                            var prods_id = tableJsonObject[i][\"prods:id\"];\r\n                            errorString = \r\n                                this._getErrorStringFromJsonObject(dataSetJsonObject, tableRef, prods_id);\r\n                            hasError = true;\r\n                        }\r\n\r\n                        var record = this._mergeUpdateRecord(tableRef, recordId, tableJsonObject[i]);\r\n                        if (errorString)\r\n                            this._setErrorString(tableRef, recordId, errorString, false);\r\n\r\n                        // Set _rejected property\r\n                        if (tableJsonObject[i][\"prods:rejected\"]\r\n                            || errorString) {\r\n                            record._rejected = true;\r\n                            if (errorString === \"REJECTED\") {\r\n                                delete record._errorString;\r\n                            }\r\n                        }                            \r\n\r\n                        xhr.request.jsrecord = new progress.data.JSRecord(tableRef, record);\r\n                    }\r\n                }\r\n            } else {\r\n                // update single record with changes from server\r\n                var tableRef = this._defaultTableRef;\r\n                var data = this._arrayFromDataObject(jsonObject);\r\n\r\n                if (data instanceof Array) {\r\n                    if (data.length > 1) {\r\n                        xhr.request.success = false;\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG100\"));\r\n                    }\r\n\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        var recordId = xhr.request.jsrecord.getId();\r\n\r\n                        if (!recordId) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG034\", \"_mergeUpdateForCUD()\"));\r\n                        }\r\n\r\n                        var record = this._mergeUpdateRecord(tableRef, recordId, data[i]);\r\n                        xhr.request.jsrecord = new progress.data.JSRecord(tableRef, record);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return hasError;\r\n        };\r\n\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////\r\n        //\r\n        // Private method to determine if deleted row (from delete operation) returned from AppServer \r\n        // was returned with an error in the before-image data.\r\n        //\r\n        // It returns true if it found an error for row in before-image data (prods:hasErrors = true)\r\n        // It returns false if there is no before-image data or prods:hasErrors property is absent\r\n\r\n        this._checkForDeleteError = function (dataSetJsonObject, xhr) {\r\n            var hasError = false;\r\n            var tableRef = xhr.request.jsrecord._tableRef;\r\n\r\n            beforeJsonObject = dataSetJsonObject[\"prods:before\"];\r\n\r\n            // No merge is necessary for deletes, but we need to see \r\n            // if there are any errors on deletes records.\r\n            // delete records are not in after table, only in before table\r\n            if (beforeJsonObject) {\r\n                var beforeTableJsonObject = beforeJsonObject[tableRef._name];\r\n\r\n                if (beforeTableJsonObject.length > 1) {\r\n                    xhr.request.success = false;\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG100\"));\r\n                }\r\n                // clientId is same as _id\r\n                var recordId = beforeTableJsonObject[0][\"prods:clientId\"];\r\n                if (!recordId) {\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG035\", \"_checkForDeleteError()\"));\r\n                }\r\n\r\n                // Determine if row was returned with error string\r\n                if (beforeTableJsonObject[0][\"prods:hasErrors\"]) {\r\n                    var prods_id = beforeTableJsonObject[0][\"prods:id\"];\r\n                    var errorString = \r\n                        this._getErrorStringFromJsonObject(dataSetJsonObject, tableRef, prods_id);\r\n                    this._setErrorString(tableRef, recordId, errorString, true);\r\n                    hasError = true;\r\n                }\r\n            }\r\n\r\n            return hasError;\r\n        };\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////\r\n        //\r\n        // Private method to merge changes after a call to saveChanges.\r\n        // This method is called when saveChanges(useSubmit) was called with useSubmit=true.\r\n        // This can process/merge one or more created, deleted or updated records.\r\n        // In order for a jsonObject to have before-image data, it must be associated with a dataset.\r\n        //\r\n        // It only merges changes in the after table. But we need to look at before-image table to see \r\n        // if there were any errors passed back for the deletes \r\n        // \r\n        this._mergeUpdateForSubmit = function (jsonObject, xhr) {\r\n            var errorString;\r\n            \r\n            //if (!this._dataSetName || !jsonObject[this._dataSetName][\"prods:hasChanges\"])\r\n            if (!this._dataSetName) {\r\n                // \"_mergeUpdateForSubmit() can only be called for a dataset\"\r\n                throw new Error(msg.getMsgText(\"jsdoMSG036\", \"_mergeUpdateForSubmit()\"));\r\n            }\r\n\r\n            // response is sent back with extra dataset object wrapper\r\n            var dataSetJsonObject = jsonObject[this._dataSetName];\r\n            if (dataSetJsonObject[this._dataSetName])\r\n                dataSetJsonObject = dataSetJsonObject[this._dataSetName];\r\n\r\n            var beforeJsonObject = dataSetJsonObject[\"prods:before\"];\r\n\r\n            for (var buf in this._buffers) {\r\n                var tableRef = this._buffers[buf];\r\n\r\n                var tableJsonObject = dataSetJsonObject[tableRef._name];\r\n                if (tableJsonObject instanceof Array) {\r\n                    for (var i = 0; i < tableJsonObject.length; i++) {\r\n\r\n                        var recordId = tableJsonObject[i][\"prods:clientId\"];\r\n                        if (!recordId) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG035\", \"_mergeUpdateForSubmit()\"));\r\n                        }\r\n\r\n                        // Determine if error string (get prods_id before _mergeUpdateRecord() is called, \r\n                        // since it removes all prods properties)\r\n                        errorString = undefined;\r\n\r\n                        if (tableJsonObject[i][\"prods:hasErrors\"]) {\r\n                            var prods_id = tableJsonObject[i][\"prods:id\"];\r\n                            errorString = \r\n                                this._getErrorStringFromJsonObject(dataSetJsonObject, tableRef, prods_id);\r\n                        }\r\n                        var record = this._mergeUpdateRecord(tableRef, recordId, tableJsonObject[i]);\r\n                        if (errorString) {\r\n                            this._setErrorString(tableRef, recordId, errorString, false);\r\n                        }\r\n\r\n                        // Set _rejected property so it can be checked in applyChanges()\r\n                        if (tableJsonObject[i][\"prods:rejected\"]\r\n                            || errorString) {\r\n                            record._rejected = true;\r\n                            if (errorString === \"REJECTED\") {\r\n                                delete record._errorString;\r\n                            }\r\n                        }\r\n\r\n                        // Now need to update jsrecords. \r\n                        // We use this data when we fire create, update and delete events.\r\n                        // Updating so that it contains latest data (data sent back from server) \r\n                        var jsrecords = xhr.request.jsrecords;\r\n                        for (var idx = 0; idx < jsrecords.length; idx++) {\r\n                            if (jsrecords[idx].data[\"_id\"] == recordId) {\r\n                                jsrecords[idx].data = record;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // No merge is necessary for deletes, \r\n            // but we need to see if there are any errors on deletes records.\r\n            // delete records are not in after table, only in before table\r\n            if (beforeJsonObject) {\r\n                for (var buf in this._buffers) {\r\n                    var tableRef = this._buffers[buf];\r\n                    var beforeTableJsonObject = beforeJsonObject[tableRef._name];\r\n                    var errorString;\r\n\r\n                    if (beforeTableJsonObject instanceof Array) {\r\n                        for (var i = 0; i < beforeTableJsonObject.length; i++) {\r\n\r\n                            if (beforeTableJsonObject[i][\"prods:rowState\"] == \"deleted\") {\r\n                                var recordId = beforeTableJsonObject[i][\"prods:clientId\"];\r\n                                if (!recordId) {\r\n                                    throw new Error(msg.getMsgText(\"jsdoMSG035\", \"_mergeUpdateForSubmit()\"));\r\n                                }\r\n\r\n                                errorString = undefined;\r\n                                // If row was returned with error string, just copy that over to jsdo record\r\n                                if (beforeTableJsonObject[i][\"prods:hasErrors\"]) {\r\n                                    var prods_id = beforeTableJsonObject[i][\"prods:id\"];\r\n                                    \r\n                                    errorString = this._getErrorStringFromJsonObject(dataSetJsonObject, \r\n                                        tableRef, prods_id);\r\n                                    this._setErrorString(tableRef, recordId, errorString, true);\r\n                                }\r\n\r\n                                // Set _rejected property so it can be checked in applyChanges()\r\n                                if ((beforeTableJsonObject[i][\"prods:rejected\"]\r\n                                    || errorString)\r\n                                    && tableRef._beforeImage[recordId]) {\r\n                                    tableRef._beforeImage[recordId]._rejected = true;\r\n                                    if (errorString === \"REJECTED\") {\r\n                                        delete tableRef._beforeImage[recordId]._errorString;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////\r\n        //\r\n        // Private method that fires afterCreate, afterUpdate and afterDelete (CUD) triggers after\r\n        // saveChanges(true) is called. We must fire create, update and delete triggers \r\n        // for each record that was sent to backend submit operation \r\n        this._fireCUDTriggersForSubmit = function (request) {\r\n            // Before firing triggers, delete prods properties (except rowState) so they don't appear in data\r\n            for (var idx = 0; idx < request.jsrecords.length; idx++) {\r\n                this._deleteProdsProperties(request.jsrecords[idx].data, false, false);\r\n            }\r\n\r\n            for (var idx = 0; idx < request.jsrecords.length; idx++) {\r\n                var jsrecord = request.jsrecords[idx];\r\n                switch (jsrecord.data[\"prods:rowState\"]) {\r\n                    case \"created\":\r\n                        jsrecord._tableRef.trigger(\"afterCreate\", this, jsrecord, request.success, request);\r\n                        this.trigger(\"afterCreate\", this, jsrecord, request.success, request);\r\n                        break;\r\n                    case \"modified\":\r\n                        jsrecord._tableRef.trigger(\"afterUpdate\", this, jsrecord, request.success, request);\r\n                        this.trigger(\"afterUpdate\", this, jsrecord, request.success, request);\r\n                        break;\r\n                    case \"deleted\":\r\n                        jsrecord._tableRef.trigger(\"afterDelete\", this, jsrecord, request.success, request);\r\n                        this.trigger(\"afterDelete\", this, jsrecord, request.success, request);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        //////////////////////////////////////////////////////////////////////////////////////////////\r\n        //\r\n        // Private method to return error for specified row \r\n        // from jsonObject's prods:errors object (before-data) sent over from AppServer\r\n        //\r\n        this._getErrorStringFromJsonObject = function (dataSetJsonObject, tableRef, prods_id) {\r\n            var tableJsonObject;\r\n            var errorsJsonObject = dataSetJsonObject[\"prods:errors\"];\r\n\r\n            if (errorsJsonObject) {\r\n                tableJsonObject = errorsJsonObject[tableRef._name];\r\n            }\r\n\r\n            if (tableJsonObject instanceof Array) {\r\n                for (var i = 0; i < tableJsonObject.length; i++) {\r\n\r\n                    var id = tableJsonObject[i][\"prods:id\"];\r\n                    if (id === prods_id) {\r\n                        var errorString = tableJsonObject[i][\"prods:error\"];\r\n                        return errorString === null ? \r\n                            \"Server returned unspecified error. Please check log files.\" : errorString;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return undefined;\r\n        };\r\n\r\n        this._fillSuccess = function (jsdo, success, request) {\r\n            var xhr = request.xhr,\r\n                properties;     \r\n            \r\n            // Need to check if responseMapping was specified; developer can specify\r\n            // plug-in to manipulate response \r\n            properties = jsdo.getMethodProperties(\"read\");\r\n            \r\n            if (properties && properties.mappingType) {\r\n                mapping = progress.data.PluginManager.getPlugin(properties.mappingType);\r\n                if (!mapping) {\r\n                    throw new Error(progress.data._getMsgText(\"jsdoMSG118\", properties.mappingType));\r\n                }\r\n                                \r\n                if (typeof (mapping.responseMapping) === \"function\") {\r\n                    request.response = mapping.responseMapping(jsdo, request.response, { operation: \"read\" });\r\n                }                \r\n            } \r\n\r\n            jsdo._clearData();\r\n            jsdo._mergeRead(request.response, xhr);   \r\n\r\n            // Set working record\r\n            for (var buf in jsdo._buffers) {\r\n                if (!jsdo._buffers[buf]._parent || !jsdo.useRelationships) {\r\n                    jsdo._buffers[buf]._setRecord(jsdo._buffers[buf]._findFirst());\r\n                }\r\n            }\r\n        };\r\n\r\n        this._fillComplete = function (jsdo, success, request) {\r\n            jsdo.trigger(\"afterFill\", jsdo, request.success, request);\r\n            if (request.deferred) {\r\n                if (success) {\r\n                    request.deferred.resolve(jsdo, success, request);\r\n                }\r\n                else {\r\n                    request.deferred.reject(jsdo, success, request);              \r\n                }\r\n            }\r\n        };\r\n\r\n        this._fillError = function (jsdo, success, request) {\r\n            jsdo._clearData();            \r\n            jsdo._updateLastErrors(jsdo, null, null, request);\r\n        };\r\n\r\n        this._undoCreate = function (tableRef, id) {\r\n            // Undo operation \r\n            // Remove record from JSDO memory\r\n            var entry = tableRef._index[id];\r\n            if (entry !== undefined) {\r\n                var index = entry.index;\r\n                tableRef._data[index] = null;\r\n            }\r\n            tableRef._hasEmptyBlocks = true;\r\n            delete tableRef._index[id];\r\n            delete tableRef._beforeImage[id];\r\n            // End - Undo operation\t\t\r\n        };\r\n\r\n        this._undoUpdate = function (tableRef, id, deleteProdsProps) {\r\n            /* Default to false */\r\n            if (typeof(deleteProdsProps) == 'undefined') {\r\n                deleteProdsProps = false;\r\n            }\r\n\r\n            // Undo operation\r\n            // Restore from before image\r\n            var record = tableRef._beforeImage[id];\r\n\r\n            // Before image points to an existing record\r\n            if (record) {\r\n                var index = tableRef._index[id].index;\r\n                tableRef._jsdo._copyRecord(tableRef, record, tableRef._data[index]);\r\n                if (deleteProdsProps)\r\n                    tableRef._jsdo._deleteProdsProperties(tableRef._data[index], true);\r\n            }\r\n            delete tableRef._beforeImage[id];\r\n            // End - Restore before image\t\t\r\n        };\r\n\r\n        this._undoDelete = function (tableRef, id, deleteProdsProps) {\r\n            /* Default to false */\r\n            if (typeof(deleteProdsProps) == 'undefined') {\r\n                deleteProdsProps = false;\r\n            }\r\n\r\n            // Restore from before image\r\n            var record = tableRef._beforeImage[id];\r\n\r\n            // Before image points to an existing record\r\n            if (record) {\r\n                var index = record._index;\r\n                delete record._index;\r\n                if (deleteProdsProps)\r\n                    tableRef._jsdo._deleteProdsProperties(record, true);\r\n\r\n                if ((index !== undefined) && (tableRef._data[index] === null)) {\r\n                    tableRef._data[index] = record;\r\n                }\r\n                else {\r\n                    tableRef._data.push(record);\r\n                    index = tableRef._data.length - 1;\r\n                }\r\n                tableRef._index[id] = new progress.data.JSIndexEntry(index);\r\n            }\r\n            delete tableRef._beforeImage[id];\r\n            // End - Restore before image\t\t\r\n        };\r\n\r\n        this._deleteComplete = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var jsrecord = request.jsrecord;\r\n\r\n            try {\r\n                // Before firing trigger, delete prods properties so they don't appear in data\r\n                jsdo._deleteProdsProperties(jsrecord.data, false);\r\n\r\n                jsrecord._tableRef.trigger(\"afterDelete\", jsdo, jsrecord, request.success, request);\r\n                jsdo.trigger(\"afterDelete\", jsdo, jsrecord, request.success, request);\r\n\r\n            } finally {\r\n                request.complete = true;\r\n                jsdo._checkSaveComplete(xhr);\r\n            }\r\n        };\r\n\r\n        this._deleteSuccess = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var jsonObject = request.response;\r\n            var beforeJsonObject = null;\r\n            var dataSetJsonObject = null;\r\n            var data;\r\n\r\n            //Even though this is _deleteSuccess, if before-image data is returned, the call of \r\n            // delete operation could return a success, but we have to check if error was returned \r\n            // in before-image data \r\n            var hasError = false;\r\n            if (jsdo._useBeforeImage(\"delete\")) {\r\n                dataSetJsonObject = jsonObject[jsdo._dataSetName];\r\n                beforeJsonObject = dataSetJsonObject[\"prods:before\"];\r\n\r\n                if (beforeJsonObject) {\r\n                    data = beforeJsonObject[request.jsrecord._tableRef._name];\r\n                }\r\n            }\r\n            else {\r\n                data = jsdo._arrayFromDataObject(jsonObject, request.jsrecord._tableRef);\r\n            }\r\n\r\n            if (data instanceof Array) {\r\n                if (data.length > 1) {\r\n                    request.success = false;\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG100\"));\r\n                }\r\n            }\r\n\r\n            if (beforeJsonObject) {\r\n                hasError = jsdo._checkForDeleteError(dataSetJsonObject, xhr);\r\n            }\r\n\r\n            if (hasError)\r\n                request.success = false;\r\n\r\n            if (jsdo.autoApplyChanges) {\r\n                if (!hasError) {\r\n                    // Clear before image\r\n                    delete request.jsrecord._tableRef._beforeImage[request.jsrecord.data._id];\r\n                    // End - Clear before image\r\n                }\r\n                else {\r\n                    jsdo._deleteError(jsdo, success, request);\r\n                }\r\n            }\r\n        };\r\n\r\n        this._deleteError = function (jsdo, success, request) {\r\n            if (jsdo.autoApplyChanges) {\r\n                jsdo._undoDelete(request.jsrecord._tableRef, request.jsrecord.data._id);\r\n            }\r\n        };\r\n\r\n        this._createComplete = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var jsrecord = request.jsrecord;\r\n\r\n            try {\r\n                // Before firing trigger, delete prods properties so they don't appear in data\r\n                jsdo._deleteProdsProperties(jsrecord.data, false);\r\n\r\n                jsrecord._tableRef.trigger(\"afterCreate\", jsdo, jsrecord, request.success, request);\r\n                jsdo.trigger(\"afterCreate\", jsdo, jsrecord, request.success, request);\r\n            } finally {\r\n                request.complete = true;\r\n                jsdo._checkSaveComplete(xhr);\r\n            }\r\n        };\r\n\r\n        this._createSuccess = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var record = request.response;\r\n            var hasError = jsdo._mergeUpdateForCUD(record, xhr);\r\n\r\n            if (hasError)\r\n                request.success = false;\r\n\r\n            if (jsdo.autoApplyChanges) {\r\n                if (!hasError) {\r\n                    // Clear before image\r\n                    delete request.jsrecord._tableRef._beforeImage[request.jsrecord.data._id];\r\n                    // End - Clear before image\r\n                }\r\n                else {\r\n                    jsdo._createError(jsdo, success, request);\r\n                }\r\n            }\r\n        };\r\n\r\n        this._createError = function (jsdo, success, request) {\r\n            if (jsdo.autoApplyChanges) {\r\n                jsdo._undoCreate(request.jsrecord._tableRef, request.jsrecord.data._id);\r\n            }\r\n        };\r\n\r\n\r\n        this._updateComplete = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var jsrecord = request.jsrecord;\r\n            try {\r\n                // Before firing trigger, delete prods properties so they don't appear in data\r\n                jsdo._deleteProdsProperties(jsrecord.data, false);\r\n\r\n                jsrecord._tableRef.trigger(\"afterUpdate\", jsdo, jsrecord, request.success, request);\r\n                jsdo.trigger(\"afterUpdate\", jsdo, jsrecord, request.success, request);\r\n            } finally {\r\n                request.complete = true;\r\n                jsdo._checkSaveComplete(xhr);\r\n            }\r\n        };\r\n\r\n        this._updateSuccess = function (jsdo, success, request) {\r\n            var xhr = request.xhr;\r\n            var hasError = jsdo._mergeUpdateForCUD(request.response, xhr);\r\n\r\n            if (hasError) {\r\n                request.success = false;\r\n            }\r\n\r\n            if (jsdo.autoApplyChanges) {\r\n                if (!hasError) {\r\n                    request.success = true;\r\n                    // Clear before image\r\n                    delete request.jsrecord._tableRef._beforeImage[request.jsrecord.data._id];\r\n                    // End - Clear before image\t\t\r\n                }\r\n                else {\r\n                    jsdo._updateError(jsdo, success, request);\r\n                }\r\n            }\r\n        };\r\n\r\n        this._updateError = function (jsdo, success, request) {\r\n\r\n            if (jsdo.autoApplyChanges) {\r\n                request.success = false;\r\n                jsdo._undoUpdate(request.jsrecord._tableRef, request.jsrecord.data._id);\r\n            }\r\n        };\r\n\r\n\r\n        this._saveChangesSuccess = function (jsdo, success, request) {\r\n            var records = request.response;\r\n            jsdo._mergeUpdateForSubmit(records, request.xhr);\r\n\r\n            // Ensure that that the _lastErrors variable has been cleared \r\n\t\t\tjsdo._clearErrors();\r\n            var changes = jsdo.getChanges();\r\n            jsdo._updateLastErrors(jsdo, null, changes);\r\n\r\n\t\t\tjsdo._setAllRecordsRejected(changes);            \r\n\r\n            if (jsdo.autoApplyChanges) {\r\n                jsdo._applyChanges();\r\n            }\r\n        };\r\n\r\n\r\n        this._saveChangesError = function (jsdo, success, request) {\r\n\t\t\tjsdo._setAllRecordsRejected(true);\r\n            if (jsdo.autoApplyChanges) {\r\n                jsdo.rejectChanges();\r\n            }            \r\n            jsdo._updateLastErrors(jsdo, null, null, request);\r\n        };\r\n\r\n        /*  _saveChangesSuccessTT\r\n            internal function called after a Submit of a temp-table (not DataSet) returns success\r\n            This method does not attempt to do any merging of records into the JSDO memory. The\r\n            absence of _id for the records means that the only way we could possibly do a \"merge\"\r\n            would be to delete the changed rceords in the JSDO memory and then add the records\r\n            that were returned form the data service, but that would invalidate the _id's that\r\n            the Kendo datasource depends on. The application programmmer must do the merging in\r\n            the afterSaveChanges handler\r\n\r\n            *** Submit(temp-table) is not supported. This method will be removed in a future version. ***\r\n         */         \r\n        this._saveChangesSuccessTT = function (jsdo, success, request) {\r\n            var changes;\r\n\r\n            // Ensure that that the _lastErrors variable has been cleared \r\n            jsdo._clearErrors();\r\n            changes = jsdo.getChanges();\r\n            jsdo._updateLastErrors(jsdo, null, changes);\r\n            jsdo._setAllRecordsRejected(false);\r\n        };\r\n\r\n        this._saveChangesComplete = function (jsdo, success, request) {\r\n            // Success with errors\r\n            if ((request.xhr.status >= 200 && request.xhr.status < 300)\r\n                && (jsdo._lastErrors.length > 0 || jsdo._someRecordsRejected)) {\r\n                request.success = false;\r\n            }\r\n\r\n            // If saveChanges(true) was called, then we must fire create, update and delete triggers \r\n            // for each record that was sent to submit operation\r\n            if (jsdo._useSubmit === true) {\r\n                jsdo._fireCUDTriggersForSubmit(request);\r\n            }\r\n\r\n            jsdo._undefWorkingRecord();\r\n            jsdo._fireAfterSaveChanges(request.success, request);\r\n\r\n        };\r\n\r\n        this._fireAfterSaveChanges = function (success, request) {\r\n            this.trigger(\"afterSaveChanges\", this, success, request);\r\n            \r\n            if (request.jsrecords) {\r\n                if (request.deferred) {\r\n                    if (success) {\r\n                        request.deferred.resolve(this, success, request);\r\n                    }\r\n                    else {\r\n                        request.deferred.reject(this, success, request);                    \r\n                    }             \r\n                }\r\n            }\r\n            else if (request.batch && request.batch.deferred) {\r\n                if (success) {\r\n                    request.batch.deferred.resolve(this, success, request);\r\n                }\r\n                else {\r\n                    request.batch.deferred.reject(this, success, request);                    \r\n                }\r\n            }\r\n\r\n            // Clear error string when autoApplyChanges is true\r\n            var clearErrorString = this.autoApplyChanges;\r\n\r\n            // This will be set if submit operation was performed\r\n            if (request.jsrecords) {\r\n                for (var idx = 0; idx < request.jsrecords.length; idx++) {\r\n                    var jsrecord = request.jsrecords[idx];\r\n                    if (clearErrorString) {\r\n                        delete jsrecord.data._errorString;\r\n                    }\r\n                    delete jsrecord.data[\"prods:rowState\"];\r\n                }\r\n            }\r\n            else if (request.batch && request.batch.operations) {\r\n                for (var idx = 0; idx < request.batch.operations.length; idx++) {\r\n                    var jsrecord = request.batch.operations[idx].jsrecord;\r\n                    if (clearErrorString) {\r\n                        delete jsrecord.data._errorString;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Returns errors in response associated with the HTTP request.records related to the specified jsrecord.\r\n         */        \r\n        this._getErrorsFromRequest = function(request) {\r\n            var errors = [], // Array of objects with properties: type, id, error, errorNum, responseText\r\n                errorArray = [],\r\n                errorObject,\r\n                retValString,\r\n                j,\r\n                i;\r\n\r\n            if (request && !request.success) {\r\n               if (request.xhr.status >= 400 && request.xhr.status < 600) {\r\n                    try {\r\n                        responseObject = JSON.parse(request.xhr.responseText);\r\n                        \r\n                        // responseText could be an array, an object or just text.\r\n                        // If it is an array, each object would have properties _errors and optional _retVal.\r\n                        // If it is not an array, the object would have properties _errors and optional _retVal.\r\n                        // If it is text, the content could also be an HTML page, this error is handle using \"HTTP Status\".\r\n                        if (responseObject instanceof Array) {\r\n                            errorArray = responseObject;\r\n                        } else if (responseObject instanceof Object) {\r\n                            errorArray.push(responseObject);\r\n                        }\r\n                        for (i = 0; i < errorArray.length; i += 1) {\r\n                            errorObject = errorArray[i];\r\n                            if (errorObject._retVal) {\r\n                                errors.push({\r\n                                    type: progress.data.JSDO.RETVAL,\r\n                                    error: errorObject._retVal\r\n                                });\r\n                                retValString =  errorObject._retVal;\r\n                            } else {\r\n                                retValString = null;\r\n                            }\r\n                            if (errorObject._errors instanceof Array) {\r\n                                for (j = 0; j < errorObject._errors.length; j += 1) {                                    \r\n                                    if ((errorObject._errors[j]._errorNum === 0) \r\n                                        && (errorObject._errors[j]._errorMsg === retValString)) {\r\n                                        // Suppress additional error msg if it is same as return value\r\n                                        continue;\r\n                                    }\r\n                                    errors.push({\r\n                                        type: progress.data.JSDO.APP_ERROR,\r\n                                        error: errorObject._errors[j]._errorMsg,\r\n                                        errorNum: errorObject._errors[j]._errorNum\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Ignore exceptions\r\n                    }\r\n                }\r\n                if (request.exception) {\r\n                    errors.push({\r\n                        type: progress.data.JSDO.ERROR,\r\n                        error: request.exception\r\n                    });\r\n                }\r\n                if (errors.length === 0 \r\n                    && request.xhr \r\n                    && (request.xhr.status >= 400 && request.xhr.status < 600)) {\r\n                    errors.push({\r\n                        type: progress.data.JSDO.ERROR,\r\n                        error: \"Error: HTTP Status \" + request.xhr.status + \" \" + request.xhr.statusText,\r\n                        responseText: request.xhr.responseText\r\n                    });\r\n                }                \r\n            }\r\n            return errors;\r\n        };\r\n        \r\n        this._updateLastErrors = function (jsdo, batch, changes, request) {\r\n            var errors,\r\n                errorText,\r\n                responseObject,\r\n                i,\r\n                j,\r\n                buf;\r\n            \r\n            if (batch) {\r\n                if (batch.operations === undefined) return;\r\n                for (i = 0; i < batch.operations.length; i++) {\r\n                    request = batch.operations[i];\r\n                    if (!request.success && request.xhr) {\r\n                        if (request.xhr.status  >= 200 && request.xhr.status < 300) {\r\n                            // Add error string to jsdo._lastErrors\r\n                            jsdo._lastErrors.push({errorString: request.jsrecord.data._errorString});\r\n                            // Add error object to jsdo.<table-ref>._lastErrors\r\n                            jsdo._buffers[request.jsrecord._tableRef._name]._lastErrors.push({\r\n                                    type: progress.data.JSDO.DATA_ERROR,\r\n                                    id: request.jsrecord.data._id,\r\n                                    error: request.jsrecord.data._errorString});\r\n                        }                        \r\n                        else {\r\n                            errors = this._getErrorsFromRequest(request);\r\n                            errorText = \"\";\r\n                            for (j = 0; j < errors.length; j += 1) {\r\n                                if (errors.length > 1 && errors[j].error.indexOf(\"(7243)\") != -1) {\r\n                                    // If there are more error messages\r\n                                    //      supress error \"The Server application has returned an error. (7243)\"\r\n                                    continue;\r\n                                }\r\n                                // Add error to table reference\r\n                                if (request.jsrecord \r\n                                    && (errors[j].type === progress.data.JSDO.APP_ERROR\r\n                                       || errors[j].type === progress.data.JSDO.RETVAL)) {\r\n                                    errors[j].id = request.jsrecord.data._id;\r\n                                    request.jsrecord._tableRef._lastErrors.push(errors[j]);\r\n                                }\r\n                                if (errorText.length === 0) {\r\n                                    errorText = errors[j].error;\r\n                                }\r\n                                else {\r\n                                    errorText += \"\\n\" + errors[j].error;\r\n                                }\r\n                            }\r\n                            // Add error string to jsdo._lastErrors                            \r\n                            jsdo._lastErrors.push({errorString: errorText});                            \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (changes instanceof Array) {\r\n                for (i = 0; i < changes.length; i++) {\r\n                    if (changes[i].record && changes[i].record.data._errorString !== undefined) {\r\n                        jsdo._lastErrors.push({errorString: changes[i].record.data._errorString});\r\n                        jsdo._buffers[changes[i].record._tableRef._name]._lastErrors.push({\r\n                                type: progress.data.JSDO.DATA_ERROR,                            \r\n                                id: changes[i].record.data._id,\r\n                                error: changes[i].record.data._errorString});\r\n                    }\r\n                }\r\n            }\r\n            else if (request \r\n                     && !request.success \r\n                     && request.xhr \r\n                     && ((request.xhr.status >= 400 && request.xhr.status < 600) || request.xhr.status === 0)) {\r\n                errors = this._getErrorsFromRequest(request);\r\n                errorText = \"\";\r\n                for (j = 0; j < errors.length; j += 1) {\r\n                    if (errors.length > 1 && errors[j].error.indexOf(\"(7243)\") != -1) {\r\n                        // If there are more error messages\r\n                        //      supress error \"The Server application has returned an error. (7243)\"     \r\n                        continue;\r\n                    }\r\n                    // Add error to all table references\r\n                    for (buf in this._buffers) {\r\n                        this._buffers[buf]._lastErrors.push(errors[j]);\r\n                    }\r\n                    if (errorText.length === 0) {\r\n                        errorText = errors[j].error;\r\n                    }\r\n                    else {\r\n                        errorText += \"\\n\" + errors[j].error;\r\n                    }\r\n                }\r\n                jsdo._lastErrors.push({errorString: errorText});\r\n            }\r\n        };\r\n\r\n        // Check if all the xhr operations associated with the batch for which\r\n        // this xhr object is related have completed (not necessarily to success).\r\n        // If all XHR operations have completed this fires 'afterSaveChanges' event\r\n        this._checkSaveComplete = function (xhr) {\r\n            if (xhr.request) {\r\n                var jsdo = xhr.request.jsdo;\r\n                var batch = xhr.request.batch;\r\n                // OE00229270 Should only do afterSaveChanges if _async\r\n                if (jsdo && batch && jsdo._async) {\r\n                    if (jsdo._isBatchComplete(batch)) {\r\n                        var success = jsdo._isBatchSuccess(batch);\r\n                        var request = {\r\n                            batch: batch,\r\n                            success: success\r\n                        };\r\n                        jsdo._undefWorkingRecord();\r\n\r\n                        // Save error messages\r\n                        jsdo._lastErrors = [];\r\n                        if (!success && batch.operations) {\r\n                            jsdo._updateLastErrors(jsdo, batch, null);\r\n                        }\r\n                        this._setAllRecordsRejected(batch);\r\n\r\n                        jsdo._fireAfterSaveChanges(success, request);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        /*\r\n         * determine if a batch of XHR requests has completed in which all requests are successful\r\n         */\r\n        this._isBatchSuccess = function (batch) {            \r\n            if (batch.operations) {\r\n                for (var i = 0; i < batch.operations.length; i++) {\r\n                    if (!batch.operations[i].success) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n\r\n        /*\r\n         * determine if all XHR requests from the batch of saves have completed (not necessarily to success) \r\n         */\r\n        this._isBatchComplete = function (batch) {\r\n            if (batch.operations) {\r\n                for (var i = 0; i < batch.operations.length; i++) {\r\n                    var request = batch.operations[i];\r\n                    // we have to check against the 'complete' flag because xhr.readyState \r\n                    // might be set async by the browser\r\n                    // while we're still in the middle of processing some other requests's response\r\n                    if (!request.complete) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n\r\n        this._mergeInvoke = function (jsonObject, xhr) {\r\n            var operation;\r\n            if (xhr.request.fnName !== undefined\r\n                && xhr.jsdo._resource.fn[xhr.request.fnName] !== undefined) {\r\n                operation = xhr.jsdo._resource.fn[xhr.request.fnName].operation;\r\n            }\r\n            else\r\n                operation = null;\r\n            if (operation === undefined) {\r\n                // Operation data is only required for invoke operations with mergeMode: true\r\n                operation = null;\r\n                for (var i = 0; i < xhr.jsdo._resource.operations.length; i++) {\r\n                    if (xhr.jsdo._resource.operations[i].name == xhr.request.fnName) {\r\n                        operation = xhr.jsdo._resource.operations[i];\r\n                        break;\r\n                    }\r\n                }\r\n                xhr.jsdo._resource.fn[xhr.request.fnName].operation = operation;\r\n            }\r\n            if (operation !== null && operation.mergeMode) {\r\n                try {\r\n                    var mergeMode = progress.data.JSDO[\"MODE_\" + operation.mergeMode.toUpperCase()];\r\n                    if (mergeMode === null) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG030\", \"mergeMode property\", \r\n                            \"EMPTY, APPEND, MERGE or REPLACE\"));\r\n                    }\r\n                    if (xhr.jsdo._resource.idProperty === undefined) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG110\", this._resource.name, \r\n                            \" by mergeMode property in invoke operation\"));\r\n                    }\r\n                    var dataParameterName;\r\n                    if (xhr.jsdo.isDataSet()) {\r\n                        dataParameterName = xhr.jsdo._resource._dataSetName;\r\n                    }\r\n                    else if (xhr.jsdo._resource.dataProperty !== undefined) {\r\n                        dataParameterName = xhr.jsdo._resource.dataProperty;\r\n                    }\r\n                    else if (xhr.jsdo._resource._tempTableName !== undefined) {\r\n                        dataParameterName = xhr.jsdo._resource._tempTableName;\r\n                    }\r\n                    else {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG111\", \"\"));\r\n                    }\r\n\r\n                    var found = false;\r\n                    for (var i = 0; i < operation.params.length; i++) {\r\n                        if (operation.params[i].name == dataParameterName) {\r\n                            if (operation.params[i].type.indexOf('RESPONSE_BODY') != -1) {\r\n                                if ((operation.params[i].xType !== undefined)\r\n                                    && (operation.params[i].xType != 'DATASET')\r\n                                    && (operation.params[i].xType != 'TABLE')\r\n                                    && (operation.params[i].xType != 'ARRAY')) {\r\n                                    throw new Error(msg.getMsgText(\"jsdoMSG113\", operation.params[i].xType, \r\n                                        dataParameterName, xhr.request.fnName));\r\n                                }\r\n                                found = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!found) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG112\", dataParameterName, xhr.request.fnName));\r\n                    }\r\n                    xhr.jsdo.addRecords(xhr.request.response[dataParameterName], \r\n                        mergeMode, [xhr.jsdo._resource.idProperty], false, true);\r\n                }\r\n                catch (e) {\r\n                    xhr.request.success = false;\r\n                    xhr.request.exception = e;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.onReadyStateChangeGeneric = function () {\r\n            var xhr = this;\r\n            if (xhr.readyState == 4) {\r\n                var request = xhr.request;\r\n\r\n                /* try to parse response even if request is considered \"failed\" due to http status */\r\n                try {\r\n                    request.response = JSON.parse(xhr.responseText);\r\n                    // in some cases the object back from appserver has a \"response\" property which represents\r\n                    // the real content of the JSON...happens when multiple output parameters are returned.\r\n                    // this of course assumes no one names their root object \"response\".\r\n                    if (request.response && request.response.response) {\r\n                        request.response = request.response.response;\r\n                    }\r\n                } catch (e) {\r\n                    request.response = undefined;\r\n                }\r\n\r\n                try {\r\n                    if ((xhr.status >= 200 && xhr.status < 300) \r\n                        || (xhr.status === 0 && xhr.responseText !== \"\")) {\r\n                            \r\n                        request.success = true;\r\n                        // get the Client Context ID (AppServer ID)\r\n                        xhr.jsdo._session._saveClientContextId(xhr); \r\n                        if ((typeof xhr.onSuccessFn) == 'function') {\r\n                            var operation;\r\n                            if (xhr.request.fnName !== undefined\r\n                                && xhr.jsdo._resource.fn[xhr.request.fnName] !== undefined) {\r\n                                operation = xhr.jsdo._resource.fn[xhr.request.fnName].operation;\r\n                            }\r\n                            else\r\n                                operation = null;\r\n                            if ((operation === undefined) || (operation !== null && operation.mergeMode))\r\n                                xhr.jsdo._mergeInvoke(request.response, xhr);\r\n                            if (request.success)\r\n                                xhr.onSuccessFn(xhr.jsdo, request.success, request);\r\n                            else if ((typeof xhr.onErrorFn) == 'function')\r\n                                xhr.onErrorFn(xhr.jsdo, request.success, request);\r\n                        }\r\n\r\n                    } else {\r\n                        request.success = false;\r\n                        if (xhr.status === 0) {\r\n                            request.exception = new Error(msg.getMsgText(\"jsdoMSG101\"));\r\n                        }\r\n                        if ((typeof xhr.onErrorFn) == 'function') {\r\n                            xhr.onErrorFn(xhr.jsdo, request.success, request);\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    request.success = false;\t\t\t\t\r\n                    request.exception = e;\r\n                    if ((typeof xhr.onErrorFn) == 'function') {\r\n                        xhr.onErrorFn(xhr.jsdo, request.success, request);\r\n                    }\r\n                }\r\n                // get the Client Context ID (AppServer ID)\r\n                xhr.jsdo._session._checkServiceResponse(xhr, request.success, request);\r\n\r\n                if ((typeof xhr.onCompleteFn) == 'function') {\r\n                    xhr.onCompleteFn(xhr.jsdo, request.success, request);\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Accepts changes for all table references in the JSDO.\r\n         */\r\n        this.acceptChanges = function () {\r\n            for (var buf in this._buffers) {\r\n                this._buffers[this._buffers[buf]._name].acceptChanges();\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Rejects changes for the table references in the JSDO.\r\n         */\r\n        this.rejectChanges = function () {\r\n            for (var buf in this._buffers) {\r\n                this._buffers[this._buffers[buf]._name].rejectChanges();\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Returns an array with changes for all table references in the JSDO.\r\n         */\r\n        this.getChanges = function () {\r\n            var result = [];\r\n            for (var buf in this._buffers) {\r\n                var changes = this._buffers[this._buffers[buf]._name].getChanges();\r\n                result = result.concat(changes);\r\n            }\r\n            return result;\r\n        };\r\n\r\n        this.hasChanges = function () {\r\n            for (var buf in this._buffers) {\r\n                if (this._buffers[this._buffers[buf]._name].hasChanges())\r\n                    return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        /*\r\n         * Private method to apply changes for all table references in the JSDO.\r\n         * If _errorString has been set for a row, rejectRowChanges() is called. \r\n         * If it has not been set, acceptRowChanges() is called.\r\n         */\r\n        this._applyChanges = function () {\r\n            for (var buf in this._buffers) {\r\n                this._buffers[this._buffers[buf]._name]._applyChanges();\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Accepts row changes for the working record using the JSDO reference.\r\n         */\r\n        this.acceptRowChanges = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.acceptRowChanges();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"acceptRowChanges()\"));\r\n        };\r\n\r\n        /*\r\n         * Reject row changes for the working record using the JSDO reference.\r\n         */\r\n        this.rejectRowChanges = function () {\r\n            if (this._defaultTableRef)\r\n                return this._defaultTableRef.rejectRowChanges();\r\n            throw new Error(msg.getMsgText(\"jsdoMSG001\", \"rejectRowChanges()\"));\r\n        };\r\n        \r\n        /*\r\n         * Sets complete set of properties for the jsdo. All existing properties are replaced with new set\r\n         */\r\n        this.setProperties = function( propertiesObject ) {\r\n           var prop;\r\n\r\n            if (arguments.length < 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', 'setProperties', 1)); \r\n            }\r\n            if (arguments.length > 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', 'setProperties', 1)); \r\n            }\r\n            if ( typeof propertiesObject == \"object\" ) {\r\n                /* Copy properties of the propertiesObject argument into _properties.\r\n                 * Note that if object passed in has a prototype, this code copies them too)\r\n                 */\r\n                this._properties = {};\r\n                \r\n                for (prop in propertiesObject) {\r\n                    if( propertiesObject.hasOwnProperty(prop) )  {\r\n                        if (typeof propertiesObject[prop] !== \"function\" ) {\r\n                            this._properties[prop] = propertiesObject[prop];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if ( (propertiesObject === undefined) || (propertiesObject === null) ) {\r\n                this._properties = {};\r\n            }\r\n            else {\r\n                // {1}: Parameter {1} must be of type {3} in {4} call.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG121\", 'JSDO', 1, 'Object',\r\n                                                          'setProperties')); \r\n            }\r\n        };\r\n\r\n        /* \r\n         *  Set or remove an individual property in the property set maintained by the jsdo. \r\n         *  This operates only on the property identified by propertyName; \r\n         *  all other existing properties remain as they are.\r\n         *  If the propertyName is not part of the context, this call adds it.\r\n         *  If it exists, it is updated, unless -\r\n         *  If propertyValue is undefined, this call removes the property\r\n         */\r\n        this.setProperty = function( propertyName, propertyValue) {\r\n            if (arguments.length < 2) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', \r\n                                                           'setProperty', 2)); \r\n            }\r\n            if (arguments.length !== 2) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", \"JSDO\",\r\n                                                          \"setProperty\", 2)); \r\n            }\r\n            if (typeof propertyName !== \"string\") {\r\n                // {1}: Parameter {1} must be of type {3} in {4} call.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG121\", 'JSDO', 1, 'string',\r\n                                                          'setProperty')); \r\n            }\r\n\r\n            if ( propertyValue === undefined ) {\r\n                delete this._properties[propertyName]; // OK if it doesn't exist -- no error\r\n            }\r\n            else {\r\n                this._properties[propertyName] = propertyValue;\r\n            }\r\n        };\r\n         \r\n        /* \r\n         * Gets the set of jsdo properties. Returns an object containing all the properties\r\n         */\r\n        this.getProperties = function( ) {\r\n            if (arguments.length > 0) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', 'getProperties', 0)); \r\n            }\r\n            return this._properties;\r\n        };\r\n        \r\n        /*  Gets the value of an individual property in the jsdo property set\r\n         */\r\n        this.getProperty = function( propertyName) {\r\n            if (arguments.length < 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be {3}.\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', 'getProperty', 1)); \r\n            }\r\n            if (arguments.length > 1) {\r\n                // {1}: Incorrect number of arguments in {2} call. There should be only {3}.\";\r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG122\", 'JSDO', 'getProperty', 1)); \r\n            }\r\n            return this._properties[propertyName];\r\n            \r\n        };\r\n\r\n        ///////////////////////////////////////////////////////////////////////////\r\n        //\r\n        //  The following methods provide support for Object Pesistence\r\n\r\n        /*\r\n         * Saves JSDO memory (and optionally pending changes) to local storage.\r\n         *\r\n         * saveLocal()\r\n         * saveLocal(name)\r\n         * saveLocal(dataMode)\r\n         * saveLocal(name, dataMode)\r\n         *\r\n         */\r\n        this.saveLocal = function saveLocal(arg1, arg2) {\r\n            var name;\r\n            var dataMode;\r\n\r\n            if (arguments.length > 2) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", arguments.callee.name + \"()\"));\r\n            }\r\n\r\n            if (typeof(arg1) == 'string' || arg1 === null || arg1 === undefined) {\r\n                name = arg1;\r\n                dataMode = arg2;\r\n            }\r\n            else {\r\n                name = null;\r\n                dataMode = arg1;\r\n            }\r\n\r\n            if (name === undefined || name === null || name === \"\") {\r\n                name = \"jsdo_\" + this._resource.service.name + \"_\" + this._resource.name;\r\n            }\r\n            if (typeof(dataMode) == 'undefined') {\r\n                dataMode = progress.data.JSDO.ALL_DATA;\r\n            }\r\n            else {\r\n                switch (dataMode) {\r\n                    case progress.data.JSDO.ALL_DATA:\r\n                    case progress.data.JSDO.CHANGES_ONLY:\r\n                        break;\r\n                    default:\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG115\", arguments.callee.name));\r\n                }\r\n            }\r\n\r\n            if (this._localStorage === null) {\r\n                // Must first instantiate _localStorage object\r\n                this._localStorage = new progress.data.LocalStorage();\r\n            }\r\n\r\n            var dataObj = this._prepareDataObjectForLocalStorage(dataMode);\r\n            this._localStorage.saveToLocalStorage(name, dataObj);\r\n        };\r\n\r\n        /*\r\n         * Reads localStorage (based upon name) into JSDO memory \r\n         * (localStorage may or may not have pending changes).\r\n         * readLocal()\r\n         * readLocal(name)\r\n         *\r\n         */\r\n        this.readLocal = function readLocal(name) {\r\n            if (arguments.length > 1) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", arguments.callee.name + \"()\"));\r\n            }\r\n            if (name === undefined || name === null || name === \"\") {\r\n                name = \"jsdo_\" + this._resource.service.name + \"_\" + this._resource.name;\r\n            }\r\n            else if (typeof(name) != 'string') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG116\", \"name\", arguments.callee.name + \"()\"));\r\n            }\r\n\r\n            if (this._localStorage === null) {\r\n                this._localStorage = new progress.data.LocalStorage();\r\n            }\r\n\r\n            var object = this._localStorage.readFromLocalStorage(name);\r\n\r\n            // If storage area does not exist (i.e. object = null) then don't update JSDO local memory\r\n            if (object) {\r\n                if (this._hasMatchingSchema(object) === false)\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG117\", name));\r\n\r\n                // For readLocal(), JSDO should first be emptied of data, so using MODE_EMPTY\r\n                this._restoreFromLocalStorage(object, progress.data.JSDO.MODE_EMPTY);\r\n            }\r\n\r\n            return object !== null;\r\n        };\r\n\r\n        /*\r\n         * Reads localStorage (based upon name) into JSDO memory \r\n         * (localStorage may or may not have pending changes).\r\n         * addLocalRecords(addMode)\r\n         * addLocalRecords(addMode, keyFields)\r\n         * addLocalRecords(name, addMode)\r\n         * addLocalRecords(name, addMode, keyFields)\t\r\n         */\r\n        this.addLocalRecords = function addLocalRecords(arg1, arg2, arg3) {\r\n            var name;\r\n            var addMode;\r\n            var keyFields;\r\n\r\n            if (arguments.length < 1) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", arguments.callee.name + \"()\"));\r\n            }\r\n\r\n            if (typeof(arg1) == 'string') {\r\n                name = arg1;\r\n                addMode = arg2;\r\n                keyFields = arg3;\r\n            }\r\n            else {\r\n                name = \"jsdo_\" + this._resource.service.name + \"_\" + this._resource.name;\r\n                addMode = arg1;\r\n                keyFields = arg2;\r\n            }\r\n\r\n            if (typeof(name) == 'undefined' || name === null || name === \"\") {\r\n                name = \"jsdo_\" + this._resource.service.name + \"_\" + this._resource.name;\r\n            }\r\n            else if (typeof(name) != 'string') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG116\", \"name\", arguments.callee.name + \"()\"));\r\n            }\r\n\r\n            if (addMode != progress.data.JSDO.MODE_REPLACE) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG115\", arguments.callee.name));\r\n            }\r\n\r\n            if (this._localStorage === null) {\r\n                this._localStorage = new progress.data.LocalStorage();\r\n            }\r\n\r\n            var object = this._localStorage.readFromLocalStorage(name);\r\n\r\n            // If storage area does not exist (i.e. object = null) then don't update JSDO local memory\r\n            if (object) {\r\n                if (this._hasMatchingSchema(object) === false)\r\n                    throw new Error(msg.getMsgText(\"jsdoMSG117\", name));\r\n\r\n                try {\r\n                    this._restoreFromLocalStorage(object, addMode, keyFields);\r\n                }\r\n                catch (e) {\r\n                    var text = e.message;\r\n                    throw new Error(text.replace(new RegExp('addRecords', 'g'), 'addLocalRecords'));\r\n                }\r\n            }\r\n\r\n            return object !== null;\r\n        };\r\n\r\n\r\n        /*\r\n         * This method returns True if each buffer in the jsdo contains a primary key.\r\n         */\r\n        this._containsPrimaryKeys = function _containsPrimaryKeys() {\r\n\r\n            for (var buf in this._buffers) {\r\n                if (this._buffers[buf]._primaryKeys === null)\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        /*\r\n         * Compares JSDO's dataset/table names with those in specified storage object.\r\n         * Returns true if they match (or if storageObject is null or empty), else false.\r\n         */\r\n        this._hasMatchingSchema = function _hasMatchingSchema(storageObject) {\r\n            var isValid = true;\r\n\r\n            if (storageObject === null || (Object.keys(storageObject).length === 0))\r\n                return true;\r\n\r\n\r\n            if (this._dataSetName) {\r\n                if (storageObject[this._dataSetName]) {\r\n                    for (var buf in this._buffers)\r\n                        if (storageObject[this._dataSetName][buf] === undefined) {\r\n                            isValid = false;\r\n                            break;\r\n                        }\r\n                }\r\n                else\r\n                    isValid = false; // dataset should be in storage area\r\n            }\r\n            else if (this._dataProperty) {\r\n                // If array, we had to wrap in \"fake\" dataset, so unwrap it\r\n                storageObject = storageObject[\"_localStorage\"];\r\n                if (storageObject === undefined || storageObject[this._dataProperty] === undefined)\r\n                    isValid = false;\r\n            }\r\n            else {\r\n                // If temp-table, we had to wrap in \"fake\" dataset, so unwrap it\r\n                storageObject = storageObject[\"_localStorage\"];\r\n                if (storageObject === undefined || storageObject[this._defaultTableRef._name] === undefined)\r\n                    isValid = false;\r\n            }\r\n\r\n            return isValid;\r\n        };\r\n\r\n\r\n        /*\r\n         * Clears the data saved to local storage.\r\n         *\r\n         * deleteLocal()\r\n         * deleteLocal(name)\r\n         */\r\n        this.deleteLocal = function deleteLocal(name) {\r\n            if (arguments.length > 1) {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"JSDO\", arguments.callee.name + \"()\"));\r\n            }\r\n            if (name === undefined || name === null || name === \"\") {\r\n                name = \"jsdo_\" + this._resource.service.name + \"_\" + this._resource.name;\r\n            }\r\n            else if (typeof(name) != 'string') {\r\n                throw new Error(msg.getMsgText(\"jsdoMSG116\", \"name\", arguments.callee.name + \"()\"));\r\n            }\r\n\r\n            if (this._localStorage === null) {\r\n                this._localStorage = new progress.data.LocalStorage();\r\n            }\r\n            this._localStorage.clearLocalStorage(name);\r\n        };\r\n\r\n\r\n        // This method is used by saveLocal() to return a jsonObject with current JSDO data based upon option.\r\n        //\r\n        // In order to take advantage of existing code (createChangeSet() and addRecords()) and particularly\r\n        // to use the processing of before-data in addRecords(), for tables and arrays, we create a dummy\r\n        // dataset name: _localStorage.\r\n        this._prepareDataObjectForLocalStorage = function (option) {\r\n\r\n            var storageObject = {};\r\n\r\n            // DataSets\r\n            if (this._dataSetName) {\r\n                switch (option) {\r\n                    case progress.data.JSDO.ALL_DATA:\r\n                        storageObject = this._createDataAndChangeSet(this._dataSetName);\r\n                        break;\r\n\r\n                    case progress.data.JSDO.CHANGES_ONLY:\r\n                        storageObject = this._createChangeSet(this._dataSetName, true);\r\n                        break;\r\n                }\r\n            }\r\n            // Arrays\r\n            else if (this._dataProperty) {\r\n                switch (option) {\r\n                    case progress.data.JSDO.ALL_DATA:\r\n                        storageObject = this._createDataAndChangeSet(\"_localStorage\");\r\n                        break;\r\n\r\n                    case progress.data.JSDO.CHANGES_ONLY:\r\n                        storageObject = this._createChangeSet(\"_localStorage\", true);\r\n                        break;\r\n                }\r\n            }\r\n            // Temp Tables\r\n            else {\r\n                switch (option) {\r\n                    case progress.data.JSDO.ALL_DATA:\r\n                        storageObject = this._createDataAndChangeSet(\"_localStorage\");\r\n                        break;\r\n\r\n                    case progress.data.JSDO.CHANGES_ONLY:\r\n                        storageObject = this._createChangeSet(\"_localStorage\", true);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return storageObject;\r\n        };\r\n\r\n\r\n        // Restore the data retrieved from local storage to the JSDO based upon the specified addMode\r\n        this._restoreFromLocalStorage = function (storageObject, addMode, keyFields) {\r\n\r\n            if (storageObject && (Object.keys(storageObject).length > 0)) {\r\n                if (this._dataSetName) {\r\n                    // Walk thru all tables to retrieve data\r\n                    for (var buf in this._buffers)\r\n                        this._restoreDataForTable(this._buffers[buf], storageObject, addMode, keyFields);\r\n                }\r\n                // Either temp-table or array\r\n                else\r\n                    this._restoreDataForTable(this._defaultTableRef, storageObject, addMode, keyFields);\r\n            }\r\n            else if (addMode === progress.data.JSDO.MODE_EMPTY)\r\n                this._clearData();\r\n        };\r\n\r\n\r\n        this._restoreDataForTable = function (tableRef, jsonObject, addMode, keyFields) {\r\n\r\n            // If primaryKeys not found, check if the idProperty is there\r\n            keyFields = keyFields !== undefined ? keyFields : tableRef._primaryKeys;\r\n            if (keyFields === undefined && this._resource.idProperty) {\r\n                keyFields = [];\r\n                keyFields[0] = this._resource.idProperty;\r\n            }\r\n\r\n            if (this._dataSetName) {\r\n                var oldUseRelationships = this.useRelationships;\r\n                // Turn off useRelationships since addRecords() does not use the working record\t\t\t\r\n                this.useRelationships = false;\r\n\r\n                try {\r\n                    tableRef.addRecords(jsonObject, addMode, keyFields);\r\n                } finally {\r\n                    // Restore useRelationships\r\n                    this.useRelationships = oldUseRelationships;\r\n                }\r\n            }\r\n            // else it's either an array (this._dataProperty) or a temp-table\r\n            else {\r\n                // Creating  dummy dataset name: \"_localStorage\" for tables and arrays\r\n                this._dataSetName = \"_localStorage\";\r\n                tableRef.addRecords(jsonObject, addMode, keyFields);\r\n                this._dataSetName = null;\r\n            }\r\n        };\r\n\r\n\t\tthis.getMethodProperties = function(operation, name) {\r\n\t\t\tvar idx;\r\n\t\t\t\r\n            if (this._resource._operations) {\r\n                if (this._resource._operations[operation]) {\r\n                    return this._resource._operations[operation];\r\n                }\r\n            }\t\r\n            else {\r\n                this._resource._operations = {};\r\n            }\r\n            for (var idx = 0; idx < this._resource.operations.length; idx++) {\r\n                if (this._resource.operations[idx].type == operation) {\r\n                    return (this._resource._operations[operation] = this._resource.operations[idx]);\r\n                }\r\n            }\r\n\t\t};\r\n\t\t\r\n        ///////////////////////////////////////////////////////////////////////////\r\n\r\n        // Load data\r\n        if (autoFill)\r\n            this.fill();\r\n\r\n    }; // End of JSDO\r\n\r\n    // Constants for progress.data.JSDO\r\n    if ((typeof Object.defineProperty) == 'function') {\r\n        Object.defineProperty(progress.data.JSDO, 'MODE_APPEND', {\r\n            value: 1,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'MODE_EMPTY', {\r\n            value: 2,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'MODE_MERGE', {\r\n            value: 3,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'MODE_REPLACE', {\r\n            value: 4,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'ERROR', {\r\n            value: -1,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'APP_ERROR', {\r\n            value: -2,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'RETVAL', {\r\n            value: -3,\r\n            enumerable: true\r\n        });\r\n        Object.defineProperty(progress.data.JSDO, 'DATA_ERROR', {\r\n            value: -4,\r\n            enumerable: true\r\n        });        \r\n    } else {\r\n        progress.data.JSDO.MODE_APPEND = 1;\r\n        progress.data.JSDO.MODE_EMPTY = 2;\r\n        progress.data.JSDO.MODE_MERGE = 3;\r\n        progress.data.JSDO.MODE_REPLACE = 4;\r\n    }\r\n\r\n    /* CRUD */\r\n    progress.data.JSDO._OP_CREATE = 1;\r\n    progress.data.JSDO._OP_READ = 2;\r\n    progress.data.JSDO._OP_UPDATE = 3;\r\n    progress.data.JSDO._OP_DELETE = 4;\r\n    progress.data.JSDO._OP_SUBMIT = 5;\r\n\r\n    /* Offline support: saving data to local storage  */\r\n    progress.data.JSDO.ALL_DATA = 1;\r\n    progress.data.JSDO.CHANGES_ONLY = 2;\r\n    \r\n    // Arrays elements as individual fields \r\n    // Separator must have at least one characters\r\n    progress.data.JSDO.ARRAY_INDEX_SEPARATOR = \"_\";\r\n\r\n// setup inheritance for JSDO\r\n    progress.data.JSDO.prototype = new progress.util.Observable();\r\n    progress.data.JSDO.prototype.constructor = progress.data.JSDO;\r\n    progress.data.JSDO.prototype.toString = function (radix) {\r\n        return \"JSDO\";\r\n    };\r\n\r\n// setup inheritance for table reference\r\n    progress.data.JSTableRef.prototype = new progress.util.Observable();\r\n    progress.data.JSTableRef.prototype.constructor = progress.data.JSTableRef;\r\n    progress.data.JSTableRef.prototype.toString = function (radix) {\r\n        return \"JSTableRef\";\r\n    };\r\n\r\n\t// Built-in Plugins\r\n\tprogress.data.PluginManager.addPlugin(\"JFP\", {\r\n\t\trequestMapping: function(jsdo, params, info) {\r\n\t\t\tvar sortFields,\r\n\t\t\tfield,\r\n            fieldName,\r\n            fieldInfo,\r\n            tableName,\r\n            filter,\r\n            sortDir,\r\n\t\t\tablFilter,\r\n            sqlQuery,\r\n            methodProperties,\r\n            capabilities,\r\n            index,\r\n            position,\r\n            option,\r\n            capabilitiesObject,\r\n            reqCapabilities = {\r\n                filter: { options: [ \"ablFilter\", \"sqlQuery\" ], mapping: undefined },\r\n                top:    { options: [ \"top\" ], mapping: undefined },\r\n                skip:   { options: [ \"skip\" ], mapping: undefined },\r\n                id:     { options: [ \"id\" ], mapping: undefined },\r\n                sort:   { options: [ \"orderBy\" ], mapping: undefined }\r\n            },\r\n            doConversion = true,\r\n            param;\r\n\t\t\t\r\n\t\t\tif (info.operation === \"read\") {\r\n                capabilitiesObject = {};\r\n                methodProperties = jsdo.getMethodProperties(info.operation);\r\n                capabilities = methodProperties.capabilities;\r\n                \r\n                if (capabilities) {\r\n                    capabilities = capabilities.replace(/\\s/g, \"\").split(\",\");\r\n                    for (index = 0; index < capabilities.length; index += 1) {\r\n                        capabilitiesObject[capabilities[index]] = true;\r\n                    }\r\n                }\r\n                for (param in params) {\r\n                    if (param && (params[param] !== undefined) && reqCapabilities[param]) {\r\n                        for (index = 0; index < reqCapabilities[param].options.length; index += 1) {\r\n                            option = reqCapabilities[param].options[index];\r\n                            if (capabilitiesObject[option]) {\r\n                                reqCapabilities[param].mapping = option;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!reqCapabilities[param].mapping) {\r\n                            throw new Error(msg.getMsgText(\"jsdoMSG120\", \r\n                                reqCapabilities[param].options.join(\"' or '\"), param));\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                if (jsdo._defaultTableRef && params.tableRef === undefined) {\r\n                    tableName = jsdo._defaultTableRef._name;\r\n                }\r\n                else {\r\n                    tableName = params.tableRef;\r\n                }\r\n\r\n\t\t\t\tif (params.sort) {\r\n                    // Convert sort expression to JFP format\r\n\r\n                    if (typeof(params.sort) === \"object\" && !(params.sort instanceof Array)) {\r\n                        // Kendo UI sort format - object\r\n                        // Make params.sort an array\r\n                        params.sort = [params.sort];\r\n                    }\r\n\t\t\t\t\tsortFields = \"\";\r\n\t\t\t\t\tfor (index = 0; index < params.sort.length; index += 1) {\r\n                        field = params.sort[index];\r\n                        sortDir = \"\";\r\n\t\t\t\t\t\t\r\n                        if (typeof(field) === \"string\") {\r\n                            // setSortFields format\r\n                            // Extract fieldName and sortDir from string\r\n                            fieldName = field;\r\n                            position = field.indexOf(\":\");\r\n                            if (position !== -1) {\r\n                                sortDir = fieldName.substring(position + 1);\r\n                                fieldName = fieldName.substring(0, position);\r\n                                switch(sortDir.toLowerCase()) {\r\n                                case \"desc\":\r\n                                case \"descending\":                                \r\n                                    sortDir = \"desc\";\r\n                                    break;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // Kendo UI sort format - array\r\n                            // Extract fieldName and sortDir from object\r\n                            fieldName = field.field;\r\n                            if (params.sort[index].dir === \"desc\") {\r\n                                sortDir = params.sort[index].dir;                                \r\n                            }\r\n                        }\r\n                        if (tableName) {\r\n                            // Use original fieldName instead of serialized name\r\n                            fieldInfo = jsdo[tableName]._fields[fieldName.toLowerCase()];\r\n                            if (fieldInfo && fieldInfo.origName) {\r\n\t\t\t\t\t\t\t\tfieldName = fieldInfo.origName;\r\n                            }\r\n                        }\r\n                        if (sortDir === \"desc\") {\r\n                            fieldName += \" DESC\";\r\n                        }\r\n                        sortFields += fieldName;\r\n                        if (index < params.sort.length - 1) {\r\n                            sortFields += \",\";\r\n                        }                     \r\n\t\t\t\t\t}                                                                             \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (params.filter) {\r\n                    // If filter is specified as string, then no conversion is necessary\r\n                    if (typeof params.filter === 'string') {\r\n                        doConversion = false;\r\n                    }\r\n                    \r\n                    params.tableRef = tableName;\r\n                    \r\n                    if (doConversion && (params.tableRef === undefined)) {\r\n                        throw new Error(msg.getMsgText(\"jsdoMSG045\", \"fill() or read()\", \"params\", \r\n                                                       \"tableRef\"));\r\n\t\t\t\t\t}  \r\n                       \r\n                    if (reqCapabilities[\"filter\"].mapping === \"ablFilter\") {\r\n                        if (doConversion) {\r\n                            ablFilter = progress.util._convertToABLWhereString(\r\n                                        jsdo._buffers[params.tableRef], params.filter);\r\n                        }\r\n                        else {\r\n                            ablFilter = params.filter;\r\n                        }\r\n                    }\r\n                    else if (reqCapabilities[\"filter\"].mapping === \"sqlQuery\") {\r\n                        if (doConversion) {\r\n                            sqlQuery = progress.util._convertToSQLQueryString(\r\n                                        jsdo._buffers[params.tableRef], params.filter, true);\r\n                        }\r\n                        else {\r\n                            sqlQuery = params.filter;\r\n                        }\r\n                    }\r\n\t\t\t\t}\r\n                \r\n\t\t\t\tfilter = JSON.stringify({\r\n\t\t\t\t\tablFilter: ablFilter,\r\n                    sqlQuery: sqlQuery,\r\n\t\t\t\t\torderBy: sortFields,\r\n\t\t\t\t\tskip: params.skip,\r\n\t\t\t\t\ttop: params.top\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tparams = {filter: filter};\r\n\t\t\t}\r\n\t\t\treturn params;\r\n\t\t}\r\n\t});\r\n\t\r\n    if (typeof progress.ui == 'undefined')\r\n        progress.ui = {};\r\n    progress.ui.UITableRef = function UITableRef(tableRef) {\r\n        this._tableRef = tableRef;\r\n        this._listview = null;\r\n        this._detailPage = null;\r\n        this._listviewContent = undefined;\r\n\r\n        this.addItem = function (format) {\r\n            var detailForm;\r\n\r\n            if (!this._tableRef.record)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._name));\r\n\r\n            if (!this._listview) return;\r\n\r\n            format = format ? format : this._listview.format;\r\n            detailForm = (this._detailPage && this._detailPage.name) ? this._detailPage.name : \"\";\r\n\r\n            if (this._listviewContent === undefined) {\r\n                this.clearItems();\r\n            }\r\n            var text = this._listview.itemTemplate ? \r\n                this._listview.itemTemplate : progress.ui.UIHelper._itemTemplate;\r\n\r\n            text = text.replace(new RegExp('{__format__}', 'g'), format);\r\n            text = text.replace(new RegExp('{__id__}', 'g'), this._tableRef.record.data._id);\r\n            text = text.replace(new RegExp('{__page__}', 'g'), detailForm);\r\n\r\n            for (var field in this._tableRef.record.data) {\r\n                var value = this._tableRef.record.data[field];\r\n                text = text.replace(new RegExp('{' + field + '}', 'g'), \r\n                                            (value !== undefined && value !== null) ? value : \"\");\r\n            }\r\n\r\n            this._listviewContent += text;\r\n        };\r\n\r\n        this.clearItems = function () {\r\n            if (this._listview) {\r\n                this._listviewContent = '';\r\n                var listviewElement = document.getElementById(this._listview.name);\r\n                if (listviewElement) {\r\n                    listviewElement.innerHTML = '';\r\n                }\r\n            }\r\n        };\r\n\r\n        this._getFormFieldValue = function (fieldName, detailPageName) {\r\n            var value = null;\r\n\r\n            if (detailPageName === undefined) {\r\n                if (this._detailPage && this._detailPage.name)\r\n                    detailPageName = this._detailPage.name;\r\n            }\r\n\r\n            if (typeof($) == 'function' && detailPageName) {\r\n                field = $(\"#\" + detailPageName + \" #\" + fieldName);\r\n                if (!field || field.length === 0)\r\n                    field = $(\"#\" + detailPageName + ' [dsid=\"' + fieldName + '\"]');\r\n                if (field && field.length == 1)\r\n                    value = field.val();\r\n            }\r\n            else {\r\n                field = document.getElementById(fieldName);\r\n                if (field) {\r\n                    value = field.value;\r\n                }\r\n            }\r\n\r\n            return value;\r\n        };\r\n\r\n        this._setFormField = function (fieldName, value, detailPageName) {\r\n            var field = null;\r\n\r\n            if (detailPageName === undefined) {\r\n                if (this._detailPage && this._detailPage.name)\r\n                    detailPageName = this._detailPage.name;\r\n            }\r\n\r\n            if (typeof($) == 'function' && detailPageName) {\r\n                field = $(\"#\" + detailPageName + \" #\" + fieldName);\r\n                if (!field || field.length === 0)\r\n                    field = $(\"#\" + detailPageName + ' [dsid=\"' + fieldName + '\"]');\r\n                if (field && field.length == 1)\r\n                    field.val(value);\r\n            }\r\n            else {\r\n                field = document.getElementById(fieldName);\r\n                if (field) {\r\n                    field.value = value;\r\n                }\r\n            }\r\n        };\r\n\r\n        /*\r\n         * Assigns field values from the form.\r\n         */\r\n        this.assign = function (detailPageName) {\r\n            if (!this._tableRef.record)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._tableRef._name));\r\n            if ((arguments.length !== 0) && (typeof detailPageName != 'string'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"UIHelper\", \"assign()\"));\r\n\r\n            // Ensure creation of before image record\r\n            this._tableRef.record.assign(null);\r\n\r\n            var fieldName;\r\n            var schema = this._tableRef.getSchema();\r\n            for (var i = 0; i < schema.length; i++) {\r\n                fieldName = schema[i].name;\r\n                if (fieldName == '_id') continue;\r\n                var value = this._getFormFieldValue(fieldName, detailPageName);\r\n                // CR OE00241289 Should always copy over field value unless undefined, \r\n                // user may have explicitly set it to blank\r\n                if (typeof value != 'undefined') {\r\n                    if (typeof value == 'string' && schema[i].type != 'string') {\r\n                        value = this._tableRef._jsdo._convertType(value,\r\n                            schema[i].type,\r\n                            schema[i].items ? schema[i].items.type : null);\r\n                    }\r\n                    this._tableRef.record.data[fieldName] = value;\r\n                }\r\n            }\r\n\r\n            // Ensure order of record\r\n            this._tableRef.record._sortRecord();\r\n\r\n            return true;\r\n        };\r\n\r\n        this.display = function (pageName) {\r\n            if (!this._tableRef.record)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG002\", this._tableRef._name));\r\n\r\n            // Display record to form\r\n            var schema = this._tableRef.getSchema();\r\n            for (var i = 0; i < schema.length; i++) {\r\n                this._setFormField(schema[i].name, this._tableRef.record.data[schema[i].name], pageName);\r\n            }\r\n            this._setFormField('_id', this._tableRef.record.data._id, pageName);\r\n        };\r\n\r\n        this.showListView = function () {\r\n            if (!this._listview) return;\r\n\r\n            var uiTableRef = this;\r\n            var listviewElement;\r\n            if (typeof($) == 'function') {\r\n                listviewElement = $(\"#\" + this._listview.name);\r\n                if (listviewElement && listviewElement.length == 1) {\r\n                    listviewElement.html(this._listviewContent ? this._listviewContent : '');\r\n                    try {\r\n                        if (listviewElement.attr(\"data-filter\") === \"true\"\r\n                            && typeof listviewElement.filterable === \"function\") {\r\n                            listviewElement.filterable(\"refresh\");\r\n                        }\r\n                        else {\r\n                            listviewElement.listview(\"refresh\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Workaround for issue with JQuery Mobile throwning exception on refresh\r\n                    }\r\n                }\r\n\r\n                if (this._listview.autoLink) {\r\n                    // Add trigger for 'tap' event to items\r\n                    $(\"#\" + this._listview.name + \" li\").each(\r\n                        function (/* index */) {\r\n                            $(this).bind('click',\r\n                                function (/* event, ui */) {\r\n                                    var jsrecord = uiTableRef.getListViewRecord(this);\r\n                                    uiTableRef.display();\r\n                                    if (typeof(uiTableRef._listview.onSelect) == 'function') {\r\n                                        uiTableRef._listview.onSelect(event, this, jsrecord);\r\n                                    }\r\n                                });\r\n                        });\r\n                }\r\n            }\r\n            else {\r\n                listviewElement = document.getElementById(this._listview.name);\r\n                if (listviewElement) {\r\n                    listviewElement.innerHTML = this._listviewContent;\r\n                }\r\n\r\n                if (this._listview.autoLink) {\r\n                    var element = document.getElementById(this._listview.name);\r\n                    if (element && element.childElementCount > 0) {\r\n                        for (var i = 0; i < element.children.length; i++) {\r\n                            element.children[i].onclick = function () {\r\n                                var jsrecord = uihelper.getListViewRecord(this);\r\n                                uihelper.display();\r\n                                if (typeof(uiTableRef._listview.onSelect) == 'function') {\r\n                                    uiTableRef._listview.onSelect(event, this, jsrecord);\r\n                                }\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._listviewContent = undefined;\r\n        };\r\n\r\n        this.getFormFields = function (fields) {\r\n            if (!this._tableRef._schema)\r\n                return '';\r\n            if (!(fields instanceof Array))\r\n                fields = null;\r\n            else {\r\n                var tmpFields = {};\r\n                for (var i = 0; i < fields.length; i++) {\r\n                    tmpFields[fields[i]] = fields[i];\r\n                }\r\n                fields = tmpFields;\r\n            }\r\n            var htmltext;\r\n            if (!fields || fields['_id']) {\r\n                htmltext = '<input type=\"hidden\" id=\"_id\" name=\"_id\" value=\"\" />';\r\n            }\r\n            else\r\n                htmltext = '';\r\n            htmltext += '<fieldset data-role=\"controlgroup\">';\r\n\r\n            for (var i = 0; i < this._tableRef._schema.length; i++) {\r\n                var fieldName = this._tableRef._schema[i].name;\r\n                if (fieldName == '_id') continue;\r\n                if (fieldName.length > 0 && fieldName.charAt(0) == '_') continue;\r\n                if (fields && fields[fieldName] === undefined) continue;\r\n                var fieldLabel = this._tableRef._schema[i].title ?\r\n                    this._tableRef._schema[i].title : this._tableRef._schema[i].name;\r\n                var text = (this._detailPage && this._detailPage.fieldTemplate) ? \r\n                    this._detailPage.fieldTemplate : progress.ui.UIHelper._fieldTemplate;\r\n                text = text.replace(new RegExp('{__label__}', 'g'), fieldLabel);\r\n                text = text.replace(new RegExp('{__name__}', 'g'), this._tableRef._schema[i].name);\r\n                htmltext += text;\r\n            }\r\n            htmltext += '</fieldset>';\r\n            fields = null;\r\n            return htmltext;\r\n        };\r\n\r\n        this.getListViewRecord = function (htmlIElement) {\r\n            var id = htmlIElement.getAttribute('data-id');\r\n            return this._tableRef.findById(id);\r\n        };\r\n\r\n        this.getFormRecord = function (detailPageName) {\r\n            var id = this._getFormFieldValue('_id', detailPageName);\r\n            return this._tableRef.findById(id);\r\n        };\r\n\r\n        this._getIdOfElement = function (name) {\r\n            if (typeof($) == 'function') {\r\n                var element = $(\"#\" + name);\r\n                if (!element || element.length === 0) {\r\n                    element = $('[dsid=\"' + name + '\"]');\r\n                    if (element && element.length == 1) {\r\n                        var id = element.attr(\"id\");\r\n                        if (id)\r\n                            return id;\r\n                    }\r\n                }\r\n            }\r\n            return name;\r\n        };\r\n\r\n        this.setDetailPage = function setDetailPage(obj) {\r\n            if (!obj || (typeof(obj) != 'object'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG012\", arguments.callee.name, \"object\"));\r\n            if (!obj.name || (typeof(obj.name) != 'string'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG012\", arguments.callee.name, \"name\"));\r\n            this._detailPage = obj;\r\n            this._detailPage.name = this._getIdOfElement(this._detailPage.name);\r\n        };\r\n        this.setListView = function setListView(obj) {\r\n            if (!obj || (typeof(obj) != 'object'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG012\", arguments.callee.name, \"object\"));\r\n            if (!obj.name || (typeof(obj.name) != 'string'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG012\", arguments.callee.name, \"name\"));\r\n            if (obj.format && (typeof(obj.name) != 'string'))\r\n                throw new Error(msg.getMsgText(\"jsdoMSG012\", arguments.callee.name, \"format\"));\r\n\r\n            this._listview = obj;\r\n            this._listview.name = this._getIdOfElement(this._listview.name);\r\n            if (!this._listview.format) {\r\n                if (typeof($) == 'function') {\r\n                    for (var i = 0; i < this._tableRef._schema.length; i++) {\r\n                        var fieldName = this._tableRef._schema[i].name;\r\n\r\n                        field = $(\"#\" + this._listview.name + ' [dsid=\"' + fieldName + '\"]');\r\n                        if (field && field.length == 1) {\r\n                            field.html('{' + fieldName + '}');\r\n                        }\r\n                    }\r\n                }\r\n                var text = document.getElementById(this._listview.name).innerHTML;\r\n                var pos = text.indexOf('<li ');\r\n                if (pos != -1) {\r\n                    // Add data-id so that getListViewRecord() can obtain the _id of the record\r\n                    text = text.substring(0, pos) + '<li data-id=\"{__id__}\"' + text.substring(pos + 3);\r\n                }\r\n                this._listview.itemTemplate = text;\r\n            }\r\n        };\r\n\r\n    };\r\n\r\n    progress.ui.UIHelper = function UIHelper() {\r\n\r\n        if (typeof(arguments[0]) == \"object\") {\r\n            var args = arguments[0];\r\n            for (var v in args) {\r\n                if (v == 'jsdo') {\r\n                    this._jsdo = args[v];                   \r\n                }\r\n                else {\r\n                    this[v] = args[v];\r\n                }\r\n            }\r\n        }\r\n\r\n        this._defaultUITableRef = null;\r\n        this._uiTableRef = {};\r\n        var cnt = 0;\r\n        for (var buf in this._jsdo._buffers) {\r\n            this[buf] = this._uiTableRef[buf] = new progress.ui.UITableRef(this._jsdo._buffers[buf]);\r\n            if (!this._defaultUITableRef)\r\n                this._defaultUITableRef = this._uiTableRef[buf];\r\n            cnt++;\r\n        }\r\n        if (cnt != 1) {\r\n            this._defaultUITableRef = null;\r\n        }\r\n\r\n        this.addItem = function (format) {\r\n            if (this._defaultUITableRef) {\r\n                this._defaultUITableRef.addItem(format);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"addItem()\"));\r\n        };\r\n\r\n        this.clearItems = function () {\r\n            if (this._defaultUITableRef) {\r\n                this._defaultUITableRef.clearItems();\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"clearItems()\"));\r\n        };\r\n\r\n        this.assign = function (detailPageName) {\r\n            if (arguments.length !== 0)\r\n                throw new Error(msg.getMsgText(\"jsdoMSG024\", \"UIHelper\", \"assign()\"));\r\n            if (this._defaultUITableRef) {\r\n                return this._defaultUITableRef.assign(detailPageName);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"assign()\"));\r\n        };\r\n\r\n        this.display = function (detailPageName) {\r\n            if (this._defaultUITableRef) {\r\n                this._defaultUITableRef.display(detailPageName);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"display()\"));\r\n        };\r\n\r\n        this.showListView = function () {\r\n            if (this._defaultUITableRef) {\r\n                this._defaultUITableRef.showListView();\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"showListView()\"));\r\n        };\r\n\r\n        this.getFormFields = function (fields) {\r\n            if (this._defaultUITableRef) {\r\n                return this._defaultUITableRef.getFormFields(fields);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"getFormFields()\"));\r\n        };\r\n\r\n        this.getListViewRecord = function (htmlIElement) {\r\n            if (this._defaultUITableRef) {\r\n                return this._defaultUITableRef.getListViewRecord(htmlIElement);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"getListViewRecord()\"));\r\n        };\r\n\r\n        this.getFormRecord = function (detailPageName) {\r\n            if (this._defaultUITableRef) {\r\n                return this._defaultUITableRef.getFormRecord(detailPageName);\r\n            }\r\n            else\r\n                throw new Error(msg.getMsgText(\"jsdoMSG011\", \"getFormRecord()\"));\r\n        };\r\n\r\n        this.setDetailPage = function (obj) {\r\n            if (this._defaultUITableRef)\r\n                return this._defaultUITableRef.setDetailPage(obj);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG011\", \"setDetailPage()\"));\r\n        };\r\n\r\n        this.setListView = function (obj) {\r\n            if (this._defaultUITableRef)\r\n                return this._defaultUITableRef.setListView(obj);\r\n            throw new Error(msg.getMsgText(\"jsdoMSG011\", \"setListView()\"));\r\n        };\r\n\r\n    };\r\n    progress.ui.UIHelper._defaultItemTemplate = '<li data-theme=\"c\" data-id=\"{__id__}\">' +\r\n        '<a href=\"#{__page__}\" class=\"ui-link\" data-transition=\"slide\">{__format__}</a></li>';\r\n    progress.ui.UIHelper._defaultFieldTemplate = '<div data-role=\"fieldcontain\">' + \r\n        '<label for=\"{__name__}\">{__label__}</label>' +\r\n        '<input id=\"{__name__}\" name=\"{__name__}\" placeholder=\"\" value=\"\" type=\"text\" /></div>';\r\n    progress.ui.UIHelper._itemTemplate = progress.ui.UIHelper._defaultItemTemplate;\r\n    progress.ui.UIHelper._fieldTemplate = progress.ui.UIHelper._defaultFieldTemplate;\r\n\r\n    progress.ui.UIHelper.setItemTemplate = function (template) {\r\n        progress.ui.UIHelper._itemTemplate = template ? template : progress.ui.UIHelper._defaultItemTemplate;\r\n    };\r\n\r\n    progress.ui.UIHelper.setFieldTemplate = function (template) {\r\n        progress.ui.UIHelper._fieldTemplate = \r\n            template ? template : progress.ui.UIHelper._defaultFieldTemplate;\r\n    };\r\n\r\n})();\r\n\r\n//this is so that we can see the code in Chrome's Source tab when script is loaded via XHR\r\n\n\n\n// WEBPACK FOOTER //\n// ./JSDO/src/progress.js","/* \r\nprogress.auth.js    Version: 4.4.0-3\r\n\r\nCopyright (c) 2016-2017 Progress Software Corporation and/or its subsidiaries or affiliates.\r\n \r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n \r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n \r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n */\r\n\r\n(function () {\r\n\r\n    \"use strict\";  // note that this makes JSLint complain if you use arguments[x]\r\n\r\n    /*global progress : true*/\r\n    /*global $ : false, storage, XMLHttpRequest*/\r\n\r\n    /* define these if not defined yet - they may already be defined if\r\n       progress.js was included first */\r\n    if (typeof progress === \"undefined\") {\r\n        progress = {};\r\n    }\r\n    if (typeof progress.data === \"undefined\") {\r\n        progress.data = {};\r\n    }\r\n\r\n    // This is really more along the lines of a Factory method in that it explicitly creates an object \r\n    // and returns it based on the the authModel parameter (rather than following the default JS\r\n    // pattern of adding properties to the \"this\" object created for it and passed in by the runtime).\r\n    // NOTE: If we support multiple AuthenticationProviders that get different tokens from the same\r\n    //       server, we may need to add a \"name\" property to the initObject to use as a storage key\r\n\r\n    progress.data.AuthenticationProvider = function (initObject) {\r\n        var authProv,\r\n            authModel,\r\n            uri;\r\n\r\n        // process constructor arguments\r\n        if (typeof initObject === 'object') {\r\n\r\n            // these 2 calls throw an appropriate error if the check doesn't pass\r\n            this._checkStringArg(\r\n                \"constructor\",\r\n                initObject.authenticationModel,\r\n                \"initObject.authenticationModel\",\r\n                \"initObject.authenticationModel\"\r\n            );\r\n\r\n            this._checkStringArg(\r\n                \"constructor\",\r\n                initObject.uri,\r\n                \"init-object.uri\",\r\n                \"init-object.uri\"\r\n            );\r\n        } else {\r\n            // AuthenticationProvider: Invalid signature for constructor. The init-object argument \r\n            //                         was missing or invalid.\r\n            throw new Error(progress.data._getMsgText(\r\n                \"jsdoMSG033\",\r\n                \"AuthenticationProvider\",\r\n                \"the constructor\",\r\n                \"The init-object argument was missing or invalid.\"\r\n            ));\r\n        }\r\n\r\n        authModel = initObject.authenticationModel.toLowerCase();\r\n        switch (authModel) {\r\n            case progress.data.Session.AUTH_TYPE_ANON:\r\n                this._initialize(initObject.uri, progress.data.Session.AUTH_TYPE_ANON,\r\n                    {\"_loginURI\": progress.data.AuthenticationProvider._homeLoginURIBase});\r\n                authProv = this;\r\n                break;\r\n            case progress.data.Session.AUTH_TYPE_BASIC:\r\n                authProv = new progress.data.AuthenticationProviderBasic(initObject.uri);\r\n                break;\r\n            case progress.data.Session.AUTH_TYPE_FORM:\r\n                authProv = new progress.data.AuthenticationProviderForm(initObject.uri);\r\n                break;\r\n            case progress.data.Session.AUTH_TYPE_FORM_SSO:\r\n                authProv = new progress.data.AuthenticationProviderSSO(initObject.uri);\r\n                break;\r\n            case progress.data.Session.AUTH_TYPE_ADAL:\r\n                authProv = new progress.data.AuthenticationProviderAdal(initObject.uri, initObject.authConfig);\r\n                break;\r\n            default:\r\n                // AuthenticationProvider: The 'init-object' parameter passed to the 'constructor' function\r\n                //                          has an invalid value for the 'authenticationModel' property.\r\n                throw new Error(progress.data._getMsgText(\r\n                    \"jsdoMSG502\",\r\n                    \"AuthenticationProvider\",\r\n                    \"init-object\",\r\n                    \"constructor\",\r\n                    \"authenticationModel\"\r\n                ));\r\n            //break;\r\n        }\r\n\r\n        return authProv;\r\n    };\r\n\r\n\r\n    // ADD METHODS TO THE AuthenticationProvider PROTOYPE\r\n\r\n    // GENERIC IMPLEMENTATION FOR login METHOD THAT THE API IMPLEMENTATIONS OF login CAN CALL\r\n    // (technically, they don't override it, they each have small login methods that call this)\r\n    progress.data.AuthenticationProvider.prototype._loginProto =\r\n        function (sendParam) {\r\n            var deferred = $.Deferred(),\r\n                xhr,\r\n                uriForRequest,\r\n                header,\r\n                that = this;\r\n\r\n            if (this._loggedIn) {\r\n                // \"The login method was not executed because the AuthenticationProvider is \r\n                // already logged in.\" \r\n                throw new Error(progress.data._getMsgText(\"jsdoMSG051\", \"AuthenticationProvider\"));\r\n            }\r\n\r\n            xhr = new XMLHttpRequest();\r\n\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState === 4) {\r\n                    // process the response from the Web application\r\n                    that._processLoginResult(xhr, deferred);\r\n                }\r\n            };\r\n\r\n            if (progress.data.Session._useTimeStamp) {\r\n                uriForRequest = progress.data.Session._addTimeStampToURL(this._loginURI);\r\n            } else {\r\n                uriForRequest = this._loginURI;\r\n            }\r\n\r\n            this._openLoginRequest(xhr, uriForRequest);\r\n\r\n            // We specify application/json for the response so that, if a bad request is sent, an \r\n            // OE Web application will directly send back a 401 with error info in the body as JSON. \r\n            // So we force the accept header to application/json because if we make an anonymous\r\n            // request to a FORM/BASIC backend, it might redirect us to a login page since we have\r\n            // no credentials. And since we can technically access JUST the login page, the XHR\r\n            // will identify it as SUCCESS. If we specify \"application/json\", no redirects will\r\n            // happen, just a plain old \"401 GET OUTTA HERE\" code.\r\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\r\n            xhr.send(sendParam);\r\n            return deferred.promise();\r\n        };\r\n\r\n\r\n    // PUBLIC METHODS (and their \"helpers\") (documented as part of the JSDO library API)\r\n\r\n    // login API method -- just a shell that calls loginProto\r\n    progress.data.AuthenticationProvider.prototype.login = function () {\r\n        return this._loginProto();\r\n    };\r\n\r\n    // HELPER FOR login METHOD, PROBABLY OVERRIDDEN IN MOST CONSTRUCTORS\r\n    progress.data.AuthenticationProvider.prototype._openLoginRequest = function (xhr, uri) {\r\n        xhr.open('GET', uri, true);\r\n        progress.data.Session._setNoCacheHeaders(xhr);\r\n    };\r\n\r\n    // HELPER FOR login METHOD, PROBABLY OVERRIDDEN IN MOST CONSTRUCTORS\r\n    progress.data.AuthenticationProvider.prototype._processLoginResult = function (xhr, deferred) {\r\n        var result;\r\n\r\n        if (xhr.status === 200) {\r\n            // Need to set loggedIn now so we can call logout from here if there's an\r\n            // error processing the response (e.g., authentication succeeded but we didn't get a\r\n            // token for some reason)\r\n            this._loggedIn = true;\r\n            this._storeInfo();\r\n            result = progress.data.Session.SUCCESS;\r\n        } else if (xhr.status === 401) {\r\n            // If this is Anonymous, somebody gave us the wrong authenticationModel!\r\n            result = progress.data.Session.AUTHENTICATION_FAILURE;\r\n        } else {\r\n            result = progress.data.Session.GENERAL_FAILURE;\r\n        }\r\n\r\n        this._settlePromise(deferred, result, {\"xhr\": xhr});\r\n    };\r\n\r\n\r\n    // logout API METHOD -- SOME CONSTRUCTORS OR PROTOTYPES WILL OVERRIDE THIS\r\n    progress.data.AuthenticationProvider.prototype.logout = function () {\r\n        var deferred = $.Deferred();\r\n\r\n        this._reset();\r\n        deferred.resolve(this, progress.data.Session.SUCCESS, {});\r\n        return deferred.promise();\r\n    };\r\n\r\n    // hasClientCredentials API METHOD -- PROBABLY ONLY OVERRIDDEN BY SSO\r\n    progress.data.AuthenticationProvider.prototype.hasClientCredentials = function () {\r\n        return this._loggedIn;\r\n    };\r\n\r\n    // hasRefreshToken API METHOD -- returns false for all AutghenticationProvider types except SSO,\r\n    // which overrides it\r\n    progress.data.AuthenticationProvider.prototype.hasRefreshToken = function () {\r\n        return false;\r\n    };\r\n\r\n    // QUASI-PUBLIC METHOD \r\n\r\n    // general-purpose method for opening requests (mainly for jsdo calls)\r\n    // This method is not part of the documented API that a developer would\r\n    // program against, but it gets used in a validation check by the JSDOSESSION, because the\r\n    // JSDOSESSION code expects it to be present. The point here is that if a developer were to\r\n    // create their own AuthenticationProvider object, it would need to include this method\r\n    // TODO: This method uses a callback, primarily to avoid breaking tdriver tests. We should change \r\n    // it to use promises\r\n    progress.data.AuthenticationProvider.prototype._openRequestAndAuthorize = function (xhr,\r\n                                                                                        verb,\r\n                                                                                        uri,\r\n                                                                                        async,\r\n                                                                                        callback) {\r\n        var errorObject;\r\n\r\n        if (this.hasClientCredentials()) {\r\n            xhr.open(verb, uri, async);\r\n\r\n            // Check out why we do this in _loginProto\r\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        } else {\r\n            // AuthenticationProvider: The AuthenticationProvider is not managing valid credentials.\r\n            errorObject = new Error(progress.data._getMsgText(\"jsdoMSG125\", \"AuthenticationProvider\"));\r\n        }\r\n\r\n        callback(errorObject);\r\n    };\r\n\r\n    // GENERAL PURPOSE \"INTERNAL\" METHODS, NOT RELATED TO SPECIFIC API ELEMENTS\r\n    // (not documented, intended for use only within the JSDO library)\r\n\r\n    // General purpose method for initializing an object\r\n    progress.data.AuthenticationProvider.prototype._initialize = function (uriParam,\r\n                                                                           authModel,\r\n                                                                           targetURIs) {\r\n        var tempURI,\r\n            target;\r\n\r\n        Object.defineProperty(this, 'uri',\r\n            {\r\n                get: function () {\r\n                    return this._uri;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n        Object.defineProperty(this, 'authenticationModel',\r\n            {\r\n                get: function () {\r\n                    return this._authenticationModel;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n\r\n        // get rid of trailing '/' because appending service url that starts with '/'\r\n        // will cause request failures\r\n        if (uriParam[uriParam.length - 1] === \"/\") {\r\n            tempURI = uriParam.substring(0, uriParam.length - 1);\r\n        } else {\r\n            tempURI = uriParam;\r\n        }\r\n\r\n        // take the modified authentication uri and prepend it to all of the targets passed\r\n        // in. E.g., the targetURIs object will include a \"loginURI\" property that has the \r\n        // uri segment which is to be added to the auth uri for logging in         \r\n        for (target in targetURIs) {\r\n            if (targetURIs.hasOwnProperty(target)) {\r\n                this[target] = tempURI + targetURIs[target];\r\n            }\r\n        }\r\n\r\n        this._authenticationModel = authModel;\r\n        this._uri = uriParam; // keep the uri property the same as what was passed in\r\n\r\n        this._loggedIn = false;\r\n        this._dataKeys = {\r\n            uri: \".uri\",\r\n            loggedIn: \".loggedIn\"\r\n        };\r\n\r\n        // future: for page refresh -- storeSessionInfo(\"authenticationModel\", authenticationModel);\r\n\r\n        if (typeof sessionStorage === \"undefined\") {\r\n            // \"AuthenticationProvider: No support for sessionStorage.\"\r\n            throw new Error(progress.data._getMsgText(\"jsdoMSG126\",\r\n                \"AuthenticationProvider\",\r\n                \"sessionStorage\"));\r\n        }\r\n        // if you switch to a different type of storage, change the error message argument above\r\n        this._storage = sessionStorage;\r\n\r\n        // maybe should come up with something more intelligent than this\r\n        this._storageKey = this._uri;  // or name\r\n        this._dataKeys.uri = this._storageKey + this._dataKeys.uri;\r\n        this._dataKeys.loggedIn = this._storageKey + this._dataKeys.loggedIn;\r\n\r\n        if (this._retrieveLoggedIn()) {\r\n            this._loggedIn = true;\r\n        }\r\n    };\r\n\r\n\r\n    // Store data in storage with the uri as the key. setItem() throws. (Should add an\r\n    // option for the developer to specify the key)\r\n    // a \"QuotaExceededError\" error if there is insufficient storage space or \r\n    // \"the user has disabled storage for the site\" (Web storage spec at WHATWG)\r\n    progress.data.AuthenticationProvider.prototype._storeInfo = function () {\r\n        this._storage.setItem(this._dataKeys.uri, JSON.stringify(this._uri));\r\n        this._storage.setItem(this._dataKeys.loggedIn, JSON.stringify(this._loggedIn));\r\n    };\r\n\r\n    // Get a piece of state data from storage. Returns null if the item isn't in storage\r\n    progress.data.AuthenticationProvider.prototype._retrieveInfoItem = function (propName) {\r\n        var jsonStr = this._storage.getItem(propName),\r\n            value = null;\r\n\r\n        if (jsonStr !== null) {\r\n            try {\r\n                value = JSON.parse(jsonStr);\r\n            } catch (e) {\r\n                value = null;\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    // Get an AuthenticationProvider's uri from storage\r\n    progress.data.AuthenticationProvider.prototype._retrieveURI = function () {\r\n        return this._retrieveInfoItem(this._dataKeys.uri);\r\n    };\r\n\r\n    // Get an AuthenticationProvider's logon status from storage\r\n    progress.data.AuthenticationProvider.prototype._retrieveLoggedIn = function () {\r\n        return this._retrieveInfoItem(this._dataKeys.loggedIn);\r\n    };\r\n\r\n    // Clear the persistent storage used by an AuthenticationProvider\r\n    progress.data.AuthenticationProvider.prototype._clearInfo = function (info) {\r\n        this._storage.removeItem(this._dataKeys.uri);\r\n        this._storage.removeItem(this._dataKeys.loggedIn);\r\n    };\r\n\r\n    // Put the internal state back to where it is when the constructor finishes\r\n    // running (so the authentication model and uri are not changed, but other data is reset.\r\n    // and storage is cleared out)\r\n    progress.data.AuthenticationProvider.prototype._reset = function () {\r\n        this._clearInfo();\r\n        this._loggedIn = false;\r\n    };\r\n\r\n\r\n    // General purpose utility method, no overrides expected\r\n    progress.data.AuthenticationProvider.prototype._settlePromise = function (deferred, result, info) {\r\n        if (result === progress.data.Session.SUCCESS) {\r\n            deferred.resolve(this, result, info);\r\n        } else {\r\n            deferred.reject(this, result, info);\r\n        }\r\n    };\r\n\r\n    // General purpose utility method, no overrides expected\r\n    progress.data.AuthenticationProvider.prototype._checkStringArg = function (fnName,\r\n                                                                               argToCheck,\r\n                                                                               argPosition,\r\n                                                                               argName) {\r\n        // TODO: ? distinguish between undefined (so we can give developer a clue that they\r\n        // may be missing a property) and defined but wrong type\r\n        if (typeof argToCheck !== \"string\") {\r\n            // AuthenticationProvider: Argument {param-position} must be of type string in {fnName} call.\r\n            throw new Error(progress.data._getMsgText(\r\n                \"jsdoMSG121\",\r\n                \"AuthenticationProvider\",\r\n                argPosition,\r\n                \"string\",\r\n                fnName\r\n            ));\r\n        } else if (argToCheck.length === 0) {\r\n            //  AuthenticationProvider: {param-name} cannot be an empty string.\r\n            throw new Error(progress.data._getMsgText(\r\n                \"jsdoMSG501\",\r\n                \"AuthenticationProvider\",\r\n                argName,\r\n                fnName\r\n            ));\r\n        }\r\n    };\r\n\r\n\r\n    // \"STATIC\" PROPERTIES AND METHODS -- not on the prototype -- you cannot access these through an\r\n    // object created by \"new\" --- they are  properties of the AuthenticationProvider constructor function\r\n\r\n    // Takes an XHR as an input. If the xhr status is 401 (Unauthorized), determines whether\r\n    // the auth failure was due to an expired token. Returns progress.data.Session.EXPIRED_TOKEN \r\n    // if it was, progress.data.Session.AUTHENTICATION_FAILURE if it wasn't, null if the xhr status wasn't 401\r\n    progress.data.AuthenticationProvider._getAuthFailureReason = function (xhr) {\r\n        var contentType,\r\n            jsonObject,\r\n            result = progress.data.Session.AUTHENTICATION_FAILURE;\r\n\r\n        if (xhr.status === 401) {\r\n            contentType = xhr.getResponseHeader(\"Content-Type\");\r\n            if (contentType && (contentType.indexOf(\"application/json\") > -1) && xhr.responseText) {\r\n                jsonObject = JSON.parse(xhr.responseText);\r\n                if (jsonObject.error === \"sso.token.expired_token\") {\r\n                    result = progress.data.Session.EXPIRED_TOKEN;\r\n                }\r\n            }\r\n        } else {\r\n            result = null;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    Object.defineProperty(progress.data.AuthenticationProvider, '_homeLoginURIBase', {\r\n        value: \"/static/home.html\",\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(progress.data.AuthenticationProvider, '_springLoginURIBase', {\r\n        value: \"/static/auth/j_spring_security_check\",\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(progress.data.AuthenticationProvider, '_springLogoutURIBase', {\r\n        value: \"/static/auth/j_spring_security_logout\",\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(progress.data.AuthenticationProvider, '_springFormTokenLoginURIBase', {\r\n        value: progress.data.AuthenticationProvider._springLoginURIBase + \"?OECP=yes\",\r\n        enumerable: true\r\n    });\r\n    Object.defineProperty(progress.data.AuthenticationProvider, '_springFormTokenRefreshURIBase', {\r\n        value: \"/static/auth/token?op=refresh\",\r\n        enumerable: true\r\n    });\r\n\r\n}());\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./JSDO/src/auth/progress.auth.js","//----------------------------------------------------------------------\r\n// AdalJS v1.0.17\r\n// @preserve Copyright (c) Microsoft Open Technologies, Inc.\r\n// All Rights Reserved\r\n// Apache License 2.0\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//id\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//----------------------------------------------------------------------\r\n\r\nvar AuthenticationContext = (function () {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Configuration options for Authentication Context.\r\n     * @class config\r\n     *  @property {string} tenant - Your target tenant.\r\n     *  @property {string} clientId - Client ID assigned to your app by Azure Active Directory.\r\n     *  @property {string} redirectUri - Endpoint at which you expect to receive tokens.Defaults to `window.location.href`.\r\n     *  @property {string} instance - Azure Active Directory Instance.Defaults to `https://login.microsoftonline.com/`.\r\n     *  @property {Array} endpoints - Collection of {Endpoint-ResourceId} used for automatically attaching tokens in webApi calls.\r\n     *  @property {Boolean} popUp - Set this to true to enable login in a popup winodow instead of a full redirect.Defaults to `false`.\r\n     *  @property {string} localLoginUrl - Set this to redirect the user to a custom login page.\r\n     *  @property {function} displayCall - User defined function of handling the navigation to Azure AD authorization endpoint in case of login. Defaults to 'null'.\r\n     *  @property {string} postLogoutRedirectUri - Redirects the user to postLogoutRedirectUri after logout. Defaults is 'redirectUri'.\r\n     *  @property {string} cacheLocation - Sets browser storage to either 'localStorage' or sessionStorage'. Defaults to 'sessionStorage'.\r\n     *  @property {Array.<string>} anonymousEndpoints Array of keywords or URI's. Adal will not attach a token to outgoing requests that have these keywords or uri. Defaults to 'null'.\r\n     *  @property {number} expireOffsetSeconds If the cached token is about to be expired in the expireOffsetSeconds (in seconds), Adal will renew the token instead of using the cached token. Defaults to 300 seconds.\r\n     *  @property {string} correlationId Unique identifier used to map the request with the response. Defaults to RFC4122 version 4 guid (128 bits).\r\n     *  @property {number} loadFrameTimeout The number of milliseconds of inactivity before a token renewal response from AAD should be considered timed out.\r\n     */\r\n\r\n    /**\r\n     * Creates a new AuthenticationContext object.\r\n     * @constructor\r\n     * @param {config}  config               Configuration options for AuthenticationContext\r\n     */\r\n\r\n    AuthenticationContext = function (config) {\r\n        /**\r\n         * Enum for request type\r\n         * @enum {string}\r\n         */\r\n        this.REQUEST_TYPE = {\r\n            LOGIN: 'LOGIN',\r\n            RENEW_TOKEN: 'RENEW_TOKEN',\r\n            UNKNOWN: 'UNKNOWN'\r\n        };\r\n\r\n        this.RESPONSE_TYPE = {\r\n            ID_TOKEN_TOKEN: 'id_token token',\r\n            TOKEN: 'token'\r\n        };\r\n\r\n        /**\r\n         * Enum for storage constants\r\n         * @enum {string}\r\n         */\r\n        this.CONSTANTS = {\r\n            ACCESS_TOKEN: 'access_token',\r\n            EXPIRES_IN: 'expires_in',\r\n            ID_TOKEN: 'id_token',\r\n            ERROR_DESCRIPTION: 'error_description',\r\n            SESSION_STATE: 'session_state',\r\n            ERROR: 'error',\r\n            STORAGE: {\r\n                TOKEN_KEYS: 'adal.token.keys',\r\n                ACCESS_TOKEN_KEY: 'adal.access.token.key',\r\n                EXPIRATION_KEY: 'adal.expiration.key',\r\n                STATE_LOGIN: 'adal.state.login',\r\n                STATE_RENEW: 'adal.state.renew',\r\n                NONCE_IDTOKEN: 'adal.nonce.idtoken',\r\n                SESSION_STATE: 'adal.session.state',\r\n                USERNAME: 'adal.username',\r\n                IDTOKEN: 'adal.idtoken',\r\n                ERROR: 'adal.error',\r\n                ERROR_DESCRIPTION: 'adal.error.description',\r\n                LOGIN_REQUEST: 'adal.login.request',\r\n                LOGIN_ERROR: 'adal.login.error',\r\n                RENEW_STATUS: 'adal.token.renew.status',\r\n                ANGULAR_LOGIN_REQUEST: 'adal.angular.login.request'\r\n            },\r\n            RESOURCE_DELIMETER: '|',\r\n            CACHE_DELIMETER: '||',\r\n            LOADFRAME_TIMEOUT: 6000,\r\n            TOKEN_RENEW_STATUS_CANCELED: 'Canceled',\r\n            TOKEN_RENEW_STATUS_COMPLETED: 'Completed',\r\n            TOKEN_RENEW_STATUS_IN_PROGRESS: 'In Progress',\r\n            LOGGING_LEVEL: {\r\n                ERROR: 0,\r\n                WARN: 1,\r\n                INFO: 2,\r\n                VERBOSE: 3\r\n            },\r\n            LEVEL_STRING_MAP: {\r\n                0: 'ERROR:',\r\n                1: 'WARNING:',\r\n                2: 'INFO:',\r\n                3: 'VERBOSE:'\r\n            },\r\n            POPUP_WIDTH: 483,\r\n            POPUP_HEIGHT: 600\r\n        };\r\n\r\n        if (AuthenticationContext.prototype._singletonInstance) {\r\n            return AuthenticationContext.prototype._singletonInstance;\r\n        }\r\n        AuthenticationContext.prototype._singletonInstance = this;\r\n\r\n        // public\r\n        this.instance = 'https://login.microsoftonline.com/';\r\n        this.config = {};\r\n        this.callback = null;\r\n        this.popUp = false;\r\n        this.isAngular = false;\r\n\r\n        // private\r\n        this._user = null;\r\n        this._activeRenewals = {};\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n        this._renewStates = [];\r\n        this._callBackMappedToRenewStates = {};\r\n        this._callBacksMappedToRenewStates = {};\r\n        this._openedWindows = [];\r\n        this._requestType = this.REQUEST_TYPE.LOGIN;\r\n        window._adalInstance = this;\r\n\r\n        // validate before constructor assignments\r\n        if (config.displayCall && typeof config.displayCall !== 'function') {\r\n            throw new Error('displayCall is not a function');\r\n        }\r\n\r\n        if (!config.clientId) {\r\n            throw new Error('clientId is required');\r\n        }\r\n\r\n        this.config = this._cloneConfig(config);\r\n\r\n        if (this.config.navigateToLoginRequestUrl === undefined)\r\n            this.config.navigateToLoginRequestUrl = true;\r\n\r\n        if (this.config.popUp)\r\n            this.popUp = true;\r\n\r\n        if (this.config.callback && typeof this.config.callback === 'function')\r\n            this.callback = this.config.callback;\r\n\r\n        if (this.config.instance) {\r\n            this.instance = this.config.instance;\r\n        }\r\n\r\n        // App can request idtoken for itself using clientid as resource\r\n        if (!this.config.loginResource) {\r\n            this.config.loginResource = this.config.clientId;\r\n        }\r\n\r\n        // redirect and logout_redirect are set to current location by default\r\n        if (!this.config.redirectUri) {\r\n            // strip off query parameters or hashes from the redirect uri as AAD does not allow those.\r\n            this.config.redirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.postLogoutRedirectUri) {\r\n            // strip off query parameters or hashes from the post logout redirect uri as AAD does not allow those.\r\n            this.config.postLogoutRedirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.anonymousEndpoints) {\r\n            this.config.anonymousEndpoints = [];\r\n        }\r\n\r\n        if (this.config.isAngular) {\r\n            this.isAngular = this.config.isAngular;\r\n        }\r\n\r\n        if (this.config.loadFrameTimeout) {\r\n            this.CONSTANTS.LOADFRAME_TIMEOUT = this.config.loadFrameTimeout;\r\n        }\r\n    };\r\n\r\n    if (typeof window !== 'undefined') {\r\n        window.Logging = {\r\n            piiLoggingEnabled: false,\r\n            level: 0,\r\n            log: function (message) { }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initiates the login process by redirecting the user to Azure AD authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.login = function () {\r\n        if (this._loginInProgress) {\r\n            this.info(\"Login in progress\");\r\n            return;\r\n        }\r\n\r\n        this._loginInProgress = true;\r\n\r\n        // Token is not present and user needs to login\r\n        var expectedState = this._guid();\r\n        this.config.state = expectedState;\r\n        this._idTokenNonce = this._guid();\r\n        var loginStartPage = this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);\r\n\r\n        if (!loginStartPage || loginStartPage === \"\") {\r\n            loginStartPage = window.location.href;\r\n        }\r\n        else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, \"\")\r\n        }\r\n\r\n        this.verbose('Expected state: ' + expectedState + ' startPage:' + loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, expectedState, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        var urlNavigate = this._getNavigateUrl('id_token', null) + '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n\r\n        if (this.config.displayCall) {\r\n            // User defined way of handling the navigation\r\n            this.config.displayCall(urlNavigate);\r\n        }\r\n        else if (this.popUp) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');// so requestInfo does not match redirect case\r\n            this._renewStates.push(expectedState);\r\n            this.registerCallback(expectedState, this.config.clientId, this.callback);\r\n            this._loginPopup(urlNavigate);\r\n        }\r\n        else {\r\n            this.promptUser(urlNavigate);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Configures popup window for login.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n            * adding winLeft and winTop to account for dual monitor\r\n            * using screenLeft and screenTop for IE8 and earlier\r\n            */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n            * window.innerWidth displays browser window's height and width excluding toolbars\r\n            * using document.documentElement.clientWidth for IE8 and earlier\r\n            */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n            var popupWindow = window.open(urlNavigate, title, 'width=' + popUpWidth + ', height=' + popUpHeight + ', top=' + top + ', left=' + left);\r\n\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.warn('Error opening popup, ' + e.message);\r\n            this._loginInProgress = false;\r\n            this._acquireTokenInProgress = false;\r\n            return null;\r\n        }\r\n    }\r\n\r\n    AuthenticationContext.prototype._handlePopupError = function (loginCallback, resource, error, errorDesc, loginError) {\r\n        this.warn(errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, error);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, loginError);\r\n\r\n        if (resource && this._activeRenewals[resource]) {\r\n            this._activeRenewals[resource] = null;\r\n        }\r\n\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n\r\n        if (loginCallback) {\r\n            loginCallback(errorDesc, null, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After authorization, the user will be sent to your specified redirect_uri with the user's bearer token\r\n     * attached to the URI fragment as an id_token field. It closes popup window after redirection.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loginPopup = function (urlNavigate, resource, callback) {\r\n        var popupWindow = this._openPopup(urlNavigate, \"login\", this.CONSTANTS.POPUP_WIDTH, this.CONSTANTS.POPUP_HEIGHT);\r\n        var loginCallback = callback || this.callback;\r\n\r\n        if (popupWindow == null) {\r\n            var error = 'Error opening popup';\r\n            var errorDesc = 'Popup Window is null. This can happen if you are using IE';\r\n            this._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n            return;\r\n        }\r\n\r\n        this._openedWindows.push(popupWindow);\r\n\r\n        if (this.config.redirectUri.indexOf('#') != -1) {\r\n            var registeredRedirectUri = this.config.redirectUri.split(\"#\")[0];\r\n        }\r\n\r\n        else {\r\n            var registeredRedirectUri = this.config.redirectUri;\r\n        }\r\n\r\n        var that = this;\r\n\r\n        var pollTimer = window.setInterval(function () {\r\n            if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                var error = 'Popup Window closed';\r\n                var errorDesc = 'Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge'\r\n\r\n                if (that.isAngular) {\r\n                    that._broadcast('adal:popUpClosed', errorDesc + that.CONSTANTS.RESOURCE_DELIMETER + error);\r\n                }\r\n\r\n                that._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n                window.clearInterval(pollTimer);\r\n                return;\r\n            }\r\n            try {\r\n                var popUpWindowLocation = popupWindow.location;\r\n                if (encodeURI(popUpWindowLocation.href).indexOf(encodeURI(registeredRedirectUri)) != -1) {\r\n                    if (that.isAngular) {\r\n                        that._broadcast('adal:popUpHashChanged', popUpWindowLocation.hash);\r\n                    }\r\n                    else {\r\n                        that.handleWindowCallback(popUpWindowLocation.hash);\r\n                    }\r\n\r\n                    window.clearInterval(pollTimer);\r\n                    that._loginInProgress = false;\r\n                    that._acquireTokenInProgress = false;\r\n                    that.info(\"Closing popup window\");\r\n                    that._openedWindows = [];\r\n                    popupWindow.close();\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }, 1);\r\n    };\r\n\r\n    AuthenticationContext.prototype._broadcast = function (eventName, data) {\r\n        // Custom Event is not supported in IE, below IIFE will polyfill the CustomEvent() constructor functionality in Internet Explorer 9 and higher\r\n        (function () {\r\n\r\n            if (typeof window.CustomEvent === \"function\") {\r\n                return false;\r\n            }\r\n\r\n            function CustomEvent(event, params) {\r\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n                var evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n\r\n    AuthenticationContext.prototype.loginInProgress = function () {\r\n        return this._loginInProgress;\r\n    };\r\n\r\n    /**\r\n     * Checks for the resource in the cache. By default, cache location is Session Storage\r\n     * @ignore\r\n     * @returns {Boolean} 'true' if login is in progress, else returns 'false'.\r\n     */\r\n    AuthenticationContext.prototype._hasResource = function (key) {\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n        return keys && !this._isEmpty(keys) && (keys.indexOf(key + this.CONSTANTS.RESOURCE_DELIMETER) > -1);\r\n    };\r\n\r\n    /**\r\n     * Gets token for the specified resource from the cache.\r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @returns {string} token if if it exists and not expired, otherwise null.\r\n     */\r\n    AuthenticationContext.prototype.getCachedToken = function (resource) {\r\n        if (!this._hasResource(resource)) {\r\n            return null;\r\n        }\r\n\r\n        var token = this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource);\r\n        var expiry = this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource);\r\n\r\n        // If expiration is within offset, it will force renew\r\n        var offset = this.config.expireOffsetSeconds || 300;\r\n\r\n        if (expiry && (expiry > this._now() + offset)) {\r\n            return token;\r\n        } else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n    * User information from idtoken.\r\n    *  @class User\r\n    *  @property {string} userName - username assigned from upn or email.\r\n    *  @property {object} profile - properties parsed from idtoken.\r\n    */\r\n\r\n    /**\r\n     * If user object exists, returns it. Else creates a new user object by decoding id_token from the cache.\r\n     * @returns {User} user object\r\n     */\r\n    AuthenticationContext.prototype.getCachedUser = function () {\r\n        if (this._user) {\r\n            return this._user;\r\n        }\r\n\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n        this._user = this._createUser(idtoken);\r\n        return this._user;\r\n    };\r\n\r\n    /**\r\n     * Adds the passed callback to the array of callbacks for the specified resource and puts the array on the window object. \r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @param {string}   expectedState A unique identifier (guid).\r\n     * @param {tokenCallback} callback - The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.registerCallback = function (expectedState, resource, callback) {\r\n        this._activeRenewals[resource] = expectedState;\r\n\r\n        if (!this._callBacksMappedToRenewStates[expectedState]) {\r\n            this._callBacksMappedToRenewStates[expectedState] = [];\r\n        }\r\n\r\n        var self = this;\r\n        this._callBacksMappedToRenewStates[expectedState].push(callback);\r\n\r\n        if (!this._callBackMappedToRenewStates[expectedState]) {\r\n            this._callBackMappedToRenewStates[expectedState] = function (errorDesc, token, error, tokenType) {\r\n                self._activeRenewals[resource] = null;\r\n\r\n                for (var i = 0; i < self._callBacksMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        self._callBacksMappedToRenewStates[expectedState][i](errorDesc, token, error, tokenType);\r\n                    }\r\n                    catch (error) {\r\n                        self.warn(error);\r\n                    }\r\n                }\r\n\r\n                self._callBacksMappedToRenewStates[expectedState] = null;\r\n                self._callBackMappedToRenewStates[expectedState] = null;\r\n            };\r\n        }\r\n    };\r\n\r\n    // var errorResponse = {error:'', error_description:''};\r\n    // var token = 'string token';\r\n    // callback(errorResponse, token)\r\n    // with callback\r\n    /**\r\n     * Acquires access token with hidden iframe\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewToken = function (resource, callback, responseType) {\r\n        // use iframe to try to renew token\r\n        // use given resource to create new authz url\r\n        this.info('renewToken is called for resource:' + resource);\r\n        var frameHandle = this._addAdalFrame('adalRenewFrame' + resource);\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        responseType = responseType || 'token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n\r\n        if (responseType === this.RESPONSE_TYPE.ID_TOKEN_TOKEN) {\r\n            this._idTokenNonce = this._guid();\r\n            this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n            urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        }\r\n\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalRenewFrame' + resource, resource);\r\n\r\n    };\r\n\r\n    /**\r\n     * Renews idtoken for app's own backend when resource is clientId and calls the callback with token/error\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewIdToken = function (callback, responseType) {\r\n        // use iframe to try to renew token\r\n        this.info('renewIdToken is called');\r\n        var frameHandle = this._addAdalFrame('adalIdTokenFrame');\r\n        var expectedState = this._guid() + '|' + this.config.clientId;\r\n        this._idTokenNonce = this._guid();\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew Idtoken Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        var resource = responseType === null || typeof (responseType) === \"undefined\" ? null : this.config.clientId;\r\n        var responseType = responseType || 'id_token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        this.registerCallback(expectedState, this.config.clientId, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalIdTokenFrame', this.config.clientId);\r\n    };\r\n\r\n    /**\r\n     * Checks if the authorization endpoint URL contains query string parameters\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlContainsQueryStringParameter = function (name, url) {\r\n        // regex to detect pattern of a ? or & followed by the name parameter and an equals character\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=\");\r\n        return regex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Removes the query string parameter from the authorization endpoint URL if it exists\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlRemoveQueryStringParameter = function (url, name) {\r\n        // we remove &name=value, name=value& and name=value\r\n        // &name=value\r\n        var regex = new RegExp('(\\\\&' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        // name=value&\r\n        regex = new RegExp('(' + name + '=)[^\\&]+&');\r\n        url = url.replace(regex, '');\r\n        // name=value\r\n        regex = new RegExp('(' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        return url;\r\n    }\r\n\r\n    // Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left\r\n    // registered when network errors occur and subsequent token requests for same resource are registered to the pending request\r\n    /**\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrameTimeout = function (urlNavigation, frameName, resource) {\r\n        //set iframe session to pending\r\n        this.verbose('Set loading state to pending for: ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS);\r\n        this._loadFrame(urlNavigation, frameName);\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self._getItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource) === self.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS) {\r\n                // fail the iframe session if it's in pending state\r\n                self.verbose('Loading frame has timed out after: ' + (self.CONSTANTS.LOADFRAME_TIMEOUT / 1000) + ' seconds for resource ' + resource);\r\n                var expectedState = self._activeRenewals[resource];\r\n\r\n                if (expectedState && self._callBackMappedToRenewStates[expectedState]) {\r\n                    self._callBackMappedToRenewStates[expectedState]('Token renewal operation failed due to timeout', null, 'Token Renewal Failed');\r\n                }\r\n\r\n                self._saveItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource, self.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED);\r\n            }\r\n        }, self.CONSTANTS.LOADFRAME_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrame = function (urlNavigate, frameName) {\r\n        // This trick overcomes iframe navigation in IE\r\n        // IE does not load the page consistently in iframe\r\n        var self = this;\r\n        self.info('LoadFrame: ' + frameName);\r\n        var frameCheck = frameName;\r\n        setTimeout(function () {\r\n            var frameHandle = self._addAdalFrame(frameCheck);\r\n\r\n            if (frameHandle.src === '' || frameHandle.src === 'about:blank') {\r\n                frameHandle.src = urlNavigate;\r\n                self._loadFrame(urlNavigate, frameCheck);\r\n            }\r\n\r\n        }, 500);\r\n    };\r\n\r\n    /**\r\n     * @callback tokenCallback\r\n     * @param {string} error_description error description returned from AAD if token request fails.\r\n     * @param {string} token token returned from AAD if token request is successful.\r\n     * @param {string} error error message returned from AAD if token request fails.\r\n     */\r\n\r\n    /**\r\n     * Acquires token from the cache if it is not expired. Otherwise sends request to AAD to obtain a new token.\r\n     * @param {string}   resource  ResourceUri identifying the target resource\r\n     * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.acquireToken = function (resource, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var token = this.getCachedToken(resource);\r\n\r\n        if (token) {\r\n            this.info('Token is already in cache for resource:' + resource);\r\n            callback(null, token, null);\r\n            return;\r\n        }\r\n\r\n        if (!this._user && !(this.config.extraQueryParameter && this.config.extraQueryParameter.indexOf('login_hint') !== -1)) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        // renew attempt with iframe\r\n        // Already renewing for this resource, callback when we get the token.\r\n        if (this._activeRenewals[resource]) {\r\n            // Active renewals contains the state for each renewal.\r\n            this.registerCallback(this._activeRenewals[resource], resource, callback);\r\n        }\r\n        else {\r\n            this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n            if (resource === this.config.clientId) {\r\n                // App uses idtoken to send to api endpoints\r\n                // Default resource is tracked as clientid to store this token\r\n                if (this._user) {\r\n                    this.verbose('renewing idtoken');\r\n                    this._renewIdToken(callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewIdToken(callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            } else {\r\n                if (this._user) {\r\n                    this.verbose('renewing access_token');\r\n                    this._renewToken(resource, callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewToken(resource, callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n  * Acquires token (interactive flow using a popUp window) by sending request to AAD to obtain a new token.\r\n  * @param {string}   resource  ResourceUri identifying the target resource\r\n  * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n  * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n  */\r\n    AuthenticationContext.prototype.acquireTokenPopup = function (resource, extraQueryParameters, claims, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this._renewStates.push(expectedState);\r\n        this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this._loginPopup(urlNavigate, resource, callback);\r\n\r\n    };\r\n\r\n    /**\r\n      * Acquires token (interactive flow using a redirect) by sending request to AAD to obtain a new token. In this case the callback passed in the Authentication\r\n      * request constructor will be called.\r\n      * @param {string}   resource  ResourceUri identifying the target resource\r\n      * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n      */\r\n    AuthenticationContext.prototype.acquireTokenRedirect = function (resource, extraQueryParameters, claims) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var callback = this.callback;\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, window.location.href);\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, expectedState, true);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n    /**\r\n     * Redirects the browser to Azure AD authorization endpoint.\r\n     * @param {string}   urlNavigate  Url of the authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.promptUser = function (urlNavigate) {\r\n        if (urlNavigate) {\r\n            this.infoPii('Navigate to:' + urlNavigate);\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            this.info('Navigate url is empty');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears cache items.\r\n     */\r\n    AuthenticationContext.prototype.clearCache = function () {\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._renewStates = [];\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n\r\n        if (!this._isEmpty(keys)) {\r\n            keys = keys.split(this.CONSTANTS.RESOURCE_DELIMETER);\r\n            for (var i = 0; i < keys.length && keys[i] !== \"\"; i++) {\r\n                this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + keys[i], '');\r\n                this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + keys[i], 0);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, '');\r\n    };\r\n\r\n    /**\r\n     * Clears cache items for a given resource.\r\n     * @param {string}  resource a URI that identifies the resource.\r\n     */\r\n    AuthenticationContext.prototype.clearCacheForResource = function (resource) {\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        if (this._hasResource(resource)) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Redirects user to logout endpoint.\r\n     * After logout, it will redirect to postLogoutRedirectUri if added as a property on the config object.\r\n     */\r\n    AuthenticationContext.prototype.logOut = function () {\r\n        this.clearCache();\r\n        this._user = null;\r\n        var urlNavigate;\r\n\r\n        if (this.config.logOutUri) {\r\n            urlNavigate = this.config.logOutUri;\r\n        } else {\r\n            var tenant = 'common';\r\n            var logout = '';\r\n\r\n            if (this.config.tenant) {\r\n                tenant = this.config.tenant;\r\n            }\r\n\r\n            if (this.config.postLogoutRedirectUri) {\r\n                logout = 'post_logout_redirect_uri=' + encodeURIComponent(this.config.postLogoutRedirectUri);\r\n            }\r\n\r\n            urlNavigate = this.instance + tenant + '/oauth2/logout?' + logout;\r\n        }\r\n\r\n        this.infoPii('Logout navigate to: ' + urlNavigate);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n\r\n    AuthenticationContext.prototype._isEmpty = function (str) {\r\n        return (typeof str === 'undefined' || !str || 0 === str.length);\r\n    };\r\n\r\n    /**\r\n     * @callback userCallback\r\n     * @param {string} error error message if user info is not available.\r\n     * @param {User} user user object retrieved from the cache.\r\n     */\r\n\r\n    /**\r\n     * Calls the passed in callback with the user object or error message related to the user.\r\n     * @param {userCallback} callback - The callback provided by the caller. It will be called with user or error.\r\n     */\r\n    AuthenticationContext.prototype.getUser = function (callback) {\r\n        // IDToken is first call\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('callback is not a function');\r\n        }\r\n\r\n        // user in memory\r\n        if (this._user) {\r\n            callback(null, this._user);\r\n            return;\r\n        }\r\n\r\n        // frame is used to get idtoken\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n\r\n        if (!this._isEmpty(idtoken)) {\r\n            this.info('User exists in cache: ');\r\n            this._user = this._createUser(idtoken);\r\n            callback(null, this._user);\r\n        } else {\r\n            this.warn('User information is not available');\r\n            callback('User information is not available', null);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time.\r\n     * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addHintParameters = function (urlNavigate) {\r\n        //If you don�t use prompt=none, then if the session does not exist, there will be a failure.\r\n        //If sid is sent alongside domain or login hints, there will be a failure since request is ambiguous.\r\n        //If sid is sent with a prompt value other than none or attempt_none, there will be a failure since the request is ambiguous.\r\n\r\n        if (this._user && this._user.profile) {\r\n            if (this._user.profile.sid && urlNavigate.indexOf('&prompt=none') !== -1) {\r\n                // don't add sid twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"sid\", urlNavigate)) {\r\n                    // add sid\r\n                    urlNavigate += '&sid=' + encodeURIComponent(this._user.profile.sid);\r\n                }\r\n            }\r\n            else if (this._user.profile.upn) {\r\n                // don't add login_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"login_hint\", urlNavigate)) {\r\n                    // add login_hint\r\n                    urlNavigate += '&login_hint=' + encodeURIComponent(this._user.profile.upn);\r\n                }\r\n                // don't add domain_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"domain_hint\", urlNavigate) && this._user.profile.upn.indexOf('@') > -1) {\r\n                    var parts = this._user.profile.upn.split('@');\r\n                    // local part can include @ in quotes. Sending last part handles that.\r\n                    urlNavigate += '&domain_hint=' + encodeURIComponent(parts[parts.length - 1]);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return urlNavigate;\r\n    }\r\n\r\n    /**\r\n     * Creates a user object by decoding the id_token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._createUser = function (idToken) {\r\n        var user = null;\r\n        var parsedJson = this._extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === this.config.clientId.toLowerCase()) {\r\n\r\n                user = {\r\n                    userName: '',\r\n                    profile: parsedJson\r\n                };\r\n\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.userName = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.userName = parsedJson.email;\r\n                }\r\n            } else {\r\n                this.warn('IdToken has invalid aud field');\r\n            }\r\n\r\n        }\r\n\r\n        return user;\r\n    };\r\n\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHash = function (hash) {\r\n        if (hash.indexOf('#/') > -1) {\r\n            hash = hash.substring(hash.indexOf('#/') + 2);\r\n        } else if (hash.indexOf('#') > -1) {\r\n            hash = hash.substring(1);\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    /**\r\n     * Checks if the URL fragment contains access token, id token or error_description.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {Boolean} true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    AuthenticationContext.prototype.isCallback = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        return (\r\n            parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets login error\r\n     * @returns {string} error message related to login.\r\n     */\r\n    AuthenticationContext.prototype.getLoginError = function () {\r\n        return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR);\r\n    };\r\n\r\n    /**\r\n     * Request info object created from the response received from AAD.\r\n     *  @class RequestInfo\r\n     *  @property {object} parameters - object comprising of fields such as id_token/error, session_state, state, e.t.c.\r\n     *  @property {REQUEST_TYPE} requestType - either LOGIN, RENEW_TOKEN or UNKNOWN.\r\n     *  @property {boolean} stateMatch - true if state is valid, false otherwise.\r\n     *  @property {string} stateResponse - unique guid used to match the response with the request.\r\n     *  @property {boolean} valid - true if requestType contains id_token, access_token or error, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Creates a requestInfo object from the URL fragment and returns it.\r\n     * @returns {RequestInfo} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     */\r\n    AuthenticationContext.prototype.getRequestInfo = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        var requestInfo = {\r\n            valid: false,\r\n            parameters: {},\r\n            stateMatch: false,\r\n            stateResponse: '',\r\n            requestType: this.REQUEST_TYPE.UNKNOWN,\r\n        };\r\n\r\n        if (parameters) {\r\n            requestInfo.parameters = parameters;\r\n            if (parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n\r\n                requestInfo.valid = true;\r\n\r\n                // which call\r\n                var stateResponse = '';\r\n                if (parameters.hasOwnProperty('state')) {\r\n                    this.verbose('State: ' + parameters.state);\r\n                    stateResponse = parameters.state;\r\n                } else {\r\n                    this.warn('No state returned');\r\n                    return requestInfo;\r\n                }\r\n\r\n                requestInfo.stateResponse = stateResponse;\r\n\r\n                // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n                // incoming callback needs to be looked up to find the request type\r\n                if (this._matchState(requestInfo)) { // loginRedirect or acquireTokenRedirect\r\n                    return requestInfo;\r\n                }\r\n\r\n                // external api requests may have many renewtoken requests for different resource\r\n                if (!requestInfo.stateMatch && window.parent) {\r\n                    requestInfo.requestType = this._requestType;\r\n                    var statesInParentContext = this._renewStates;\r\n                    for (var i = 0; i < statesInParentContext.length; i++) {\r\n                        if (statesInParentContext[i] === requestInfo.stateResponse) {\r\n                            requestInfo.stateMatch = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return requestInfo;\r\n    };\r\n\r\n    /**\r\n    * Matches nonce from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchNonce = function (user) {\r\n        var requestNonce = this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);\r\n\r\n        if (requestNonce) {\r\n            requestNonce = requestNonce.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < requestNonce.length; i++) {\r\n                if (requestNonce[i] === user.profile.nonce) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n    * Matches state from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchState = function (requestInfo) {\r\n        var loginStates = this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);\r\n\r\n        if (loginStates) {\r\n            loginStates = loginStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < loginStates.length; i++) {\r\n                if (loginStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.LOGIN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        var acquireTokenStates = this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);\r\n\r\n        if (acquireTokenStates) {\r\n            acquireTokenStates = acquireTokenStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < acquireTokenStates.length; i++) {\r\n                if (acquireTokenStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Extracts resource value from state.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getResourceFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf('|');\r\n\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    /**\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.\r\n     */\r\n    AuthenticationContext.prototype.saveTokenFromHash = function (requestInfo) {\r\n        this.info('State status:' + requestInfo.stateMatch + '; Request type:' + requestInfo.requestType);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        var resource = this._getResourceFromState(requestInfo.stateResponse);\r\n\r\n        // Record error\r\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)) {\r\n            this.infoPii('Error :' + requestInfo.parameters.error + '; Error description:' + requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR, requestInfo.parameters.error);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n\r\n            if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                this._loginInProgress = false;\r\n                this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, requestInfo.parameters.error_description);\r\n            }\r\n        } else {\r\n            // It must verify the state from redirect\r\n            if (requestInfo.stateMatch) {\r\n                // record tokens to storage if exists\r\n                this.info('State is right');\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)) {\r\n                    this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, requestInfo.parameters[this.CONSTANTS.SESSION_STATE]);\r\n                }\r\n\r\n                var keys;\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)) {\r\n                    this.info('Fragment has access token');\r\n\r\n                    if (!this._hasResource(resource)) {\r\n                        keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                    }\r\n\r\n                    // save token with related resource\r\n                    this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN]);\r\n                    this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._expiresIn(requestInfo.parameters[this.CONSTANTS.EXPIRES_IN]));\r\n                }\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n                    this.info('Fragment has id token');\r\n                    this._loginInProgress = false;\r\n                    this._user = this._createUser(requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    if (this._user && this._user.profile) {\r\n                        if (!this._matchNonce(this._user)) {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Nonce received: ' + this._user.profile.nonce + ' is not same as requested: ' +\r\n                                this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN));\r\n                            this._user = null;\r\n                        } else {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n\r\n                            // Save idtoken as access token for app itself\r\n                            resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\r\n\r\n                            if (!this._hasResource(resource)) {\r\n                                keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                            }\r\n\r\n                            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);\r\n                        }\r\n                    }\r\n                    else {\r\n                        requestInfo.parameters['error'] = 'invalid id_token';\r\n                        requestInfo.parameters['error_description'] = 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN];\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'invalid id_token');\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    }\r\n                }\r\n            } else {\r\n                requestInfo.parameters['error'] = 'Invalid_state';\r\n                requestInfo.parameters['error_description'] = 'Invalid_state. state: ' + requestInfo.stateResponse;\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Invalid_state');\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid_state. state: ' + requestInfo.stateResponse);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED);\r\n    };\r\n\r\n    /**\r\n     * Gets resource for given endpoint if mapping is provided with config.\r\n     * @param {string} endpoint  -  The URI for which the resource Id is requested.\r\n     * @returns {string} resource for this API endpoint.\r\n     */\r\n    AuthenticationContext.prototype.getResourceForEndpoint = function (endpoint) {\r\n\r\n        // if user specified list of anonymous endpoints, no need to send token to these endpoints, return null.\r\n        if (this.config && this.config.anonymousEndpoints) {\r\n            for (var i = 0; i < this.config.anonymousEndpoints.length; i++) {\r\n                if (endpoint.indexOf(this.config.anonymousEndpoints[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config && this.config.endpoints) {\r\n            for (var configEndpoint in this.config.endpoints) {\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(configEndpoint) > -1) {\r\n                    return this.config.endpoints[configEndpoint];\r\n                }\r\n            }\r\n        }\r\n\r\n        // default resource will be clientid if nothing specified\r\n        // App will use idtoken for calls to itself\r\n        // check if it's staring from http or https, needs to match with app host\r\n        if (endpoint.indexOf('http://') > -1 || endpoint.indexOf('https://') > -1) {\r\n            if (this._getHostFromUri(endpoint) === this._getHostFromUri(this.config.redirectUri)) {\r\n                return this.config.loginResource;\r\n            }\r\n        }\r\n        else {\r\n            // in angular level, the url for $http interceptor call could be relative url,\r\n            // if it's relative call, we'll treat it as app backend call.            \r\n            return this.config.loginResource;\r\n        }\r\n\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Strips the protocol part of the URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHostFromUri = function (uri) {\r\n        // remove http:// or https:// from uri\r\n        var extractedUri = String(uri).replace(/^(https?:)\\/\\//, '');\r\n        extractedUri = extractedUri.split('/')[0];\r\n        return extractedUri;\r\n    };\r\n\r\n    /**\r\n     * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    AuthenticationContext.prototype.handleWindowCallback = function (hash) {\r\n        // This is for regular javascript usage for redirect handling\r\n        // need to make sure this is for callback\r\n        if (hash == null) {\r\n            hash = window.location.hash;\r\n        }\r\n\r\n        if (this.isCallback(hash)) {\r\n            var self = null;\r\n            var isPopup = false;\r\n\r\n            if (this._openedWindows.length > 0 && this._openedWindows[this._openedWindows.length - 1].opener\r\n                && this._openedWindows[this._openedWindows.length - 1].opener._adalInstance) {\r\n                self = this._openedWindows[this._openedWindows.length - 1].opener._adalInstance;\r\n                isPopup = true;\r\n            }\r\n            else if (window.parent && window.parent._adalInstance) {\r\n                self = window.parent._adalInstance;\r\n            }\r\n\r\n            var requestInfo = self.getRequestInfo(hash);\r\n            var token, tokenReceivedCallback, tokenType = null;\r\n\r\n            if (isPopup || window.parent !== window) {\r\n                tokenReceivedCallback = self._callBackMappedToRenewStates[requestInfo.stateResponse];\r\n            }\r\n            else {\r\n                tokenReceivedCallback = self.callback;\r\n            }\r\n\r\n            self.info(\"Returned from redirect url\");\r\n            self.saveTokenFromHash(requestInfo);\r\n\r\n            if ((requestInfo.requestType === this.REQUEST_TYPE.RENEW_TOKEN) && window.parent) {\r\n                if (window.parent !== window) {\r\n                    self.verbose(\"Window is in iframe, acquiring token silently\");\r\n                } else {\r\n                    self.verbose(\"acquiring token interactive in progress\");\r\n                }\r\n\r\n                token = requestInfo.parameters[self.CONSTANTS.ACCESS_TOKEN] || requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ACCESS_TOKEN;\r\n            } else if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                token = requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ID_TOKEN;\r\n            }\r\n\r\n            var errorDesc = requestInfo.parameters[self.CONSTANTS.ERROR_DESCRIPTION];\r\n            var error = requestInfo.parameters[self.CONSTANTS.ERROR];\r\n            try {\r\n                if (tokenReceivedCallback) {\r\n                    tokenReceivedCallback(errorDesc, token, error, tokenType);\r\n                }\r\n\r\n            } catch (err) {\r\n                self.error(\"Error occurred in user defined callback function: \" + err);\r\n            }\r\n\r\n            if (window.parent === window && !isPopup) {\r\n                if (self.config.navigateToLoginRequestUrl) {\r\n                    window.location.href = self._getItem(self.CONSTANTS.STORAGE.LOGIN_REQUEST);\r\n                } else window.location.hash = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Constructs the authorization endpoint URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getNavigateUrl = function (responseType, resource) {\r\n        var tenant = 'common';\r\n        if (this.config.tenant) {\r\n            tenant = this.config.tenant;\r\n        }\r\n\r\n        var urlNavigate = this.instance + tenant + '/oauth2/authorize' + this._serialize(responseType, this.config, resource) + this._addLibMetadata();\r\n        this.info('Navigate url:' + urlNavigate);\r\n        return urlNavigate;\r\n    };\r\n\r\n    /**\r\n     * Returns the decoded id_token.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this._decodeJwt(encodedIdToken);\r\n\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = this._base64DecodeStringUrlSafe(base64IdToken);\r\n\r\n            if (!base64Decoded) {\r\n                this.info('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            this.error('The returned id_token could not be decoded', err);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Decodes a string of data which has been encoded using base-64 encoding.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._base64DecodeStringUrlSafe = function (base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken))); // jshint ignore:line\r\n        }\r\n        else {\r\n            return decodeURIComponent(escape(this._decode(base64IdToken)));\r\n        }\r\n    };\r\n\r\n    //Take https://cdnjs.cloudflare.com/ajax/libs/Base64/0.3.0/base64.js and https://en.wikipedia.org/wiki/Base64 as reference. \r\n    AuthenticationContext.prototype._decode = function (base64IdToken) {\r\n        var codes = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        base64IdToken = String(base64IdToken).replace(/=+$/, '');\r\n\r\n        var length = base64IdToken.length;\r\n\r\n        if (length % 4 === 1) {\r\n            throw new Error('The token to be decoded is not correctly encoded.');\r\n        }\r\n\r\n        var h1, h2, h3, h4, bits, c1, c2, c3, decoded = '';\r\n\r\n        for (var i = 0; i < length; i += 4) {\r\n            //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n            // then 6 bits per base64 encoded character\r\n            h1 = codes.indexOf(base64IdToken.charAt(i));\r\n            h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n            h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n            h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n\r\n            // For padding, if last two are '='\r\n            if (i + 2 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n                c1 = bits >> 16 & 255;\r\n                c2 = bits >> 8 & 255;\r\n                decoded += String.fromCharCode(c1, c2);\r\n                break;\r\n            }\r\n            // if last one is '='\r\n            else if (i + 1 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12\r\n                c1 = bits >> 16 & 255;\r\n                decoded += String.fromCharCode(c1);\r\n                break;\r\n            }\r\n\r\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n\r\n            // then convert to 3 byte chars\r\n            c1 = bits >> 16 & 255;\r\n            c2 = bits >> 8 & 255;\r\n            c3 = bits & 255;\r\n\r\n            decoded += String.fromCharCode(c1, c2, c3);\r\n        }\r\n\r\n        return decoded;\r\n    };\r\n\r\n    /**\r\n     * Decodes an id token into an object with header, payload and signature fields.\r\n     * @ignore\r\n     */\r\n    // Adal.node js crack function\r\n    AuthenticationContext.prototype._decodeJwt = function (jwtToken) {\r\n        if (this._isEmpty(jwtToken)) {\r\n            return null;\r\n        };\r\n\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n\r\n        if (!matches || matches.length < 4) {\r\n            this.warn('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n\r\n        return crackedToken;\r\n    };\r\n\r\n    /**\r\n     * Converts string to represent binary data in ASCII string format by translating it into a radix-64 representation and returns it\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString = function (str) {\r\n        return str.replace('-', '+').replace('_', '/');\r\n    };\r\n\r\n    /**\r\n     * Serializes the parameters for the authorization endpoint URL and returns the serialized uri string.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._serialize = function (responseType, obj, resource) {\r\n        var str = [];\r\n\r\n        if (obj !== null) {\r\n            str.push('?response_type=' + responseType);\r\n            str.push('client_id=' + encodeURIComponent(obj.clientId));\r\n            if (resource) {\r\n                str.push('resource=' + encodeURIComponent(resource));\r\n            }\r\n\r\n            str.push('redirect_uri=' + encodeURIComponent(obj.redirectUri));\r\n            str.push('state=' + encodeURIComponent(obj.state));\r\n\r\n            if (obj.hasOwnProperty('slice')) {\r\n                str.push('slice=' + encodeURIComponent(obj.slice));\r\n            }\r\n\r\n            if (obj.hasOwnProperty('extraQueryParameter')) {\r\n                str.push(obj.extraQueryParameter);\r\n            }\r\n\r\n            var correlationId = obj.correlationId ? obj.correlationId : this._guid();\r\n            str.push('client-request-id=' + encodeURIComponent(correlationId));\r\n        }\r\n\r\n        return str.join('&');\r\n    };\r\n\r\n    /**\r\n     * Parses the query string parameters into a key-value pair object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._deserialize = function (query) {\r\n        var match,\r\n            pl = /\\+/g,  // Regex for replacing addition symbol with a space\r\n            search = /([^&=]+)=([^&]*)/g,\r\n            decode = function (s) {\r\n                return decodeURIComponent(s.replace(pl, ' '));\r\n            },\r\n            obj = {};\r\n        match = search.exec(query);\r\n\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Converts decimal value to hex equivalent\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._decimalToHex = function (number) {\r\n        var hex = number.toString(16);\r\n\r\n        while (hex.length < 2) {\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n\r\n    /**\r\n     * Generates RFC4122 version 4 guid (128 bits)\r\n     * @ignore\r\n     */\r\n    /* jshint ignore:start */\r\n    AuthenticationContext.prototype._guid = function () {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n        var cryptoObj = window.crypto || window.msCrypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return this._decimalToHex(buffer[0]) + this._decimalToHex(buffer[1]) + this._decimalToHex(buffer[2]) + this._decimalToHex(buffer[3]) + '-' + this._decimalToHex(buffer[4]) + this._decimalToHex(buffer[5]) + '-' + this._decimalToHex(buffer[6]) + this._decimalToHex(buffer[7]) + '-' +\r\n                this._decimalToHex(buffer[8]) + this._decimalToHex(buffer[9]) + '-' + this._decimalToHex(buffer[10]) + this._decimalToHex(buffer[11]) + this._decimalToHex(buffer[12]) + this._decimalToHex(buffer[13]) + this._decimalToHex(buffer[14]) + this._decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n            var hex = '0123456789abcdef';\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== '-' && guidHolder[i] !== '4') {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === 'x') {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === 'y') {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * Calculates the expires in value in milliseconds for the acquired token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._expiresIn = function (expires) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expires) expires = 3599;\r\n        return this._now() + parseInt(expires, 10);\r\n    };\r\n\r\n    /**\r\n     * Return the number of milliseconds since 1970/01/01\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n\r\n    /**\r\n     * Adds the hidden iframe for silent token renewal\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addAdalFrame = function (iframeId) {\r\n        if (typeof iframeId === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.info('Add adal frame to document:' + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n\r\n        if (!adalFrame) {\r\n            if (document.createElement && document.documentElement &&\r\n                (window.opera || window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {\r\n                var ifr = document.createElement('iframe');\r\n                ifr.setAttribute('id', iframeId);\r\n                ifr.setAttribute('aria-hidden', 'true');\r\n                ifr.style.visibility = 'hidden';\r\n                ifr.style.position = 'absolute';\r\n                ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';\r\n\r\n                adalFrame = document.getElementsByTagName('body')[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML('beforeEnd', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                adalFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n\r\n        return adalFrame;\r\n    };\r\n\r\n    /**\r\n     * Saves the key-value pair in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._saveItem = function (key, obj, preserve) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return false;\r\n            }\r\n\r\n            if (preserve) {\r\n                var value = this._getItem(key) || '';\r\n                localStorage.setItem(key, value + obj + this.CONSTANTS.CACHE_DELIMETER);\r\n            }\r\n            else {\r\n                localStorage.setItem(key, obj);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return false;\r\n        }\r\n\r\n        sessionStorage.setItem(key, obj);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Searches the value for the given key in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getItem = function (key) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return null;\r\n            }\r\n\r\n            return localStorage.getItem(key);\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return null;\r\n        }\r\n\r\n        return sessionStorage.getItem(key);\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports localStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsLocalStorage = function () {\r\n        try {\r\n            if (!window.localStorage) return false; // Test availability\r\n            window.localStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.localStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.localStorage.removeItem('storageTest'); // Try delete\r\n            if (window.localStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports sessionStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsSessionStorage = function () {\r\n        try {\r\n            if (!window.sessionStorage) return false; // Test availability\r\n            window.sessionStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.sessionStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.sessionStorage.removeItem('storageTest'); // Try delete\r\n            if (window.sessionStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a cloned copy of the passed object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._cloneConfig = function (obj) {\r\n        if (null === obj || 'object' !== typeof obj) {\r\n            return obj;\r\n        }\r\n\r\n        var copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = obj[attr];\r\n            }\r\n        }\r\n        return copy;\r\n    };\r\n\r\n    /**\r\n     * Adds the library version and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addLibMetadata = function () {\r\n        // x-client-SKU\r\n        // x-client-Ver\r\n        return '&x-client-SKU=Js&x-client-Ver=' + this._libVersion();\r\n    };\r\n\r\n    /**\r\n     * Checks the Logging Level, constructs the Log message and logs it. Users need to implement/override this method to turn on Logging. \r\n     * @param {number} level  -  Level can be set 0,1,2 and 3 which turns on 'error', 'warning', 'info' or 'verbose' level logging respectively.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.log = function (level, message, error, containsPii) {\r\n\r\n        if (level <= Logging.level) {\r\n\r\n            if (!Logging.piiLoggingEnabled && containsPii)\r\n                return;\r\n\r\n            var timestamp = new Date().toUTCString();\r\n            var formattedMessage = '';\r\n\r\n            if (this.config.correlationId)\r\n                formattedMessage = timestamp + ':' + this.config.correlationId + '-' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n            else\r\n                formattedMessage = timestamp + ':' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n\r\n            if (error) {\r\n                formattedMessage += '\\nstack:\\n' + error.stack;\r\n            }\r\n\r\n            Logging.log(formattedMessage);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 0.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.error = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 1.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warn = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.info = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbose = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null);\r\n    };\r\n\r\n    /**\r\n    * Logs Pii messages when Logging Level is set to 0 and window.piiLoggingEnabled is set to true.\r\n    * @param {string} message  -  Message to log.\r\n    * @param {string} error  -  Error to log.\r\n    */\r\n    AuthenticationContext.prototype.errorPii = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error, true);\r\n    };\r\n\r\n    /**\r\n     * Logs  Pii messages when Logging Level is set to 1 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warnPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.infoPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbosePii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null, true);\r\n    };\r\n    /**\r\n     * Returns the library version.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._libVersion = function () {\r\n        return '1.0.17';\r\n    };\r\n\r\n    /**\r\n     * Returns a reference of Authentication Context as a result of a require call.\r\n     * @ignore\r\n     */\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = AuthenticationContext;\r\n        module.exports.inject = function (conf) {\r\n            return new AuthenticationContext(conf);\r\n        };\r\n    }\r\n\r\n    return AuthenticationContext;\r\n\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adal-angular/lib/adal.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}